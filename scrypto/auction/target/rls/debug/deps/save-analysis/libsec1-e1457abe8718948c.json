{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1","program":"/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sec1","--edition=2021","/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"subtle\"","--cfg","feature=\"zeroize\"","-C","metadata=e1457abe8718948c","-C","extra-filename=-e1457abe8718948c","--out-dir","/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","-L","dependency=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","--extern","der=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libder-c2f7224cc774c6d2.rmeta","--extern","generic_array=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libgeneric_array-ebb5ea82e1532a0a.rmeta","--extern","subtle=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libsubtle-9da77050f7ebd6d9.rmeta","--extern","zeroize=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libzeroize-88d257835a960c99.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libsec1-e1457abe8718948c.rmeta"},"prelude":{"crate_id":{"name":"sec1","disambiguator":[8860017960032551140,0]},"crate_root":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src","external_crates":[{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","num":4,"id":{"name":"generic_array","disambiguator":[148266758978165011,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","num":5,"id":{"name":"typenum","disambiguator":[9985697950693171865,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","num":6,"id":{"name":"subtle","disambiguator":[7554292207942428633,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","num":7,"id":{"name":"zeroize","disambiguator":[123217666717464257,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","num":8,"id":{"name":"der","disambiguator":[10087981493866312366,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","num":9,"id":{"name":"const_oid","disambiguator":[1816347806600932989,0]}}],"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":0,"byte_end":1924,"line_start":1,"line_end":66,"column_start":1,"column_end":88}},"imports":[{"kind":"Use","ref_id":{"krate":8,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1021,"byte_end":1024,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"alias_span":null,"name":"der","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1055,"byte_end":1060,"line_start":37,"line_end":37,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1062,"byte_end":1068,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1087,"byte_end":1099,"line_start":38,"line_end":38,"column_start":17,"column_end":29},"alias_span":null,"name":"EcParameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1112,"byte_end":1124,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1143,"byte_end":1155,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"alias_span":null,"name":"EcPrivateKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1169,"byte_end":1187,"line_start":41,"line_end":41,"column_start":13,"column_end":31},"alias_span":null,"name":"DecodeEcPrivateKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2827},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":1225,"byte_end":1231,"line_start":44,"line_end":44,"column_start":33,"column_end":39},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":0,"byte_end":1924,"line_start":1,"line_end":66,"column_start":1,"column_end":88},"name":"","qualname":"::","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":140},{"krate":0,"index":150},{"krate":0,"index":194},{"krate":0,"index":261},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290}],"decl_id":null,"docs":"# [RustCrypto]: SEC1 Elliptic Curve Cryptography Formats","sig":null,"attributes":[{"value":"/ ## `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":40,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, the [`EncodedPoint`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":67,"byte_end":142,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ type receives impls of [`serde::Serialize`] and [`serde::Deserialize`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":143,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":219,"byte_end":222,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additionally, when both the `alloc` and `serde` features are enabled, the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":223,"byte_end":300,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ serializers/deserializers will autodetect if a \"human friendly\" textual","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":301,"byte_end":376,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ encoding is being used, and if so encode the points as hexadecimal.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":377,"byte_end":448,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":450,"byte_end":460,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":741,"byte_end":785,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":786,"byte_end":849,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"point","qualname":"::point","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":67},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":318},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":127},{"krate":0,"index":357},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":131},{"krate":0,"index":138}],"decl_id":null,"docs":" Support for the SEC1 `Elliptic-Curve-Point-to-Octet-String` and\n `Octet-String-to-Elliptic-Curve-Point` encoding algorithms.","sig":null,"attributes":[{"value":"/ Support for the SEC1 `Elliptic-Curve-Point-to-Octet-String` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":1926,"byte_end":1993,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/ `Octet-String-to-Elliptic-Curve-Point` encoding algorithms.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":1994,"byte_end":2057,"line_start":2,"line_end":2,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2058,"byte_end":2061,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Described in [SEC1: Elliptic Curve Cryptography] (Version 2.0) section 2.3.3 (p.10).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2062,"byte_end":2150,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2151,"byte_end":2154,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [SEC1: Elliptic Curve Cryptography]: https://www.secg.org/sec1-v2.pdf","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2155,"byte_end":2228,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2907,"byte_end":2918,"line_start":35,"line_end":35,"column_start":11,"column_end":22},"name":"ModulusSize","qualname":"::point::ModulusSize","value":"ModulusSize: 'static + ArrayLength<u8> + Copy + Debug","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"decl_id":null,"docs":" Trait for supported modulus sizes which precomputes the typenums for\n various point encodings so they don't need to be included as bounds.\n","sig":null,"attributes":[{"value":"/ Trait for supported modulus sizes which precomputes the typenums for","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2683,"byte_end":2755,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ various point encodings so they don't need to be included as bounds.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2756,"byte_end":2828,"line_start":33,"line_end":33,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3176,"byte_end":3195,"line_start":39,"line_end":39,"column_start":10,"column_end":29},"name":"CompressedPointSize","qualname":"::point::ModulusSize::CompressedPointSize","value":"type CompressedPointSize: 'static + ArrayLength<u8> + Copy + Debug;","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Size of a compressed point for the given elliptic curve when encoded\n using the SEC1 `Elliptic-Curve-Point-to-Octet-String` algorithm\n (including leading `0x02` or `0x03` tag byte).\n","sig":null,"attributes":[{"value":"/ Size of a compressed point for the given elliptic curve when encoded","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2967,"byte_end":3039,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ using the SEC1 `Elliptic-Curve-Point-to-Octet-String` algorithm","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3044,"byte_end":3111,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ (including leading `0x02` or `0x03` tag byte).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3116,"byte_end":3166,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":64},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3446,"byte_end":3467,"line_start":44,"line_end":44,"column_start":10,"column_end":31},"name":"UncompressedPointSize","qualname":"::point::ModulusSize::UncompressedPointSize","value":"type UncompressedPointSize: 'static + ArrayLength<u8> + Copy + Debug;","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Size of an uncompressed point for the given elliptic curve when encoded\n using the SEC1 `Elliptic-Curve-Point-to-Octet-String` algorithm\n (including leading `0x04` tag byte).\n","sig":null,"attributes":[{"value":"/ Size of an uncompressed point for the given elliptic curve when encoded","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3244,"byte_end":3319,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ using the SEC1 `Elliptic-Curve-Point-to-Octet-String` algorithm","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3324,"byte_end":3391,"line_start":42,"line_end":42,"column_start":5,"column_end":72}},{"value":"/ (including leading `0x04` tag byte).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3396,"byte_end":3436,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3638,"byte_end":3655,"line_start":48,"line_end":48,"column_start":10,"column_end":27},"name":"UntaggedPointSize","qualname":"::point::ModulusSize::UntaggedPointSize","value":"type UntaggedPointSize: 'static + ArrayLength<u8> + Copy + Debug;","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Size of an untagged point for given elliptic curve, i.e. size of two\n serialized base field elements.\n","sig":null,"attributes":[{"value":"/ Size of an untagged point for given elliptic curve, i.e. size of two","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3516,"byte_end":3588,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ serialized base field elements.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":3593,"byte_end":3628,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4323,"byte_end":4335,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"EncodedPoint","qualname":"::point::EncodedPoint","value":"EncodedPoint {  }","parent":null,"children":[{"krate":0,"index":311}],"decl_id":null,"docs":" SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ SEC1 encoded curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4076,"byte_end":4105,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4106,"byte_end":4109,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is an enum over the compressed and uncompressed encodings,","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4110,"byte_end":4182,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ useful for cases where either encoding can be supported, or conversions","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4183,"byte_end":4258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ between the two forms.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4259,"byte_end":4285,"line_start":67,"line_end":67,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4828,"byte_end":4838,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<EncodedPoint<Size>>::from_bytes","value":"pub fn from_bytes<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode elliptic curve point (compressed or uncompressed) from the\n `Elliptic-Curve-Point-to-Octet-String` encoding described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode elliptic curve point (compressed or uncompressed) from the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4538,"byte_end":4607,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding described in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4612,"byte_end":4676,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4681,"byte_end":4741,"line_start":83,"line_end":83,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4746,"byte_end":4766,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4771,"byte_end":4774,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4779,"byte_end":4816,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5658,"byte_end":5677,"line_start":112,"line_end":112,"column_start":12,"column_end":31},"name":"from_untagged_bytes","qualname":"<EncodedPoint<Size>>::from_untagged_bytes","value":"pub fn from_untagged_bytes(&GenericArray<u8, Size::UntaggedPointSize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Decode elliptic curve point from raw uncompressed coordinates, i.e.\n encoded as the concatenated `x || y` coordinates with no leading SEC1\n tag byte (which would otherwise be `0x04` for an uncompressed point).\n","sig":null,"attributes":[{"value":"/ Decode elliptic curve point from raw uncompressed coordinates, i.e.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5419,"byte_end":5490,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ encoded as the concatenated `x || y` coordinates with no leading SEC1","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5495,"byte_end":5568,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ tag byte (which would otherwise be `0x04` for an uncompressed point).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5573,"byte_end":5646,"line_start":111,"line_end":111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5997,"byte_end":6020,"line_start":119,"line_end":119,"column_start":12,"column_end":35},"name":"from_affine_coordinates","qualname":"<EncodedPoint<Size>>::from_affine_coordinates","value":"pub fn from_affine_coordinates(&GenericArray<u8, Size>,\n&GenericArray<u8, Size>, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode an elliptic curve point from big endian serialized coordinates\n (with optional point compression)\n","sig":null,"attributes":[{"value":"/ Encode an elliptic curve point from big endian serialized coordinates","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5870,"byte_end":5943,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ (with optional point compression)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":5948,"byte_end":5985,"line_start":118,"line_end":118,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6650,"byte_end":6658,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"identity","qualname":"<EncodedPoint<Size>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return [`EncodedPoint`] representing the additive identity\n (a.k.a. point at infinity)\n","sig":null,"attributes":[{"value":"/ Return [`EncodedPoint`] representing the additive identity","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6541,"byte_end":6603,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/ (a.k.a. point at infinity)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6608,"byte_end":6638,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6766,"byte_end":6769,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<EncodedPoint<Size>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the encoded point in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the encoded point in bytes","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6706,"byte_end":6754,"line_start":147,"line_end":147,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6922,"byte_end":6930,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<EncodedPoint<Size>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get byte slice containing the serialized [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Get byte slice containing the serialized [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":6848,"byte_end":6910,"line_start":152,"line_end":152,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7299,"byte_end":7309,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"is_compact","qualname":"<EncodedPoint<Size>>::is_compact","value":"pub fn is_compact(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this [`EncodedPoint`] compact?\n","sig":null,"attributes":[{"value":"/ Is this [`EncodedPoint`] compact?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7250,"byte_end":7287,"line_start":164,"line_end":164,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7422,"byte_end":7435,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<EncodedPoint<Size>>::is_compressed","value":"pub fn is_compressed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this [`EncodedPoint`] compressed?\n","sig":null,"attributes":[{"value":"/ Is this [`EncodedPoint`] compressed?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7370,"byte_end":7410,"line_start":169,"line_end":169,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7589,"byte_end":7600,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<EncodedPoint<Size>>::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this [`EncodedPoint`] the additive identity? (a.k.a. point at infinity)\n","sig":null,"attributes":[{"value":"/ Is this [`EncodedPoint`] the additive identity? (a.k.a. point at infinity)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7499,"byte_end":7577,"line_start":174,"line_end":174,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7743,"byte_end":7751,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"compress","qualname":"<EncodedPoint<Size>>::compress","value":"pub fn compress(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compress this [`EncodedPoint`], returning a new [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Compress this [`EncodedPoint`], returning a new [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":7662,"byte_end":7731,"line_start":179,"line_end":179,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8114,"byte_end":8117,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"tag","qualname":"<EncodedPoint<Size>>::tag","value":"pub fn tag(&Self) -> Tag","parent":null,"children":[],"decl_id":null,"docs":" Get the SEC1 tag for this [`EncodedPoint`]\n","sig":null,"attributes":[{"value":"/ Get the SEC1 tag for this [`EncodedPoint`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8056,"byte_end":8102,"line_start":189,"line_end":189,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8334,"byte_end":8345,"line_start":197,"line_end":197,"column_start":12,"column_end":23},"name":"coordinates","qualname":"<EncodedPoint<Size>>::coordinates","value":"pub fn coordinates(&Self) -> Coordinates<, Size>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Coordinates`] for this [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Get the [`Coordinates`] for this [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8254,"byte_end":8308,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8313,"byte_end":8322,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9067,"byte_end":9068,"line_start":222,"line_end":222,"column_start":12,"column_end":13},"name":"x","qualname":"<EncodedPoint<Size>>::x","value":"pub fn x(&Self) -> Option<&GenericArray<u8, Size>>","parent":null,"children":[],"decl_id":null,"docs":" Get the x-coordinate for this [`EncodedPoint`].","sig":null,"attributes":[{"value":"/ Get the x-coordinate for this [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8936,"byte_end":8987,"line_start":219,"line_end":219,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":8992,"byte_end":8995,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this point is the identity point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9000,"byte_end":9055,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9526,"byte_end":9527,"line_start":234,"line_end":234,"column_start":12,"column_end":13},"name":"y","qualname":"<EncodedPoint<Size>>::y","value":"pub fn y(&Self) -> Option<&GenericArray<u8, Size>>","parent":null,"children":[],"decl_id":null,"docs":" Get the y-coordinate for this [`EncodedPoint`].","sig":null,"attributes":[{"value":"/ Get the y-coordinate for this [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9381,"byte_end":9432,"line_start":231,"line_end":231,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9437,"byte_end":9440,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this point is compressed or the identity point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9445,"byte_end":9514,"line_start":233,"line_end":233,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16111,"byte_end":16119,"line_start":485,"line_end":485,"column_start":5,"column_end":13},"name":"Identity","qualname":"::point::Coordinates::Identity","value":"Coordinates::Identity","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Identity point (a.k.a. point at infinity)\n","sig":null,"attributes":[{"value":"/ Identity point (a.k.a. point at infinity)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16061,"byte_end":16106,"line_start":484,"line_end":484,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":323},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16154,"byte_end":16161,"line_start":488,"line_end":488,"column_start":5,"column_end":12},"name":"Compact","qualname":"::point::Coordinates::Compact","value":"Coordinates::Compact { x }","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Compact curve point\n","sig":null,"attributes":[{"value":"/ Compact curve point","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16126,"byte_end":16149,"line_start":487,"line_end":487,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":325},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16271,"byte_end":16281,"line_start":494,"line_end":494,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::point::Coordinates::Compressed","value":"Coordinates::Compressed { x, y_is_odd }","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Compressed curve point\n","sig":null,"attributes":[{"value":"/ Compressed curve point","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16240,"byte_end":16266,"line_start":493,"line_end":493,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":328},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16455,"byte_end":16467,"line_start":503,"line_end":503,"column_start":5,"column_end":17},"name":"Uncompressed","qualname":"::point::Coordinates::Uncompressed","value":"Coordinates::Uncompressed { x, y }","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Uncompressed curve point\n","sig":null,"attributes":[{"value":"/ Uncompressed curve point","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16422,"byte_end":16450,"line_start":502,"line_end":502,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":318},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16020,"byte_end":16031,"line_start":483,"line_end":483,"column_start":10,"column_end":21},"name":"Coordinates","qualname":"::point::Coordinates","value":"pub enum Coordinates<'a, Size: ModulusSize> {\n    Identity,\n    Compact {\n            x: &'a GenericArray<u8, Size>,\n        },\n    Compressed {\n            x: &'a GenericArray<u8, Size>,\n            y_is_odd: bool,\n        },\n    Uncompressed {\n            x: &'a GenericArray<u8, Size>,\n            y: &'a GenericArray<u8, Size>,\n        },\n}","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":328}],"decl_id":null,"docs":" Enum representing the coordinates of either compressed or uncompressed\n SEC1-encoded elliptic curve points.\n","sig":null,"attributes":[{"value":"/ Enum representing the coordinates of either compressed or uncompressed","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":15851,"byte_end":15925,"line_start":480,"line_end":480,"column_start":1,"column_end":75}},{"value":"/ SEC1-encoded elliptic curve points.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":15926,"byte_end":15965,"line_start":481,"line_end":481,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16743,"byte_end":16746,"line_start":514,"line_end":514,"column_start":12,"column_end":15},"name":"tag","qualname":"<Coordinates>::tag","value":"pub fn tag(&Self) -> Tag","parent":null,"children":[],"decl_id":null,"docs":" Get the tag octet needed to encode this set of [`Coordinates`]\n","sig":null,"attributes":[{"value":"/ Get the tag octet needed to encode this set of [`Coordinates`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16665,"byte_end":16731,"line_start":513,"line_end":513,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":358},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17388,"byte_end":17396,"line_start":535,"line_end":535,"column_start":5,"column_end":13},"name":"Identity","qualname":"::point::Tag::Identity","value":"Tag::Identity","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Identity point (`0x00`)\n","sig":null,"attributes":[{"value":"/ Identity point (`0x00`)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17356,"byte_end":17383,"line_start":534,"line_end":534,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":361},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17464,"byte_end":17479,"line_start":538,"line_end":538,"column_start":5,"column_end":20},"name":"CompressedEvenY","qualname":"::point::Tag::CompressedEvenY","value":"Tag::CompressedEvenY","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Compressed point with even y-coordinate (`0x02`)\n","sig":null,"attributes":[{"value":"/ Compressed point with even y-coordinate (`0x02`)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17407,"byte_end":17459,"line_start":537,"line_end":537,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17546,"byte_end":17560,"line_start":541,"line_end":541,"column_start":5,"column_end":19},"name":"CompressedOddY","qualname":"::point::Tag::CompressedOddY","value":"Tag::CompressedOddY","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Compressed point with odd y-coordinate (`0x03`)\n","sig":null,"attributes":[{"value":"/ Compressed point with odd y-coordinate (`0x03`)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17490,"byte_end":17541,"line_start":540,"line_end":540,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17607,"byte_end":17619,"line_start":544,"line_end":544,"column_start":5,"column_end":17},"name":"Uncompressed","qualname":"::point::Tag::Uncompressed","value":"Tag::Uncompressed","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Uncompressed point (`0x04`)\n","sig":null,"attributes":[{"value":"/ Uncompressed point (`0x04`)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17571,"byte_end":17602,"line_start":543,"line_end":543,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17661,"byte_end":17668,"line_start":547,"line_end":547,"column_start":5,"column_end":12},"name":"Compact","qualname":"::point::Tag::Compact","value":"Tag::Compact","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Compact point (`0x05`)\n","sig":null,"attributes":[{"value":"/ Compact point (`0x05`)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17630,"byte_end":17656,"line_start":546,"line_end":546,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":357},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17346,"byte_end":17349,"line_start":533,"line_end":533,"column_start":10,"column_end":13},"name":"Tag","qualname":"::point::Tag","value":"pub enum Tag {\n    Identity = ,\n    CompressedEvenY = ,\n    CompressedOddY = ,\n    Uncompressed = ,\n    Compact = ,\n}","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370}],"decl_id":null,"docs":" Tag byte used by the `Elliptic-Curve-Point-to-Octet-String` encoding.\n","sig":null,"attributes":[{"value":"/ Tag byte used by the `Elliptic-Curve-Point-to-Octet-String` encoding.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17206,"byte_end":17279,"line_start":530,"line_end":530,"column_start":1,"column_end":74}},{"value":"repr(u8)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17325,"byte_end":17336,"line_start":532,"line_end":532,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17737,"byte_end":17744,"line_start":552,"line_end":552,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Tag>::from_u8","value":"pub fn from_u8(u8) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a tag value from a byte\n","sig":null,"attributes":[{"value":"/ Parse a tag value from a byte","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17692,"byte_end":17725,"line_start":551,"line_end":551,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18093,"byte_end":18103,"line_start":564,"line_end":564,"column_start":12,"column_end":22},"name":"is_compact","qualname":"<Tag>::is_compact","value":"pub fn is_compact(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this point compact?\n","sig":null,"attributes":[{"value":"/ Is this point compact?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18055,"byte_end":18081,"line_start":563,"line_end":563,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18209,"byte_end":18222,"line_start":569,"line_end":569,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<Tag>::is_compressed","value":"pub fn is_compressed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this point compressed?\n","sig":null,"attributes":[{"value":"/ Is this point compressed?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18168,"byte_end":18197,"line_start":568,"line_end":568,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18366,"byte_end":18377,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Tag>::is_identity","value":"pub fn is_identity(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this point the identity point?\n","sig":null,"attributes":[{"value":"/ Is this point the identity point?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18317,"byte_end":18354,"line_start":573,"line_end":573,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18644,"byte_end":18655,"line_start":581,"line_end":581,"column_start":12,"column_end":23},"name":"message_len","qualname":"<Tag>::message_len","value":"pub fn message_len(Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the expected total message length for a message prefixed\n with this tag (including the tag byte), given the field element size\n (in bytes) for a particular elliptic curve.\n","sig":null,"attributes":[{"value":"/ Compute the expected total message length for a message prefixed","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18435,"byte_end":18503,"line_start":578,"line_end":578,"column_start":5,"column_end":73}},{"value":"/ with this tag (including the tag byte), given the field element size","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18508,"byte_end":18580,"line_start":579,"line_end":579,"column_start":5,"column_end":77}},{"value":"/ (in bytes) for a particular elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":18585,"byte_end":18632,"line_start":580,"line_end":580,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27719,"byte_end":27725,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type with `sec1` crate's [`Error`] type.\n","sig":null,"attributes":[{"value":"/ Result type with `sec1` crate's [`Error`] type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27658,"byte_end":27709,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27897,"byte_end":27901,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Asn1","qualname":"::error::Error::Asn1","value":"Error::Asn1(der::Error)","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" ASN.1 DER-related errors.\n","sig":null,"attributes":[{"value":"/ ASN.1 DER-related errors.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27863,"byte_end":27892,"line_start":12,"line_end":12,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28237,"byte_end":28243,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::error::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Cryptographic errors.","sig":null,"attributes":[{"value":"/ Cryptographic errors.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27920,"byte_end":27945,"line_start":15,"line_end":15,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27950,"byte_end":27953,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ These can be used by EC implementations to signal that a key is","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27958,"byte_end":28025,"line_start":17,"line_end":17,"column_start":5,"column_end":72}},{"value":"/ invalid for cryptographic reasons. This means the document parsed","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28030,"byte_end":28099,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ correctly, but one of the values contained within was invalid, e.g.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28104,"byte_end":28175,"line_start":19,"line_end":19,"column_start":5,"column_end":76}},{"value":"/ a number expected to be a prime was not a prime.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28180,"byte_end":28232,"line_start":20,"line_end":20,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28460,"byte_end":28473,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"name":"PointEncoding","qualname":"::error::Error::PointEncoding","value":"Error::PointEncoding","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Errors relating to the `Elliptic-Curve-Point-to-Octet-String` or\n `Octet-String-to-Elliptic-Curve-Point` encodings.\n","sig":null,"attributes":[{"value":"/ Errors relating to the `Elliptic-Curve-Point-to-Octet-String` or","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28329,"byte_end":28397,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ `Octet-String-to-Elliptic-Curve-Point` encodings.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28402,"byte_end":28455,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28503,"byte_end":28510,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Version","qualname":"::error::Error::Version","value":"Error::Version","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Version errors\n","sig":null,"attributes":[{"value":"/ Version errors","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28480,"byte_end":28498,"line_start":31,"line_end":31,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":384},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27851,"byte_end":27856,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error { Asn1(der::Error), Crypto, PointEncoding, Version, }","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27764,"byte_end":27778,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"non_exhaustive","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":27824,"byte_end":27841,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30482,"byte_end":30492,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"NamedCurve","qualname":"::parameters::EcParameters::NamedCurve","value":"EcParameters::NamedCurve(ObjectIdentifier)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Elliptic curve named by a particular OID.","sig":null,"attributes":[{"value":"/ Elliptic curve named by a particular OID.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30248,"byte_end":30293,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30298,"byte_end":30301,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ > namedCurve identifies all the required values for a particular","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30306,"byte_end":30374,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ > set of elliptic curve domain parameters to be represented by an","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30379,"byte_end":30448,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ > object identifier.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30453,"byte_end":30477,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":406},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30229,"byte_end":30241,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"EcParameters","qualname":"::parameters::EcParameters","value":"pub enum EcParameters { NamedCurve(ObjectIdentifier), }","parent":null,"children":[{"krate":0,"index":407}],"decl_id":null,"docs":" Elliptic curve parameters as described in\n [RFC5480 Section 2.1.1](https://datatracker.ietf.org/doc/html/rfc5480#section-2.1.1):","sig":null,"attributes":[{"value":"/ Elliptic curve parameters as described in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29641,"byte_end":29686,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/ [RFC5480 Section 2.1.1](https://datatracker.ietf.org/doc/html/rfc5480#section-2.1.1):","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29687,"byte_end":29776,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29777,"byte_end":29780,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29781,"byte_end":29792,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ ECParameters ::= CHOICE {","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29793,"byte_end":29822,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/   namedCurve         OBJECT IDENTIFIER","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29823,"byte_end":29865,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/   -- implicitCurve   NULL","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29866,"byte_end":29895,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/   -- specifiedCurve  SpecifiedECDomain","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29896,"byte_end":29938,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29939,"byte_end":29944,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/   -- implicitCurve and specifiedCurve MUST NOT be used in PKIX.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":29945,"byte_end":30012,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/   -- Details for SpecifiedECDomain can be found in [X9.62].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30013,"byte_end":30076,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/   -- Any future additions to this CHOICE should be coordinated","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30077,"byte_end":30143,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/   -- with ANSI X9.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30144,"byte_end":30166,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30167,"byte_end":30174,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31152,"byte_end":31163,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"named_curve","qualname":"<EcParameters>::named_curve","value":"pub fn named_curve(Self) -> Option<ObjectIdentifier>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the `namedCurve` OID.\n","sig":null,"attributes":[{"value":"/ Obtain the `namedCurve` OID.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31108,"byte_end":31140,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33602,"byte_end":33614,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"EcPrivateKey","qualname":"::private_key::EcPrivateKey","value":"EcPrivateKey { private_key, parameters, public_key }","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"decl_id":null,"docs":" SEC1 elliptic curve private key.","sig":null,"attributes":[{"value":"/ SEC1 elliptic curve private key.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32831,"byte_end":32867,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32868,"byte_end":32871,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Described in [SEC1: Elliptic Curve Cryptography (Version 2.0)]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32872,"byte_end":32938,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ Appendix C.4 (p.108) and also [RFC5915 Section 3]:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32939,"byte_end":32993,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32994,"byte_end":32997,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":32998,"byte_end":33009,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ ECPrivateKey ::= SEQUENCE {","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33010,"byte_end":33041,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/   version        INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33042,"byte_end":33108,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/   privateKey     OCTET STRING,","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33109,"byte_end":33143,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/   parameters [0] ECParameters {{ NamedCurve }} OPTIONAL,","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33144,"byte_end":33204,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/   publicKey  [1] BIT STRING OPTIONAL","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33205,"byte_end":33245,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33246,"byte_end":33251,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33252,"byte_end":33259,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33260,"byte_end":33263,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When encoded as PEM (text), keys in this format begin with the following:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33264,"byte_end":33341,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33342,"byte_end":33345,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33346,"byte_end":33357,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN EC PRIVATE KEY-----","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33358,"byte_end":33392,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33393,"byte_end":33400,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33401,"byte_end":33404,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [SEC1: Elliptic Curve Cryptography (Version 2.0)]: https://www.secg.org/sec1-v2.pdf","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33405,"byte_end":33492,"line_start":55,"line_end":55,"column_start":1,"column_end":88}},{"value":"/ [RFC5915 Section 3]: https://datatracker.ietf.org/doc/html/rfc5915#section-3","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33493,"byte_end":33573,"line_start":56,"line_end":56,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33655,"byte_end":33666,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"private_key","qualname":"::private_key::EcPrivateKey::private_key","value":"&'a [u8]","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" Private key data.\n","sig":null,"attributes":[{"value":"/ Private key data.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33625,"byte_end":33646,"line_start":59,"line_end":59,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":425},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33722,"byte_end":33732,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"name":"parameters","qualname":"::private_key::EcPrivateKey::parameters","value":"core::option::Option<parameters::EcParameters>","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" Elliptic curve parameters.\n","sig":null,"attributes":[{"value":"/ Elliptic curve parameters.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33683,"byte_end":33713,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":426},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33829,"byte_end":33839,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"public_key","qualname":"::private_key::EcPrivateKey::public_key","value":"core::option::Option<&'a [u8]>","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" Public key data, optionally available if version is V2.\n","sig":null,"attributes":[{"value":"/ Public key data, optionally available if version is V2.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33761,"byte_end":33820,"line_start":65,"line_end":65,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36572,"byte_end":36590,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"DecodeEcPrivateKey","qualname":"::traits::DecodeEcPrivateKey","value":"DecodeEcPrivateKey: Sized","parent":null,"children":[{"krate":0,"index":266}],"decl_id":null,"docs":" Parse an [`EcPrivateKey`] from a SEC1-encoded document.\n","sig":null,"attributes":[{"value":"/ Parse an [`EcPrivateKey`] from a SEC1-encoded document.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36502,"byte_end":36561,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36697,"byte_end":36710,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"from_sec1_der","qualname":"::traits::DecodeEcPrivateKey::from_sec1_der","value":"pub fn from_sec1_der(&[u8]) -> Result<Self>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Deserialize SEC1 private key from ASN.1 DER-encoded data\n (binary format).\n","sig":null,"attributes":[{"value":"/ Deserialize SEC1 private key from ASN.1 DER-encoded data","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36604,"byte_end":36664,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/ (binary format).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36669,"byte_end":36689,"line_start":29,"line_end":29,"column_start":5,"column_end":25}}]}],"impls":[{"id":4,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4484,"byte_end":4496,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9838,"byte_end":9850,"line_start":243,"line_end":243,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10033,"byte_end":10045,"line_start":254,"line_end":254,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10473,"byte_end":10485,"line_start":270,"line_end":270,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10618,"byte_end":10630,"line_start":277,"line_end":277,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10831,"byte_end":10843,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10879,"byte_end":10891,"line_start":288,"line_end":288,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11062,"byte_end":11074,"line_start":297,"line_end":297,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11245,"byte_end":11257,"line_start":306,"line_end":306,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11439,"byte_end":11451,"line_start":315,"line_end":315,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11654,"byte_end":11666,"line_start":327,"line_end":327,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11833,"byte_end":11845,"line_start":337,"line_end":337,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12016,"byte_end":12028,"line_start":346,"line_end":346,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12270,"byte_end":12282,"line_start":358,"line_end":358,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12669,"byte_end":12681,"line_start":374,"line_end":374,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16637,"byte_end":16648,"line_start":512,"line_end":512,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17682,"byte_end":17685,"line_start":550,"line_end":550,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28537,"byte_end":28542,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":29062,"byte_end":29067,"line_start":48,"line_end":48,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30540,"byte_end":30552,"line_start":30,"line_end":30,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30749,"byte_end":30761,"line_start":36,"line_end":36,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31089,"byte_end":31101,"line_start":50,"line_end":50,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31324,"byte_end":31327,"line_start":59,"line_end":59,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31516,"byte_end":31528,"line_start":67,"line_end":67,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31649,"byte_end":31661,"line_start":73,"line_end":73,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33889,"byte_end":33901,"line_start":69,"line_end":69,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":34707,"byte_end":34719,"line_start":92,"line_end":92,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":35553,"byte_end":35565,"line_start":119,"line_end":119,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":35735,"byte_end":35747,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/lib.rs","byte_start":948,"byte_end":953,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2930,"byte_end":2941,"line_start":35,"line_end":35,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":4,"index":456},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2948,"byte_end":2952,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":2955,"byte_end":2960,"line_start":35,"line_end":35,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":1,"index":9687},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":4484,"byte_end":4496,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":9838,"byte_end":9850,"line_start":243,"line_end":243,"column_start":28,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10033,"byte_end":10045,"line_start":254,"line_end":254,"column_start":40,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":309},"to":{"krate":6,"index":65}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10473,"byte_end":10485,"line_start":270,"line_end":270,"column_start":21,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10618,"byte_end":10630,"line_start":277,"line_end":277,"column_start":22,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10831,"byte_end":10843,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":10879,"byte_end":10891,"line_start":288,"line_end":288,"column_start":26,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11062,"byte_end":11074,"line_start":297,"line_end":297,"column_start":40,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11245,"byte_end":11257,"line_start":306,"line_end":306,"column_start":33,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11439,"byte_end":11451,"line_start":315,"line_end":315,"column_start":44,"column_end":56},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11654,"byte_end":11666,"line_start":327,"line_end":327,"column_start":24,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":309},"to":{"krate":7,"index":68}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":11833,"byte_end":11845,"line_start":337,"line_end":337,"column_start":29,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12016,"byte_end":12028,"line_start":346,"line_end":346,"column_start":30,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":9700}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12270,"byte_end":12282,"line_start":358,"line_end":358,"column_start":30,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":9702}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":12669,"byte_end":12681,"line_start":374,"line_end":374,"column_start":29,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":309},"to":{"krate":1,"index":12326}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":16637,"byte_end":16648,"line_start":512,"line_end":512,"column_start":29,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/point.rs","byte_start":17682,"byte_end":17685,"line_start":550,"line_end":550,"column_start":6,"column_end":9},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":28537,"byte_end":28542,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":384},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/error.rs","byte_start":29062,"byte_end":29067,"line_start":48,"line_end":48,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":384},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30540,"byte_end":30552,"line_start":30,"line_end":30,"column_start":26,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":406},"to":{"krate":8,"index":2452}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":30749,"byte_end":30761,"line_start":36,"line_end":36,"column_start":22,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":406},"to":{"krate":8,"index":2455}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31089,"byte_end":31101,"line_start":50,"line_end":50,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31324,"byte_end":31327,"line_start":59,"line_end":59,"column_start":37,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":8,"index":2547},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31516,"byte_end":31528,"line_start":67,"line_end":67,"column_start":33,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":406},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/parameters.rs","byte_start":31649,"byte_end":31661,"line_start":73,"line_end":73,"column_start":19,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":406},"to":{"krate":8,"index":2391}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":33889,"byte_end":33901,"line_start":69,"line_end":69,"column_start":28,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":422},"to":{"krate":8,"index":1754}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":34707,"byte_end":34719,"line_start":92,"line_end":92,"column_start":27,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":422},"to":{"krate":8,"index":1119}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":35553,"byte_end":35565,"line_start":119,"line_end":119,"column_start":32,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/private_key.rs","byte_start":35735,"byte_end":35747,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/sec1-0.2.1/src/traits.rs","byte_start":36592,"byte_end":36597,"line_start":27,"line_end":27,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":265}}]}