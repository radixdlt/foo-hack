{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3","program":"/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","wasmi","--edition=2021","/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=bf33da68fceff775","-C","extra-filename=-bf33da68fceff775","--out-dir","/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","-L","dependency=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","--extern","parity_wasm=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libparity_wasm-d25b84c070a1d499.rmeta","--extern","validation=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libwasmi_validation-33d8b629099bdbe3.rmeta","--extern","wasmi_core=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libwasmi_core-752e1b1a4477479e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libwasmi-bf33da68fceff775.rmeta"},"prelude":{"crate_id":{"name":"wasmi","disambiguator":[11086602728083115531,0]},"crate_root":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src","external_crates":[{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","num":20,"id":{"name":"parity_wasm","disambiguator":[8336534826214409999,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","num":21,"id":{"name":"wasmi_validation","disambiguator":[2144723786980081800,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":22,"id":{"name":"wasmi_core","disambiguator":[7196022326410382719,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":23,"id":{"name":"downcast_rs","disambiguator":[16027916277018509180,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":24,"id":{"name":"num_traits","disambiguator":[1464997480893753431,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":25,"id":{"name":"memory_units","disambiguator":[16540806522057667220,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":26,"id":{"name":"num_rational","disambiguator":[17689483534829793159,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":27,"id":{"name":"num_bigint","disambiguator":[1233998094030275633,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":28,"id":{"name":"num_integer","disambiguator":[6193780255432601147,0]}},{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","num":29,"id":{"name":"libm","disambiguator":[10798412662150722973,0]}}],"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":0,"byte_end":14657,"line_start":1,"line_end":462,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8778,"byte_end":8790,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"alias_span":null,"name":"FuncInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8792,"byte_end":8806,"line_start":274,"line_end":274,"column_start":26,"column_end":40},"alias_span":null,"name":"FuncInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8808,"byte_end":8815,"line_start":274,"line_end":274,"column_start":42,"column_end":49},"alias_span":null,"name":"FuncRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8817,"byte_end":8831,"line_start":274,"line_end":274,"column_start":51,"column_end":65},"alias_span":null,"name":"ResumableError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8847,"byte_end":8861,"line_start":275,"line_end":275,"column_start":14,"column_end":28},"alias_span":null,"name":"GlobalInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8863,"byte_end":8872,"line_start":275,"line_end":275,"column_start":30,"column_end":39},"alias_span":null,"name":"GlobalRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8886,"byte_end":8895,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8897,"byte_end":8909,"line_start":276,"line_end":276,"column_start":23,"column_end":35},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8897,"byte_end":8909,"line_start":276,"line_end":276,"column_start":23,"column_end":35},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8911,"byte_end":8922,"line_start":276,"line_end":276,"column_start":37,"column_end":48},"alias_span":null,"name":"RuntimeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8939,"byte_end":8953,"line_start":277,"line_end":277,"column_start":15,"column_end":29},"alias_span":null,"name":"ImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8955,"byte_end":8969,"line_start":277,"line_end":277,"column_start":31,"column_end":45},"alias_span":null,"name":"ImportsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8971,"byte_end":8991,"line_start":277,"line_end":277,"column_start":47,"column_end":67},"alias_span":null,"name":"ModuleImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9007,"byte_end":9021,"line_start":278,"line_end":278,"column_start":14,"column_end":28},"alias_span":null,"name":"MemoryInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9023,"byte_end":9032,"line_start":278,"line_end":278,"column_start":30,"column_end":39},"alias_span":null,"name":"MemoryRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9034,"byte_end":9057,"line_start":278,"line_end":278,"column_start":41,"column_end":64},"alias_span":null,"name":"LINEAR_MEMORY_PAGE_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9073,"byte_end":9082,"line_start":279,"line_end":279,"column_start":14,"column_end":23},"alias_span":null,"name":"ExternVal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2457},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9084,"byte_end":9098,"line_start":279,"line_end":279,"column_start":25,"column_end":39},"alias_span":null,"name":"ModuleInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2450},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9100,"byte_end":9109,"line_start":279,"line_end":279,"column_start":41,"column_end":50},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2451},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9100,"byte_end":9109,"line_start":279,"line_end":279,"column_start":41,"column_end":50},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9111,"byte_end":9130,"line_start":279,"line_end":279,"column_start":52,"column_end":71},"alias_span":null,"name":"NotStartedModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9146,"byte_end":9159,"line_start":280,"line_end":280,"column_start":14,"column_end":27},"alias_span":null,"name":"StackRecycler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9161,"byte_end":9185,"line_start":280,"line_end":280,"column_start":29,"column_end":53},"alias_span":null,"name":"DEFAULT_CALL_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9187,"byte_end":9212,"line_start":280,"line_end":280,"column_start":55,"column_end":80},"alias_span":null,"name":"DEFAULT_VALUE_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1253},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9227,"byte_end":9240,"line_start":281,"line_end":281,"column_start":13,"column_end":26},"alias_span":null,"name":"TableInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2670},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9242,"byte_end":9250,"line_start":281,"line_end":281,"column_start":28,"column_end":36},"alias_span":null,"name":"TableRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9265,"byte_end":9281,"line_start":282,"line_end":282,"column_start":13,"column_end":29},"alias_span":null,"name":"GlobalDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1313},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9283,"byte_end":9299,"line_start":282,"line_end":282,"column_start":31,"column_end":47},"alias_span":null,"name":"MemoryDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2677},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9301,"byte_end":9310,"line_start":282,"line_end":282,"column_start":49,"column_end":58},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1306},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9312,"byte_end":9327,"line_start":282,"line_end":282,"column_start":60,"column_end":75},"alias_span":null,"name":"TableDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1255},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9368,"byte_end":9373,"line_start":285,"line_end":285,"column_start":21,"column_end":26},"alias_span":null,"name":"RuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":525},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9417,"byte_end":9429,"line_start":287,"line_end":287,"column_start":5,"column_end":17},"alias_span":null,"name":"memory_units","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9435,"byte_end":9444,"line_start":288,"line_end":288,"column_start":5,"column_end":14},"alias_span":null,"name":"FromValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9450,"byte_end":9459,"line_start":289,"line_end":289,"column_start":5,"column_end":14},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":400},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9465,"byte_end":9484,"line_start":290,"line_end":290,"column_start":5,"column_end":24},"alias_span":null,"name":"LittleEndianConvert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":724},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9490,"byte_end":9494,"line_start":291,"line_end":291,"column_start":5,"column_end":9},"alias_span":null,"name":"Trap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":733},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9500,"byte_end":9508,"line_start":292,"line_end":292,"column_start":5,"column_end":13},"alias_span":null,"name":"TrapCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1231},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9514,"byte_end":9523,"line_start":293,"line_end":293,"column_start":5,"column_end":14},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":647},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9968,"byte_end":9971,"line_start":315,"line_end":315,"column_start":26,"column_end":29},"alias_span":null,"name":"F32","value":"","parent":{"krate":0,"index":1474}},{"kind":"Use","ref_id":{"krate":22,"index":698},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9973,"byte_end":9976,"line_start":315,"line_end":315,"column_start":31,"column_end":34},"alias_span":null,"name":"F64","value":"","parent":{"krate":0,"index":1474}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":0,"byte_end":14657,"line_start":1,"line_end":462,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":1493},{"krate":0,"index":1521},{"krate":0,"index":24},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":145},{"krate":0,"index":175},{"krate":0,"index":209},{"krate":0,"index":296},{"krate":0,"index":323},{"krate":0,"index":474},{"krate":0,"index":693},{"krate":0,"index":844},{"krate":0,"index":1219},{"krate":0,"index":1272},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1474},{"krate":0,"index":1482},{"krate":0,"index":1485}],"decl_id":null,"docs":" # wasmi","sig":null,"attributes":[{"value":"/ # wasmi","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library allows WebAssembly modules to be loaded in binary format and their functions invoked.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":16,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":119,"byte_end":122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Introduction","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":123,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":142,"byte_end":145,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WebAssembly (wasm) is a safe, portable and compact format that is designed for efficient execution.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":146,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":250,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Wasm code is distributed in the form of modules that contains definitions of:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":254,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - functions,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":340,"byte_end":356,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ - global variables,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":357,"byte_end":380,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ - linear memory instances and","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":381,"byte_end":414,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ - tables.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":415,"byte_end":428,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":429,"byte_end":432,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each of these definitions can be imported and exported.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":433,"byte_end":492,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":493,"byte_end":496,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In addition to these definitions, modules can define initialization data for their memory or tables. This initialization data can take the","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":497,"byte_end":639,"line_start":18,"line_end":18,"column_start":1,"column_end":143}},{"value":"/ form of segments, copied to given offsets. They can also define a `start` function that is automatically executed when the module is loaded.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":640,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":785,"byte_end":788,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Loading and Validation","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":789,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Before execution, a module must be validated. This process checks that the module is well-formed","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":823,"byte_end":923,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"/ and makes only allowed operations.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":924,"byte_end":962,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":963,"byte_end":966,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A valid module can't access memory outside its sandbox, can't cause stack underflows","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":967,"byte_end":1055,"line_start":26,"line_end":26,"column_start":1,"column_end":89}},{"value":"/ and can only call functions with correct signatures.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1056,"byte_end":1112,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1113,"byte_end":1116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Instantiation","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1117,"byte_end":1137,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In order to execute code from a wasm module, it must be instantiated.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1142,"byte_end":1215,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ Instantiation includes the following steps:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1216,"byte_end":1263,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ 1. Creating an empty module instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1268,"byte_end":1309,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ 2. Resolving the definition instances for each declared import in the module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1310,"byte_end":1391,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ 3. Instantiating definitions declared in the module (e.g. allocate global variables, allocate linear memory, etc.).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1392,"byte_end":1511,"line_start":36,"line_end":36,"column_start":1,"column_end":120}},{"value":"/ 4. Initializing memory and table contents by copying segments into them.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ 5. Executing the `start` function, if any.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1589,"byte_end":1635,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1636,"byte_end":1639,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ After these steps, the module instance is ready to execute functions.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1640,"byte_end":1713,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1714,"byte_end":1717,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Execution","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1718,"byte_end":1734,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It only is allowed to call functions which are exported by the module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1739,"byte_end":1813,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ Functions can either return a result or trap (e.g. there can't be linking error in the middle of the function execution).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1814,"byte_end":1939,"line_start":45,"line_end":45,"column_start":1,"column_end":126}},{"value":"/ This property is ensured by the validation process.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1940,"byte_end":1995,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":1996,"byte_end":1999,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2000,"byte_end":2014,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2015,"byte_end":2018,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2019,"byte_end":2030,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ extern crate wasmi;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2031,"byte_end":2054,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ extern crate wat;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2055,"byte_end":2076,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2081,"byte_end":2157,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2158,"byte_end":2161,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2162,"byte_end":2177,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     // Parse WAT (WebAssembly Text format) into wasm bytecode.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2178,"byte_end":2244,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/     let wasm_binary: Vec<u8> =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2245,"byte_end":2279,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/         wat::parse_str(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2280,"byte_end":2307,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/             r#\"","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2308,"byte_end":2327,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/             (module","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2328,"byte_end":2351,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/                 (func (export \"test\") (result i32)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2352,"byte_end":2406,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/                     i32.const 1337","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2407,"byte_end":2445,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/                 )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2446,"byte_end":2467,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/             )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2468,"byte_end":2485,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/             \"#,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2486,"byte_end":2505,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/         )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2506,"byte_end":2519,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to parse wat\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2520,"byte_end":2563,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2564,"byte_end":2567,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2568,"byte_end":2629,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/     let module = wasmi::Module::from_buffer(&wasm_binary)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2630,"byte_end":2691,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/         .expect(\"failed to load wasm\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2692,"byte_end":2735,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2736,"byte_end":2739,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Instantiate a module with empty imports and","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2740,"byte_end":2794,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/     // assert that there is no `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2795,"byte_end":2847,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/     let instance =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2848,"byte_end":2870,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/         ModuleInstance::new(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2871,"byte_end":2903,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/             &module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2904,"byte_end":2928,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/             &ImportsBuilder::default()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2929,"byte_end":2971,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/         )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2972,"byte_end":2985,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to instantiate wasm module\")","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":2986,"byte_end":3042,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/         .assert_no_start();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3043,"byte_end":3074,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3075,"byte_end":3078,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Finally, invoke the exported function \"test\" with no parameters","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3079,"byte_end":3153,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/     // and empty external function executor.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3154,"byte_end":3202,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3203,"byte_end":3222,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/         instance.invoke_export(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3223,"byte_end":3258,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/             \"test\",","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3259,"byte_end":3282,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/             &[],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3283,"byte_end":3303,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/             &mut NopExternals,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3304,"byte_end":3338,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/         ).expect(\"failed to execute export\"),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3339,"byte_end":3388,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/         Some(RuntimeValue::I32(1337)),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3389,"byte_end":3431,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     );","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3432,"byte_end":3442,"line_start":93,"line_end":93,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3443,"byte_end":3448,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3449,"byte_end":3456,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3458,"byte_end":3480,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3524,"byte_end":3563,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3564,"byte_end":3598,"line_start":100,"line_end":100,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3982,"byte_end":3992,"line_start":121,"line_end":121,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Module validation error. Might occur only at load time.\n","sig":null,"attributes":[{"value":"/ Module validation error. Might occur only at load time.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3918,"byte_end":3977,"line_start":120,"line_end":120,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4131,"byte_end":4144,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"Instantiation","qualname":"::Error::Instantiation","value":"Error::Instantiation(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Error while instantiating a module. Might occur when provided\n with incorrect exports (i.e. linkage failure).\n","sig":null,"attributes":[{"value":"/ Error while instantiating a module. Might occur when provided","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4006,"byte_end":4071,"line_start":122,"line_end":122,"column_start":5,"column_end":70}},{"value":"/ with incorrect exports (i.e. linkage failure).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4076,"byte_end":4126,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4188,"byte_end":4196,"line_start":126,"line_end":126,"column_start":5,"column_end":13},"name":"Function","qualname":"::Error::Function","value":"Error::Function(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Function-level error.\n","sig":null,"attributes":[{"value":"/ Function-level error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4158,"byte_end":4183,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4237,"byte_end":4242,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Table","qualname":"::Error::Table","value":"Error::Table(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Table-level error.\n","sig":null,"attributes":[{"value":"/ Table-level error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4210,"byte_end":4232,"line_start":127,"line_end":127,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4284,"byte_end":4290,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"Memory","qualname":"::Error::Memory","value":"Error::Memory(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Memory-level error.\n","sig":null,"attributes":[{"value":"/ Memory-level error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4256,"byte_end":4279,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4332,"byte_end":4338,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"Global","qualname":"::Error::Global","value":"Error::Global(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Global-level error.\n","sig":null,"attributes":[{"value":"/ Global-level error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4304,"byte_end":4327,"line_start":131,"line_end":131,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4379,"byte_end":4384,"line_start":134,"line_end":134,"column_start":5,"column_end":10},"name":"Value","qualname":"::Error::Value","value":"Error::Value(String)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Value-level error.\n","sig":null,"attributes":[{"value":"/ Value-level error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4352,"byte_end":4374,"line_start":133,"line_end":133,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4412,"byte_end":4416,"line_start":136,"line_end":136,"column_start":5,"column_end":9},"name":"Trap","qualname":"::Error::Trap","value":"Error::Trap(Trap)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Trap.\n","sig":null,"attributes":[{"value":"/ Trap.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4398,"byte_end":4407,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4459,"byte_end":4463,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"Host","qualname":"::Error::Host","value":"Error::Host(Box<dyn HostError>)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" Custom embedder error.\n","sig":null,"attributes":[{"value":"/ Custom embedder error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4428,"byte_end":4454,"line_start":137,"line_end":137,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3906,"byte_end":3911,"line_start":119,"line_end":119,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    Validation(String),\n    Instantiation(String),\n    Function(String),\n    Table(String),\n    Memory(String),\n    Global(String),\n    Value(String),\n    Trap(Trap),\n    Host(Box<dyn HostError>),\n}","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518}],"decl_id":null,"docs":" Internal interpreter error.\n","sig":null,"attributes":[{"value":"/ Internal interpreter error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":3848,"byte_end":3879,"line_start":117,"line_end":117,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4546,"byte_end":4550,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"host","qualname":"<Error>::host","value":"pub fn host<T>(T) -> Self where T: HostError + Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host error.\n","sig":null,"attributes":[{"value":"/ Creates a new host error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4505,"byte_end":4534,"line_start":142,"line_end":142,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5093,"byte_end":5106,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"as_host_error","qualname":"<Error>::as_host_error","value":"pub fn as_host_error(&Self) -> Option<&dyn HostError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[{"value":"/ Returns a reference to a [`HostError`] if this `Error` represents some host error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4675,"byte_end":4761,"line_start":150,"line_end":150,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4766,"byte_end":4769,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4774,"byte_end":4875,"line_start":152,"line_end":152,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4880,"byte_end":4883,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4888,"byte_end":4927,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4932,"byte_end":4974,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4979,"byte_end":5021,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5026,"byte_end":5081,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5738,"byte_end":5753,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"into_host_error","qualname":"<Error>::into_host_error","value":"pub fn into_host_error(Self) -> Option<Box<dyn HostError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[{"value":"/ Returns [`HostError`] if this `Error` represents some host error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5337,"byte_end":5406,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5411,"byte_end":5414,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5419,"byte_end":5520,"line_start":168,"line_end":168,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5525,"byte_end":5528,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5533,"byte_end":5572,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5577,"byte_end":5619,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5624,"byte_end":5666,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5671,"byte_end":5726,"line_start":173,"line_end":173,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6421,"byte_end":6440,"line_start":190,"line_end":190,"column_start":12,"column_end":31},"name":"try_into_host_error","qualname":"<Error>::try_into_host_error","value":"pub fn try_into_host_error(Self) -> Result<Box<dyn HostError>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error, otherwise returns the original error.","sig":null,"attributes":[{"value":"/ Returns [`HostError`] if this `Error` represents some host error, otherwise returns the original error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":5982,"byte_end":6089,"line_start":182,"line_end":182,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6094,"byte_end":6097,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6102,"byte_end":6203,"line_start":184,"line_end":184,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6208,"byte_end":6211,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6216,"byte_end":6255,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6260,"byte_end":6302,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6307,"byte_end":6349,"line_start":188,"line_end":188,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6354,"byte_end":6409,"line_start":189,"line_end":189,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15198,"byte_end":15205,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"FuncRef","qualname":"::func::FuncRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a function (See [`FuncInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a function (See [`FuncInstance`] for details).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":14989,"byte_end":15052,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15053,"byte_end":15056,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15057,"byte_end":15111,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15112,"byte_end":15115,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15116,"byte_end":15162,"line_start":23,"line_end":23,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15993,"byte_end":16005,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"FuncInstance","qualname":"::func::FuncInstance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Runtime representation of a function.","sig":null,"attributes":[{"value":"/ Runtime representation of a function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15360,"byte_end":15401,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15402,"byte_end":15405,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Functions are the unit of organization of code in WebAssembly. Each function takes a sequence of values","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15406,"byte_end":15513,"line_start":36,"line_end":36,"column_start":1,"column_end":108}},{"value":"/ as parameters and either optionally return a value or trap.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15514,"byte_end":15577,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/ Functions can call other function including itself (i.e recursive calls are allowed) and imported functions","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15578,"byte_end":15689,"line_start":38,"line_end":38,"column_start":1,"column_end":112}},{"value":"/ (i.e functions defined in another module or by the host environment).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15690,"byte_end":15763,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15764,"byte_end":15767,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Functions can be defined either:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15768,"byte_end":15804,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15805,"byte_end":15808,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - by a wasm module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15809,"byte_end":15832,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ - by the host environment and passed to a wasm module as an import.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15833,"byte_end":15904,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/   See more in [`Externals`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15905,"byte_end":15937,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15938,"byte_end":15941,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15942,"byte_end":15981,"line_start":47,"line_end":47,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17331,"byte_end":17341,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"alloc_host","qualname":"<FuncInstance>::alloc_host","value":"pub fn alloc_host(Signature, usize) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a function instance for a host function.","sig":null,"attributes":[{"value":"/ Allocate a function instance for a host function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":16943,"byte_end":16996,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17001,"byte_end":17004,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ When this function instance will be called by the wasm code,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17009,"byte_end":17073,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/ the instance of [`Externals`] will be invoked by calling `invoke_index`","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17078,"byte_end":17153,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ with specified `host_func_index` here.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17158,"byte_end":17200,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/ This call will be made with the `signature` provided here.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17205,"byte_end":17267,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17272,"byte_end":17275,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17280,"byte_end":17319,"line_start":86,"line_end":86,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17765,"byte_end":17774,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"signature","qualname":"<FuncInstance>::signature","value":"pub fn signature(&Self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns [signature] of this function instance.","sig":null,"attributes":[{"value":"/ Returns [signature] of this function instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17568,"byte_end":17618,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17623,"byte_end":17626,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function instance can only be called with matching signatures.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17631,"byte_end":17702,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17707,"byte_end":17710,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [signature]: struct.Signature.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":17715,"byte_end":17753,"line_start":99,"line_end":99,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18963,"byte_end":18969,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"invoke","qualname":"<FuncInstance>::invoke","value":"pub fn invoke<E: Externals>(&FuncRef, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function.","sig":null,"attributes":[{"value":"/ Invoke this function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18686,"byte_end":18711,"line_start":131,"line_end":131,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18716,"byte_end":18719,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18724,"byte_end":18736,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18741,"byte_end":18744,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`] or","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18749,"byte_end":18821,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ if [`Trap`] at execution time occured.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18826,"byte_end":18868,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18873,"byte_end":18876,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18881,"byte_end":18917,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":18922,"byte_end":18951,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19755,"byte_end":19772,"line_start":165,"line_end":165,"column_start":12,"column_end":29},"name":"invoke_with_stack","qualname":"<FuncInstance>::invoke_with_stack","value":"pub fn invoke_with_stack<E: Externals>(&FuncRef, &[RuntimeValue], &mut E,\n&mut StackRecycler) -> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke this function using recycled stacks.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19592,"byte_end":19639,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19644,"byte_end":19647,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19652,"byte_end":19664,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19669,"byte_end":19672,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19677,"byte_end":19700,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19705,"byte_end":19708,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`invoke`]: #method.invoke","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":19713,"byte_end":19743,"line_start":164,"line_end":164,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21292,"byte_end":21308,"line_start":200,"line_end":200,"column_start":12,"column_end":28},"name":"invoke_resumable","qualname":"<FuncInstance>::invoke_resumable","value":"pub fn invoke_resumable<'args,\nimpl Into<Cow<'args, [RuntimeValue]>>: Into<Cow>>(&FuncRef,\nimpl Into<Cow<'args, [RuntimeValue]>>) -> Result<FuncInvocation, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a\n Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then\n continue the execution.","sig":null,"attributes":[{"value":"/ Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20557,"byte_end":20663,"line_start":186,"line_end":186,"column_start":5,"column_end":111}},{"value":"/ Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20668,"byte_end":20778,"line_start":187,"line_end":187,"column_start":5,"column_end":115}},{"value":"/ continue the execution.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20783,"byte_end":20810,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20815,"byte_end":20818,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This is an experimental API, and this functionality may not be available in other WebAssembly engines.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20823,"byte_end":20929,"line_start":190,"line_end":190,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20934,"byte_end":20937,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20942,"byte_end":20954,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20959,"byte_end":20962,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":20967,"byte_end":21037,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21042,"byte_end":21045,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21050,"byte_end":21086,"line_start":196,"line_end":196,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21091,"byte_end":21120,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21125,"byte_end":21199,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":21204,"byte_end":21280,"line_start":199,"line_end":199,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22289,"byte_end":22293,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Trap","qualname":"::func::ResumableError::Trap","value":"ResumableError::Trap(Trap)","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Trap happened.\n","sig":null,"attributes":[{"value":"/ Trap happened.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22266,"byte_end":22284,"line_start":230,"line_end":230,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22877,"byte_end":22889,"line_start":242,"line_end":242,"column_start":5,"column_end":17},"name":"NotResumable","qualname":"::func::ResumableError::NotResumable","value":"ResumableError::NotResumable","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" The invocation is not resumable.","sig":null,"attributes":[{"value":"/ The invocation is not resumable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22305,"byte_end":22341,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22346,"byte_end":22349,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Invocations are only resumable if a host function is called, and the host function returns a trap of `Host` kind. For other cases, this error will be returned. This includes:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22354,"byte_end":22532,"line_start":234,"line_end":234,"column_start":5,"column_end":183}},{"value":"/ - The invocation is directly a host function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22537,"byte_end":22586,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/ - The invocation has not been started.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22591,"byte_end":22633,"line_start":236,"line_end":236,"column_start":5,"column_end":47}},{"value":"/ - The invocation returns normally or returns any trap other than `Host` kind.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22638,"byte_end":22719,"line_start":237,"line_end":237,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22724,"byte_end":22727,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`resume_execution`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22732,"byte_end":22783,"line_start":239,"line_end":239,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22788,"byte_end":22791,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22796,"byte_end":22872,"line_start":241,"line_end":241,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23094,"byte_end":23108,"line_start":248,"line_end":248,"column_start":5,"column_end":19},"name":"AlreadyStarted","qualname":"::func::ResumableError::AlreadyStarted","value":"ResumableError::AlreadyStarted","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" The invocation has already been started.","sig":null,"attributes":[{"value":"/ The invocation has already been started.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22895,"byte_end":22939,"line_start":243,"line_end":243,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22944,"byte_end":22947,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`start_execution`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22952,"byte_end":23002,"line_start":245,"line_end":245,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23007,"byte_end":23010,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23015,"byte_end":23089,"line_start":247,"line_end":247,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22245,"byte_end":22259,"line_start":229,"line_end":229,"column_start":10,"column_end":24},"name":"ResumableError","qualname":"::func::ResumableError","value":"pub enum ResumableError { Trap(Trap), NotResumable, AlreadyStarted, }","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1546}],"decl_id":null,"docs":" A resumable invocation error.\n","sig":null,"attributes":[{"value":"/ A resumable invocation error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":22185,"byte_end":22218,"line_start":227,"line_end":227,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23335,"byte_end":23349,"line_start":258,"line_end":258,"column_start":12,"column_end":26},"name":"FuncInvocation","qualname":"::func::FuncInvocation","value":"FuncInvocation {  }","parent":null,"children":[{"krate":0,"index":121}],"decl_id":null,"docs":" A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.\n","sig":null,"attributes":[{"value":"/ A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23228,"byte_end":23323,"line_start":257,"line_end":257,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23681,"byte_end":23693,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"is_resumable","qualname":"<FuncInvocation>::is_resumable","value":"pub fn is_resumable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this invocation is currently resumable.\n","sig":null,"attributes":[{"value":"/ Whether this invocation is currently resumable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23618,"byte_end":23669,"line_start":272,"line_end":272,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":24008,"byte_end":24028,"line_start":281,"line_end":281,"column_start":12,"column_end":32},"name":"resumable_value_type","qualname":"<FuncInvocation>::resumable_value_type","value":"pub fn resumable_value_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" If the invocation is resumable, the expected return value type to be feed back in.\n","sig":null,"attributes":[{"value":"/ If the invocation is resumable, the expected return value type to be feed back in.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23910,"byte_end":23996,"line_start":280,"line_end":280,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":24414,"byte_end":24429,"line_start":292,"line_end":292,"column_start":12,"column_end":27},"name":"start_execution","qualname":"<FuncInvocation>::start_execution","value":"pub fn start_execution<'externals, E: Externals +\n'externals>(&mut Self, &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Start the invocation execution.\n","sig":null,"attributes":[{"value":"/ Start the invocation execution.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":24367,"byte_end":24402,"line_start":291,"line_end":291,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25829,"byte_end":25845,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"resume_execution","qualname":"<FuncInvocation>::resume_execution","value":"pub fn resume_execution<'externals, E: Externals +\n'externals>(&mut Self, Option<RuntimeValue>, &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Resume an execution if a previous trap of Host kind happened.","sig":null,"attributes":[{"value":"/ Resume an execution if a previous trap of Host kind happened.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25328,"byte_end":25393,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25398,"byte_end":25401,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ `return_val` must be of the value type [`resumable_value_type`], defined by the host function import. Otherwise,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25406,"byte_end":25522,"line_start":319,"line_end":319,"column_start":5,"column_end":121}},{"value":"/ `UnexpectedSignature` trap will be returned. The current invocation must also be resumable","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25527,"byte_end":25621,"line_start":320,"line_end":320,"column_start":5,"column_end":99}},{"value":"/ [`is_resumable`]. Otherwise, a `NotResumable` error will be returned.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25626,"byte_end":25699,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25704,"byte_end":25707,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`resumable_value_type`]: #method.resumable_value_type","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25712,"byte_end":25770,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ [`is_resumable`]: #method.is_resumable","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":25775,"byte_end":25817,"line_start":324,"line_end":324,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27189,"byte_end":27198,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"GlobalRef","qualname":"::global::GlobalRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a global variable (See [`GlobalInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a global variable (See [`GlobalInstance`] for details).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":26967,"byte_end":27039,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27040,"byte_end":27043,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27044,"byte_end":27098,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27099,"byte_end":27102,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27103,"byte_end":27153,"line_start":10,"line_end":10,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27940,"byte_end":27954,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"GlobalInstance","qualname":"::global::GlobalInstance","value":"GlobalInstance {  }","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"decl_id":null,"docs":" Runtime representation of a global variable (or `global` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a global variable (or `global` for short).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27361,"byte_end":27433,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27434,"byte_end":27437,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Global contains a value of a specified type and flag which specifies whether this","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27438,"byte_end":27523,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ global are mutable or immutable. Neither type of the value nor immutability can't be changed","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27524,"byte_end":27620,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ after creation.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27621,"byte_end":27640,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27641,"byte_end":27644,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Attempt to change value of immutable global or to change type of","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27645,"byte_end":27713,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ the value (e.g. assign [`I32`] value to a global that was created with [`I64`] type) will lead to an error.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27714,"byte_end":27825,"line_start":28,"line_end":28,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27826,"byte_end":27829,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`I32`]: enum.Value.html#variant.I32","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27830,"byte_end":27870,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ [`I64`]: enum.Value.html#variant.I64","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27871,"byte_end":27911,"line_start":31,"line_end":31,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28212,"byte_end":28217,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"alloc","qualname":"<GlobalInstance>::alloc","value":"pub fn alloc(RuntimeValue, bool) -> GlobalRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a global variable instance.","sig":null,"attributes":[{"value":"/ Allocate a global variable instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28034,"byte_end":28074,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28079,"byte_end":28082,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Since it is possible to export only immutable globals,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28087,"byte_end":28145,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ users likely want to set `mutable` to `false`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28150,"byte_end":28200,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28585,"byte_end":28588,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"set","qualname":"<GlobalInstance>::set","value":"pub fn set(&Self, RuntimeValue) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Change the value of this global variable.","sig":null,"attributes":[{"value":"/ Change the value of this global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28387,"byte_end":28432,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28437,"byte_end":28440,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28445,"byte_end":28457,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28462,"byte_end":28465,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this global isn't mutable or if","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28470,"byte_end":28522,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ type of `val` doesn't match global's type.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28527,"byte_end":28573,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29044,"byte_end":29047,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"get","qualname":"<GlobalInstance>::get","value":"pub fn get(&Self) -> RuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Get the value of this global variable.\n","sig":null,"attributes":[{"value":"/ Get the value of this global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28990,"byte_end":29032,"line_start":69,"line_end":69,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29243,"byte_end":29253,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalInstance>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if this global variable is mutable.","sig":null,"attributes":[{"value":"/ Returns if this global variable is mutable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29107,"byte_end":29154,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29159,"byte_end":29162,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note: Imported and/or exported globals are always immutable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29167,"byte_end":29231,"line_start":76,"line_end":76,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29362,"byte_end":29372,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalInstance>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns value type of this global variable.\n","sig":null,"attributes":[{"value":"/ Returns value type of this global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":29303,"byte_end":29350,"line_start":81,"line_end":81,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29764,"byte_end":29775,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"RuntimeArgs","qualname":"::host::RuntimeArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around slice of [`Value`] for using it\n as an argument list conveniently.","sig":null,"attributes":[{"value":"/ Wrapper around slice of [`Value`] for using it","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29612,"byte_end":29662,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"/ as an argument list conveniently.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29663,"byte_end":29700,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29701,"byte_end":29704,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29705,"byte_end":29735,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30240,"byte_end":30251,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"nth_checked","qualname":"<RuntimeArgs>::nth_checked","value":"pub fn nth_checked<T>(&Self, usize) -> Result<T, Trap> where T: FromValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30093,"byte_end":30129,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30134,"byte_end":30137,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30142,"byte_end":30154,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30159,"byte_end":30162,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if cast is invalid or not enough arguments.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30167,"byte_end":30228,"line_start":27,"line_end":27,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30686,"byte_end":30703,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"nth_value_checked","qualname":"<RuntimeArgs>::nth_value_checked","value":"pub fn nth_value_checked(&Self, usize) -> Result<RuntimeValue, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Extract argument as a [`Value`] by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument as a [`Value`] by index `idx`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30486,"byte_end":30537,"line_start":38,"line_end":38,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30542,"byte_end":30545,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30550,"byte_end":30562,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30567,"byte_end":30570,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this list has not enough arguments.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30575,"byte_end":30631,"line_start":42,"line_end":42,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30636,"byte_end":30639,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30644,"byte_end":30674,"line_start":44,"line_end":44,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31035,"byte_end":31038,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"nth","qualname":"<RuntimeArgs>::nth","value":"pub fn nth<T>(&Self, usize) -> T where T: FromValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30895,"byte_end":30931,"line_start":52,"line_end":52,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30936,"byte_end":30939,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30944,"byte_end":30956,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30961,"byte_end":30964,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Panics if cast is invalid or not enough arguments.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30969,"byte_end":31023,"line_start":56,"line_end":56,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31298,"byte_end":31301,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"len","qualname":"<RuntimeArgs>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of arguments\n","sig":null,"attributes":[{"value":"/ Total number of arguments","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31257,"byte_end":31286,"line_start":65,"line_end":65,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":203},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33677,"byte_end":33686,"line_start":148,"line_end":148,"column_start":11,"column_end":20},"name":"Externals","qualname":"::host::Externals","value":"Externals","parent":null,"children":[{"krate":0,"index":204}],"decl_id":null,"docs":" Trait that allows to implement host functions.","sig":null,"attributes":[{"value":"/ Trait that allows to implement host functions.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31350,"byte_end":31400,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31401,"byte_end":31404,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31405,"byte_end":31419,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31420,"byte_end":31423,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31424,"byte_end":31435,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31436,"byte_end":31452,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/     Externals, RuntimeValue, RuntimeArgs, Error, ModuleImportResolver,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31453,"byte_end":31527,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/     FuncRef, ValueType, Signature, FuncInstance, Trap,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31528,"byte_end":31586,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"/ };","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31587,"byte_end":31593,"line_start":79,"line_end":79,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31594,"byte_end":31597,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ struct HostExternals {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31598,"byte_end":31624,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/     counter: usize,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31625,"byte_end":31648,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31649,"byte_end":31654,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31655,"byte_end":31658,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ const ADD_FUNC_INDEX: usize = 0;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31659,"byte_end":31695,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31696,"byte_end":31699,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl Externals for HostExternals {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31700,"byte_end":31738,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/     fn invoke_index(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31739,"byte_end":31763,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/         &mut self,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31764,"byte_end":31786,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/         index: usize,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31787,"byte_end":31812,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/         args: RuntimeArgs,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31813,"byte_end":31843,"line_start":91,"line_end":91,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<RuntimeValue>, Trap> {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31844,"byte_end":31893,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/         match index {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31894,"byte_end":31919,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/             ADD_FUNC_INDEX => {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31920,"byte_end":31955,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/                 let a: u32 = args.nth_checked(0)?;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":31956,"byte_end":32010,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/                 let b: u32 = args.nth_checked(1)?;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32011,"byte_end":32065,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/                 let result = a + b;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32066,"byte_end":32105,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32106,"byte_end":32109,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/                 Ok(Some(RuntimeValue::I32(result as i32)))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32110,"byte_end":32172,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/             }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32173,"byte_end":32190,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/             _ => panic!(\"Unimplemented function at {}\", index),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32191,"byte_end":32258,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/         }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32259,"byte_end":32272,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32273,"byte_end":32282,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32283,"byte_end":32288,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32289,"byte_end":32292,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ impl HostExternals {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32293,"byte_end":32317,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/     fn check_signature(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32318,"byte_end":32345,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/         &self,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32346,"byte_end":32364,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/         index: usize,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32365,"byte_end":32390,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/         signature: &Signature","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32391,"byte_end":32424,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/     ) -> bool {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32425,"byte_end":32444,"line_start":111,"line_end":111,"column_start":1,"column_end":20}},{"value":"/         let (params, ret_ty): (&[ValueType], Option<ValueType>) = match index {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32445,"byte_end":32528,"line_start":112,"line_end":112,"column_start":1,"column_end":84}},{"value":"/             ADD_FUNC_INDEX => (&[ValueType::I32, ValueType::I32], Some(ValueType::I32)),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32529,"byte_end":32621,"line_start":113,"line_end":113,"column_start":1,"column_end":93}},{"value":"/             _ => return false,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32622,"byte_end":32656,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/         };","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32657,"byte_end":32671,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/         signature.params() == params && signature.return_type() == ret_ty","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32672,"byte_end":32749,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32750,"byte_end":32759,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32760,"byte_end":32765,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32766,"byte_end":32769,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ impl ModuleImportResolver for HostExternals {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32770,"byte_end":32819,"line_start":120,"line_end":120,"column_start":1,"column_end":50}},{"value":"/     fn resolve_func(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32820,"byte_end":32844,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/         &self,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32845,"byte_end":32863,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/         field_name: &str,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32864,"byte_end":32893,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/         signature: &Signature","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32894,"byte_end":32927,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/     ) -> Result<FuncRef, Error> {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32928,"byte_end":32965,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/         let index = match field_name {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":32966,"byte_end":33008,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/             \"add\" => ADD_FUNC_INDEX,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33009,"byte_end":33049,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/             _ => {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33050,"byte_end":33072,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/                 return Err(Error::Instantiation(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33073,"byte_end":33125,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/                     format!(\"Export {} not found\", field_name),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33126,"byte_end":33193,"line_start":130,"line_end":130,"column_start":1,"column_end":68}},{"value":"/                 ))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33194,"byte_end":33216,"line_start":131,"line_end":131,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33217,"byte_end":33234,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/         };","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33235,"byte_end":33249,"line_start":133,"line_end":133,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33250,"byte_end":33253,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/         if !self.check_signature(index, signature) {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33254,"byte_end":33310,"line_start":135,"line_end":135,"column_start":1,"column_end":57}},{"value":"/             return Err(Error::Instantiation(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33311,"byte_end":33359,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                 format!(\"Export {} has a bad signature\", field_name)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33360,"byte_end":33432,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/             ));","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33433,"byte_end":33452,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33453,"byte_end":33466,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33467,"byte_end":33470,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/         Ok(FuncInstance::alloc_host(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33471,"byte_end":33511,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/             Signature::new(&[ValueType::I32, ValueType::I32][..], Some(ValueType::I32)),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33512,"byte_end":33604,"line_start":142,"line_end":142,"column_start":1,"column_end":93}},{"value":"/             index,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33605,"byte_end":33627,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/         ))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33628,"byte_end":33642,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33643,"byte_end":33652,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33653,"byte_end":33658,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33659,"byte_end":33666,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33760,"byte_end":33772,"line_start":150,"line_end":150,"column_start":8,"column_end":20},"name":"invoke_index","qualname":"::host::Externals::invoke_index","value":"pub fn invoke_index(&mut Self, usize, RuntimeArgs)\n-> Result<Option<RuntimeValue>, Trap>","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" Perform invoke of a host function by specified `index`.\n","sig":null,"attributes":[{"value":"/ Perform invoke of a host function by specified `index`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33693,"byte_end":33752,"line_start":149,"line_end":149,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":34083,"byte_end":34095,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"NopExternals","qualname":"::host::NopExternals","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of [`Externals`] that just traps on [`invoke_index`].","sig":null,"attributes":[{"value":"/ Implementation of [`Externals`] that just traps on [`invoke_index`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33890,"byte_end":33962,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33963,"byte_end":33966,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":33967,"byte_end":34006,"line_start":159,"line_end":159,"column_start":1,"column_end":40}},{"value":"/ [`invoke_index`]: trait.Externals.html#tymethod.invoke_index","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":34007,"byte_end":34071,"line_start":160,"line_end":160,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":249},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35619,"byte_end":35633,"line_start":24,"line_end":24,"column_start":11,"column_end":25},"name":"ImportResolver","qualname":"::imports::ImportResolver","value":"ImportResolver","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" Resolver of a module's dependencies.","sig":null,"attributes":[{"value":"/ Resolver of a module's dependencies.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35201,"byte_end":35241,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35242,"byte_end":35245,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A module have dependencies in a form of a list of imports (i.e.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35246,"byte_end":35313,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ tuple of a (`module_name`, `field_name`, `descriptor`)).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35314,"byte_end":35374,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35375,"byte_end":35378,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The job of implementations of this trait is to provide on each","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35379,"byte_end":35445,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ import a corresponding concrete reference.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35446,"byte_end":35492,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35493,"byte_end":35496,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ For simple use-cases you can use [`ImportsBuilder`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35497,"byte_end":35553,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35554,"byte_end":35557,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`ImportsBuilder`]: struct.ImportsBuilder.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35558,"byte_end":35608,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35851,"byte_end":35863,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35640,"byte_end":35663,"line_start":25,"line_end":25,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35668,"byte_end":35671,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Returned function should match given `signature`, i.e. all parameter types and return value should have exact match.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35676,"byte_end":35796,"line_start":27,"line_end":27,"column_start":5,"column_end":125}},{"value":"/ Otherwise, link-time error will occur.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":35801,"byte_end":35843,"line_start":28,"line_end":28,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36193,"byte_end":36207,"line_start":40,"line_end":40,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36004,"byte_end":36034,"line_start":36,"line_end":36,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36039,"byte_end":36042,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returned global should match given `descriptor`, i.e. type and mutability","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36047,"byte_end":36124,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ should match. Otherwise, link-time error will occur.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36129,"byte_end":36185,"line_start":39,"line_end":39,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36828,"byte_end":36842,"line_start":54,"line_end":54,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36356,"byte_end":36377,"line_start":47,"line_end":47,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36382,"byte_end":36385,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returned memory should match requested memory (described by the `descriptor`),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36390,"byte_end":36472,"line_start":49,"line_end":49,"column_start":5,"column_end":87}},{"value":"/ i.e. initial size of a returned memory should be equal or larger than requested memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36477,"byte_end":36568,"line_start":50,"line_end":50,"column_start":5,"column_end":96}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36573,"byte_end":36663,"line_start":51,"line_end":51,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36668,"byte_end":36732,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/ If returned memory doesn't match the requested then link-time error will occur.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36737,"byte_end":36820,"line_start":53,"line_end":53,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37457,"byte_end":37470,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &str, &TableDescriptor)\n-> Result<TableRef, Error>","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":36991,"byte_end":37011,"line_start":61,"line_end":61,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37016,"byte_end":37019,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returned table should match requested table (described by the `descriptor`),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37024,"byte_end":37104,"line_start":63,"line_end":63,"column_start":5,"column_end":85}},{"value":"/ i.e. initial size of a returned table should be equal or larger than requested table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37109,"byte_end":37198,"line_start":64,"line_end":64,"column_start":5,"column_end":94}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37203,"byte_end":37293,"line_start":65,"line_end":65,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37298,"byte_end":37362,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ If returned table doesn't match the requested then link-time error will occur.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37367,"byte_end":37449,"line_start":67,"line_end":67,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38710,"byte_end":38724,"line_start":104,"line_end":104,"column_start":12,"column_end":26},"name":"ImportsBuilder","qualname":"::imports::ImportsBuilder","value":"ImportsBuilder {  }","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" Convenience builder of [`ImportResolver`].","sig":null,"attributes":[{"value":"/ Convenience builder of [`ImportResolver`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37615,"byte_end":37661,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37662,"byte_end":37665,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ With help of this builder, you can easily create [`ImportResolver`], just by","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37666,"byte_end":37746,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ adding needed [resolvers][`ModuleImportResolver`] by names.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37747,"byte_end":37810,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37811,"byte_end":37814,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37815,"byte_end":37829,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37830,"byte_end":37833,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37834,"byte_end":37845,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37846,"byte_end":37894,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37895,"byte_end":37900,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # struct EnvModuleResolver;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37901,"byte_end":37932,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/ # impl ::wasmi::ModuleImportResolver for EnvModuleResolver { }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":37933,"byte_end":37999,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38000,"byte_end":38047,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38048,"byte_end":38154,"line_start":89,"line_end":89,"column_start":1,"column_end":107}},{"value":"/ # let other_instance = ModuleInstance::new(&module, &ImportsBuilder::default())?.assert_no_start();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38155,"byte_end":38258,"line_start":90,"line_end":90,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38259,"byte_end":38262,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let imports = ImportsBuilder::new()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38263,"byte_end":38302,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/     .with_resolver(\"env\", &EnvModuleResolver)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38303,"byte_end":38352,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/     // Note, that ModuleInstance can be a resolver too.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38353,"byte_end":38412,"line_start":94,"line_end":94,"column_start":1,"column_end":60}},{"value":"/     .with_resolver(\"other_instance\", &other_instance);","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38413,"byte_end":38471,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/ let instance = ModuleInstance::new(&module, &imports)?.assert_no_start();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38472,"byte_end":38549,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38550,"byte_end":38553,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38554,"byte_end":38566,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38567,"byte_end":38574,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38575,"byte_end":38582,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38583,"byte_end":38586,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38587,"byte_end":38636,"line_start":102,"line_end":102,"column_start":1,"column_end":50}},{"value":"/ [`ModuleImportResolver`]: trait.ModuleImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38637,"byte_end":38698,"line_start":103,"line_end":103,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38976,"byte_end":38979,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportsBuilder>::new","value":"pub fn new() -> ImportsBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `ImportsBuilder`.\n","sig":null,"attributes":[{"value":"/ Create an empty `ImportsBuilder`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38927,"byte_end":38964,"line_start":115,"line_end":115,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39153,"byte_end":39166,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_resolver","qualname":"<ImportsBuilder>::with_resolver","value":"pub fn with_resolver<N: Into<String>>(Self, N, &'a dyn ModuleImportResolver)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.\n","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39090,"byte_end":39125,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39130,"byte_end":39141,"line_start":123,"line_end":123,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39449,"byte_end":39462,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"push_resolver","qualname":"<ImportsBuilder>::push_resolver","value":"pub fn push_resolver<N: Into<String>>(&mut Self, N,\n&'a dyn ModuleImportResolver)","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39360,"byte_end":39395,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39400,"byte_end":39403,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Mutable borrowed version.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39408,"byte_end":39437,"line_start":135,"line_end":135,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41342,"byte_end":41362,"line_start":198,"line_end":198,"column_start":11,"column_end":31},"name":"ModuleImportResolver","qualname":"::imports::ModuleImportResolver","value":"ModuleImportResolver","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" Version of [`ImportResolver`] specialized for a single module.","sig":null,"attributes":[{"value":"/ Version of [`ImportResolver`] specialized for a single module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41211,"byte_end":41277,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41278,"byte_end":41281,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41282,"byte_end":41331,"line_start":197,"line_end":197,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41564,"byte_end":41576,"line_start":204,"line_end":204,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ModuleImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41369,"byte_end":41392,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41397,"byte_end":41400,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_func`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41405,"byte_end":41458,"line_start":201,"line_end":201,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41463,"byte_end":41466,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_func`]: trait.ImportResolver.html#tymethod.resolve_func","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41471,"byte_end":41556,"line_start":203,"line_end":203,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41985,"byte_end":41999,"line_start":216,"line_end":216,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ModuleImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41777,"byte_end":41807,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41812,"byte_end":41815,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_global`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41820,"byte_end":41875,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41880,"byte_end":41883,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_global`]: trait.ImportResolver.html#tymethod.resolve_global","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":41888,"byte_end":41977,"line_start":215,"line_end":215,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42441,"byte_end":42455,"line_start":232,"line_end":232,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ModuleImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42242,"byte_end":42263,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42268,"byte_end":42271,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_memory`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42276,"byte_end":42331,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42336,"byte_end":42339,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_memory`]: trait.ImportResolver.html#tymethod.resolve_memory","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42344,"byte_end":42433,"line_start":231,"line_end":231,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42893,"byte_end":42906,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ModuleImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &TableDescriptor) -> Result<TableRef, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42698,"byte_end":42718,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42723,"byte_end":42726,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_table`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42731,"byte_end":42785,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42790,"byte_end":42793,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_table`]: trait.ImportResolver.html#tymethod.resolve_table","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":42798,"byte_end":42885,"line_start":247,"line_end":247,"column_start":5,"column_end":92}}]},{"kind":"Const","id":{"krate":0,"index":400},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70645,"byte_end":70668,"line_start":31,"line_end":31,"column_start":11,"column_end":34},"name":"LINEAR_MEMORY_PAGE_SIZE","qualname":"::memory::LINEAR_MEMORY_PAGE_SIZE","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","sig":null,"attributes":[{"value":"/ Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70441,"byte_end":70505,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70506,"byte_end":70509,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The size of a memory is always a integer multiple of a page size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70510,"byte_end":70579,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70580,"byte_end":70583,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70584,"byte_end":70634,"line_start":30,"line_end":30,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70910,"byte_end":70919,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"MemoryRef","qualname":"::memory::MemoryRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a memory (See [`MemoryInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a memory (See [`MemoryInstance`] for details).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70693,"byte_end":70756,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70757,"byte_end":70760,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70761,"byte_end":70815,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70816,"byte_end":70819,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70820,"byte_end":70870,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70871,"byte_end":70874,"line_start":38,"line_end":38,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71788,"byte_end":71802,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"MemoryInstance","qualname":"::memory::MemoryInstance","value":"MemoryInstance {  }","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" Runtime representation of a linear memory (or `memory` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a linear memory (or `memory` for short).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71082,"byte_end":71152,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71153,"byte_end":71156,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ A memory is a contiguous, mutable array of raw bytes. Wasm code can load and store values","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71157,"byte_end":71250,"line_start":51,"line_end":51,"column_start":1,"column_end":94}},{"value":"/ from/to a linear memory at any byte address.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71251,"byte_end":71299,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ A trap occurs if an access is not within the bounds of the current memory size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71300,"byte_end":71383,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71384,"byte_end":71387,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A memory is created with an initial size but can be grown dynamically.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71388,"byte_end":71462,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ The growth can be limited by specifying maximum size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71463,"byte_end":71520,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/ The size of a memory is always a integer multiple of a [page size][`LINEAR_MEMORY_PAGE_SIZE`] - 64KiB.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71521,"byte_end":71627,"line_start":57,"line_end":57,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71628,"byte_end":71631,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ At the moment, wasm doesn't provide any way to shrink the memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71632,"byte_end":71701,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71702,"byte_end":71705,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":71706,"byte_end":71776,"line_start":61,"line_end":61,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73642,"byte_end":73647,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"alloc","qualname":"<MemoryInstance>::alloc","value":"pub fn alloc(Pages, Option<Pages>) -> Result<MemoryRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a memory instance.","sig":null,"attributes":[{"value":"/ Allocate a memory instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72796,"byte_end":72827,"line_start":102,"line_end":102,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72832,"byte_end":72835,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The memory allocated with initial number of pages specified by `initial`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72840,"byte_end":72917,"line_start":104,"line_end":104,"column_start":5,"column_end":82}},{"value":"/ Minimal possible value for `initial` is 0 and maximum possible is `65536`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72922,"byte_end":73000,"line_start":105,"line_end":105,"column_start":5,"column_end":83}},{"value":"/ (Since maximum addressible memory is 2<sup>32</sup> = 4GiB = 65536 * [64KiB][`LINEAR_MEMORY_PAGE_SIZE`]).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73005,"byte_end":73114,"line_start":106,"line_end":106,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73119,"byte_end":73122,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ It is possible to limit maximum number of pages this memory instance can have by specifying","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73127,"byte_end":73222,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/ `maximum`. If not specified, this memory instance would be able to allocate up to 4GiB.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73227,"byte_end":73318,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73323,"byte_end":73326,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Allocated memory is always zeroed.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73331,"byte_end":73369,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73374,"byte_end":73377,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73382,"byte_end":73394,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73399,"byte_end":73402,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73407,"byte_end":73428,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73433,"byte_end":73436,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ - `initial` is greater than `maximum`","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73441,"byte_end":73482,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/ - either `initial` or `maximum` is greater than `65536`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73487,"byte_end":73547,"line_start":118,"line_end":118,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73552,"byte_end":73555,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":73560,"byte_end":73630,"line_start":120,"line_end":120,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75235,"byte_end":75242,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryInstance>::initial","value":"pub fn initial(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns number of pages this `MemoryInstance` was created with.\n","sig":null,"attributes":[{"value":"/ Returns number of pages this `MemoryInstance` was created with.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75156,"byte_end":75223,"line_start":162,"line_end":162,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75497,"byte_end":75504,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryInstance>::maximum","value":"pub fn maximum(&Self) -> Option<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum amount of pages this `MemoryInstance` can grow to.","sig":null,"attributes":[{"value":"/ Returns maximum amount of pages this `MemoryInstance` can grow to.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75293,"byte_end":75363,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75368,"byte_end":75371,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no limit set.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75376,"byte_end":75420,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75425,"byte_end":75485,"line_start":170,"line_end":170,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76132,"byte_end":76144,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"current_size","qualname":"<MemoryInstance>::current_size","value":"pub fn current_size(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns current linear memory size.","sig":null,"attributes":[{"value":"/ Returns current linear memory size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75563,"byte_end":75602,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75607,"byte_end":75610,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75615,"byte_end":75675,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75680,"byte_end":75683,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75688,"byte_end":75701,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75706,"byte_end":75709,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ To convert number of pages to number of bytes you can use the following code:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75714,"byte_end":75795,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75800,"byte_end":75803,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75808,"byte_end":75819,"line_start":183,"line_end":183,"column_start":5,"column_end":16}},{"value":"/ use wasmi::MemoryInstance;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75824,"byte_end":75854,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ use wasmi::memory_units::*;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75859,"byte_end":75890,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75895,"byte_end":75898,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let memory = MemoryInstance::alloc(Pages(1), None).unwrap();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75903,"byte_end":75967,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/ let byte_size: Bytes = memory.current_size().into();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":75972,"byte_end":76028,"line_start":188,"line_end":188,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76033,"byte_end":76048,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/     byte_size,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76053,"byte_end":76071,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/     Bytes(65536),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76076,"byte_end":76097,"line_start":191,"line_end":191,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76102,"byte_end":76108,"line_start":192,"line_end":192,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76113,"byte_end":76120,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76284,"byte_end":76293,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"get_value","qualname":"<MemoryInstance>::get_value","value":"pub fn get_value<T: LittleEndianConvert>(&Self, u32) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get value from memory at given offset.\n","sig":null,"attributes":[{"value":"/ Get value from memory at given offset.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76230,"byte_end":76272,"line_start":198,"line_end":198,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76873,"byte_end":76876,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"get","qualname":"<MemoryInstance>::get","value":"pub fn get(&Self, u32, usize) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from memory at given offset.","sig":null,"attributes":[{"value":"/ Copy data from memory at given offset.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76565,"byte_end":76607,"line_start":206,"line_end":206,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76612,"byte_end":76615,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This will allocate vector for you.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76620,"byte_end":76658,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ If you can provide a mutable slice you can use [`get_into`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76663,"byte_end":76727,"line_start":209,"line_end":209,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76732,"byte_end":76735,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`get_into`]: #method.get_into","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76740,"byte_end":76774,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"deprecated(since = \"0.10.0\", note =\n\"use get_into or get_value method instead\")","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":76779,"byte_end":76861,"line_start":212,"line_end":212,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77314,"byte_end":77322,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"get_into","qualname":"<MemoryInstance>::get_into","value":"pub fn get_into(&Self, u32, &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from given offset in the memory into `target` slice.","sig":null,"attributes":[{"value":"/ Copy data from given offset in the memory into `target` slice.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77139,"byte_end":77205,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77210,"byte_end":77213,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77218,"byte_end":77230,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77235,"byte_end":77238,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77243,"byte_end":77302,"line_start":224,"line_end":224,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77679,"byte_end":77682,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"set","qualname":"<MemoryInstance>::set","value":"pub fn set(&Self, u32, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy data in the memory at given offset.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77623,"byte_end":77667,"line_start":234,"line_end":234,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78056,"byte_end":78065,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"set_value","qualname":"<MemoryInstance>::set_value","value":"pub fn set_value<T: LittleEndianConvert>(&Self, u32, T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy value in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy value in the memory at given offset.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":77999,"byte_end":78044,"line_start":246,"line_end":246,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78508,"byte_end":78512,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"grow","qualname":"<MemoryInstance>::grow","value":"pub fn grow(&Self, Pages) -> Result<Pages, Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the linear memory by given number of pages.\n Returns previous memory size if succeeds.","sig":null,"attributes":[{"value":"/ Increases the size of the linear memory by given number of pages.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78257,"byte_end":78326,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"/ Returns previous memory size if succeeds.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78331,"byte_end":78376,"line_start":254,"line_end":254,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78381,"byte_end":78384,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78389,"byte_end":78401,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78406,"byte_end":78409,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if attempted to allocate more memory than permited by the limit.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":78414,"byte_end":78496,"line_start":258,"line_end":258,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81918,"byte_end":81922,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"copy","qualname":"<MemoryInstance>::copy","value":"pub fn copy(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another.","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81698,"byte_end":81748,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81753,"byte_end":81756,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memmove`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81761,"byte_end":81802,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81807,"byte_end":81810,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81815,"byte_end":81827,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81832,"byte_end":81835,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if either of specified regions is out of bounds.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":81840,"byte_end":81906,"line_start":376,"line_end":376,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82806,"byte_end":82825,"line_start":405,"line_end":405,"column_start":12,"column_end":31},"name":"copy_nonoverlapping","qualname":"<MemoryInstance>::copy_nonoverlapping","value":"pub fn copy_nonoverlapping(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another (non-overlapping version).","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another (non-overlapping version).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82443,"byte_end":82519,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82524,"byte_end":82527,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memcpy`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82532,"byte_end":82572,"line_start":396,"line_end":396,"column_start":5,"column_end":45}},{"value":"/ but returns Error if source overlaping with destination.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82577,"byte_end":82637,"line_start":397,"line_end":397,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82642,"byte_end":82645,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82650,"byte_end":82662,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82667,"byte_end":82670,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82675,"byte_end":82696,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82701,"byte_end":82704,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ - either of specified regions is out of bounds,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82709,"byte_end":82760,"line_start":403,"line_end":403,"column_start":5,"column_end":56}},{"value":"/ - these regions overlaps.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":82765,"byte_end":82794,"line_start":404,"line_end":404,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":83779,"byte_end":83787,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"transfer","qualname":"<MemoryInstance>::transfer","value":"pub fn transfer(&MemoryRef, usize, &MemoryRef, usize, usize)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy memory between two (possibly distinct) memory instances.","sig":null,"attributes":[{"value":"/ Copy memory between two (possibly distinct) memory instances.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":83600,"byte_end":83665,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":83670,"byte_end":83673,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If the same memory instance passed as `src` and `dst` then usual `copy` will be used.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":83678,"byte_end":83767,"line_start":435,"line_end":435,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85038,"byte_end":85043,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"clear","qualname":"<MemoryInstance>::clear","value":"pub fn clear(&Self, usize, u8, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory region with the specified value.","sig":null,"attributes":[{"value":"/ Fill the memory region with the specified value.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84824,"byte_end":84876,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84881,"byte_end":84884,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memset`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84889,"byte_end":84929,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84934,"byte_end":84937,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84942,"byte_end":84954,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84959,"byte_end":84962,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":84967,"byte_end":85026,"line_start":472,"line_end":472,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85519,"byte_end":85523,"line_start":489,"line_end":489,"column_start":12,"column_end":16},"name":"zero","qualname":"<MemoryInstance>::zero","value":"pub fn zero(&Self, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the specified memory region with zeroes.","sig":null,"attributes":[{"value":"/ Fill the specified memory region with zeroes.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85361,"byte_end":85410,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85415,"byte_end":85418,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85423,"byte_end":85435,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85440,"byte_end":85443,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85448,"byte_end":85507,"line_start":488,"line_end":488,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85779,"byte_end":85784,"line_start":496,"line_end":496,"column_start":12,"column_end":17},"name":"erase","qualname":"<MemoryInstance>::erase","value":"pub fn erase(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set every byte in the entire linear memory to 0, preserving its size.","sig":null,"attributes":[{"value":"/ Set every byte in the entire linear memory to 0, preserving its size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85627,"byte_end":85700,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85705,"byte_end":85708,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Might be useful for some optimization shenanigans.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85713,"byte_end":85767,"line_start":495,"line_end":495,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86194,"byte_end":86212,"line_start":509,"line_end":509,"column_start":12,"column_end":30},"name":"with_direct_access","qualname":"<MemoryInstance>::with_direct_access","value":"pub fn with_direct_access<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct access to the underlying memory buffer.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85890,"byte_end":85949,"line_start":500,"line_end":500,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85954,"byte_end":85957,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85962,"byte_end":85974,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85979,"byte_end":85982,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Any call that requires write access to memory (such as [`set`], [`clear`], etc) made within","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":85987,"byte_end":86082,"line_start":504,"line_end":504,"column_start":5,"column_end":100}},{"value":"/ the closure will panic.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86087,"byte_end":86114,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86119,"byte_end":86122,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`set`]: #method.get","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86127,"byte_end":86151,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/ [`clear`]: #method.set","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86156,"byte_end":86182,"line_start":508,"line_end":508,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86723,"byte_end":86745,"line_start":524,"line_end":524,"column_start":12,"column_end":34},"name":"with_direct_access_mut","qualname":"<MemoryInstance>::with_direct_access_mut","value":"pub fn with_direct_access_mut<R, F: FnOnce(&mut [u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct mutable access to the underlying memory buffer.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86336,"byte_end":86403,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86408,"byte_end":86411,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86416,"byte_end":86428,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86433,"byte_end":86436,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Any calls that requires either read or write access to memory (such as [`get`], [`set`], [`copy`], etc) made","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86441,"byte_end":86553,"line_start":518,"line_end":518,"column_start":5,"column_end":117}},{"value":"/ within the closure will panic. Proceed with caution.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86558,"byte_end":86614,"line_start":519,"line_end":519,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86619,"byte_end":86622,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86627,"byte_end":86651,"line_start":521,"line_end":521,"column_start":5,"column_end":29}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86656,"byte_end":86680,"line_start":522,"line_end":522,"column_start":5,"column_end":29}},{"value":"/ [`copy`]: #method.copy","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86685,"byte_end":86711,"line_start":523,"line_end":523,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87245,"byte_end":87258,"line_start":539,"line_end":539,"column_start":12,"column_end":25},"name":"direct_access","qualname":"<MemoryInstance>::direct_access","value":"pub fn direct_access<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct access to the underlying memory buffer.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86885,"byte_end":86944,"line_start":529,"line_end":529,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86949,"byte_end":86952,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86957,"byte_end":86969,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86974,"byte_end":86977,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Any call that requires write access to memory (such as [`set`], [`clear`], etc) made while","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":86982,"byte_end":87076,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/ the returned value is alive will panic.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87081,"byte_end":87124,"line_start":534,"line_end":534,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87129,"byte_end":87132,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ [`set`]: #method.get","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87137,"byte_end":87161,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"/ [`clear`]: #method.set","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87166,"byte_end":87192,"line_start":537,"line_end":537,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87197,"byte_end":87233,"line_start":538,"line_end":538,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87980,"byte_end":87997,"line_start":561,"line_end":561,"column_start":12,"column_end":29},"name":"direct_access_mut","qualname":"<MemoryInstance>::direct_access_mut","value":"pub fn direct_access_mut<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct mutable access to the underlying memory buffer.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87538,"byte_end":87605,"line_start":550,"line_end":550,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87610,"byte_end":87613,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87618,"byte_end":87630,"line_start":552,"line_end":552,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87635,"byte_end":87638,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Any call that requires either read or write access to memory (such as [`get`], [`set`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87643,"byte_end":87734,"line_start":554,"line_end":554,"column_start":5,"column_end":96}},{"value":"/ [`copy`], etc) made while the returned value is alive will panic. Proceed with caution.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87739,"byte_end":87830,"line_start":555,"line_end":555,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87835,"byte_end":87838,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87843,"byte_end":87867,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87872,"byte_end":87896,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/ [`copy`]: #method.copy","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87901,"byte_end":87927,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87932,"byte_end":87968,"line_start":560,"line_end":560,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97380,"byte_end":97389,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"ModuleRef","qualname":"::module::ModuleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a [`ModuleInstance`].","sig":null,"attributes":[{"value":"/ Reference to a [`ModuleInstance`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":96837,"byte_end":96875,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":96876,"byte_end":96879,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":96880,"byte_end":96934,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":96935,"byte_end":96938,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ All [`ModuleInstance`] have strong references to it's components (i.e.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":96939,"byte_end":97013,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ globals, memories, funcs, tables), however, this components have","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97014,"byte_end":97082,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ weak references to it's containing module. This might be a problem","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97083,"byte_end":97153,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ at execution time.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97154,"byte_end":97176,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97177,"byte_end":97180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ So if have to make sure that all modules which might be needed at execution time","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97181,"byte_end":97265,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ should be retained.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97266,"byte_end":97289,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97290,"byte_end":97293,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`ModuleInstance`]: struct.ModuleInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97294,"byte_end":97344,"line_start":46,"line_end":46,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97786,"byte_end":97790,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Func","qualname":"::module::ExternVal::Func","value":"ExternVal::Func(FuncRef)","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" [Function][`FuncInstance`].","sig":null,"attributes":[{"value":"/ [Function][`FuncInstance`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97691,"byte_end":97722,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97727,"byte_end":97730,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97735,"byte_end":97781,"line_start":62,"line_end":62,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97900,"byte_end":97905,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Table","qualname":"::module::ExternVal::Table","value":"ExternVal::Table(TableRef)","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" [Table][`TableInstance`].","sig":null,"attributes":[{"value":"/ [Table][`TableInstance`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97805,"byte_end":97834,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97839,"byte_end":97842,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97847,"byte_end":97895,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98020,"byte_end":98026,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"Memory","qualname":"::module::ExternVal::Memory","value":"ExternVal::Memory(MemoryRef)","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" [Memory][`MemoryInstance`].","sig":null,"attributes":[{"value":"/ [Memory][`MemoryInstance`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97921,"byte_end":97952,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97957,"byte_end":97960,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97965,"byte_end":98015,"line_start":70,"line_end":70,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98179,"byte_end":98185,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"Global","qualname":"::module::ExternVal::Global","value":"ExternVal::Global(GlobalRef)","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" [Global][`GlobalInstance`].","sig":null,"attributes":[{"value":"/ [Global][`GlobalInstance`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98043,"byte_end":98074,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98079,"byte_end":98082,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Should be immutable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98087,"byte_end":98111,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98116,"byte_end":98119,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98124,"byte_end":98174,"line_start":76,"line_end":76,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":609},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97675,"byte_end":97684,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"ExternVal","qualname":"::module::ExternVal","value":"pub enum ExternVal {\n    Func(FuncRef),\n    Table(TableRef),\n    Memory(MemoryRef),\n    Global(GlobalRef),\n}","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619}],"decl_id":null,"docs":" An external value is the runtime representation of an entity\n that can be imported or exported.\n","sig":null,"attributes":[{"value":"/ An external value is the runtime representation of an entity","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97563,"byte_end":97627,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ that can be imported or exported.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97628,"byte_end":97665,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99171,"byte_end":99178,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"as_func","qualname":"<ExternVal>::as_func","value":"pub fn as_func(&Self) -> Option<&FuncRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying function reference if this `ExternVal` contains\n a function, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying function reference if this `ExternVal` contains","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99037,"byte_end":99103,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ a function, or `None` if it is some other kind.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99108,"byte_end":99159,"line_start":108,"line_end":108,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99455,"byte_end":99463,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"as_table","qualname":"<ExternVal>::as_table","value":"pub fn as_table(&Self) -> Option<&TableRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying table reference if this `ExternVal` contains\n a table, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying table reference if this `ExternVal` contains","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99327,"byte_end":99390,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"/ a table, or `None` if it is some other kind.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99395,"byte_end":99443,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99746,"byte_end":99755,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"as_memory","qualname":"<ExternVal>::as_memory","value":"pub fn as_memory(&Self) -> Option<&MemoryRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying memory reference if this `ExternVal` contains\n a memory, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying memory reference if this `ExternVal` contains","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99616,"byte_end":99680,"line_start":125,"line_end":125,"column_start":5,"column_end":69}},{"value":"/ a memory, or `None` if it is some other kind.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99685,"byte_end":99734,"line_start":126,"line_end":126,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100051,"byte_end":100060,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"as_global","qualname":"<ExternVal>::as_global","value":"pub fn as_global(&Self) -> Option<&GlobalRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying global variable reference if this `ExternVal` contains\n a global, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying global variable reference if this `ExternVal` contains","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99912,"byte_end":99985,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ a global, or `None` if it is some other kind.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99990,"byte_end":100039,"line_start":135,"line_end":135,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101180,"byte_end":101194,"line_start":166,"line_end":166,"column_start":12,"column_end":26},"name":"ModuleInstance","qualname":"::module::ModuleInstance","value":"ModuleInstance {  }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463}],"decl_id":null,"docs":" A module instance is the runtime representation of a [module][`Module`].","sig":null,"attributes":[{"value":"/ A module instance is the runtime representation of a [module][`Module`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100215,"byte_end":100291,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100292,"byte_end":100295,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ It is created by instantiating a [module][`Module`], and collects runtime representations","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100296,"byte_end":100389,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"/ of all entities that are imported or defined by the module, namely:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100390,"byte_end":100461,"line_start":147,"line_end":147,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100462,"byte_end":100465,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ - [functions][`FuncInstance`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100466,"byte_end":100500,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/ - [memories][`MemoryInstance`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100501,"byte_end":100536,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/ - [tables][`TableInstance`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100537,"byte_end":100569,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/ - [globals][`GlobalInstance`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100570,"byte_end":100604,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100605,"byte_end":100608,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ In order to instantiate a module you need to provide entities to satisfy","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100609,"byte_end":100685,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ every module's imports (i.e. wasm modules don't have optional imports).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100686,"byte_end":100761,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100762,"byte_end":100765,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ After module is instantiated you can start invoking it's exported functions with [`invoke_export`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100766,"byte_end":100869,"line_start":157,"line_end":157,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100870,"byte_end":100873,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100874,"byte_end":100908,"line_start":159,"line_end":159,"column_start":1,"column_end":35}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100909,"byte_end":100955,"line_start":160,"line_end":160,"column_start":1,"column_end":47}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":100956,"byte_end":101006,"line_start":161,"line_end":161,"column_start":1,"column_end":51}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101007,"byte_end":101055,"line_start":162,"line_end":162,"column_start":1,"column_end":49}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101056,"byte_end":101106,"line_start":163,"line_end":163,"column_start":1,"column_end":51}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101107,"byte_end":101151,"line_start":164,"line_end":164,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":103158,"byte_end":103165,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"globals","qualname":"<ModuleInstance>::globals","value":"pub fn globals(&Self) -> Ref<, Vec<GlobalRef>>","parent":null,"children":[],"decl_id":null,"docs":" Access all globals. This is a non-standard API so it's unlikely to be\n portable to other engines.\n","sig":null,"attributes":[{"value":"/ Access all globals. This is a non-standard API so it's unlikely to be","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":103038,"byte_end":103111,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ portable to other engines.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":103116,"byte_end":103146,"line_start":228,"line_end":228,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":103274,"byte_end":103281,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"exports","qualname":"<ModuleInstance>::exports","value":"pub fn exports(&Self) -> Ref<, BTreeMap<String, ExternVal>>","parent":null,"children":[],"decl_id":null,"docs":" Access all exports.\n","sig":null,"attributes":[{"value":"/ Access all exports.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":103239,"byte_end":103262,"line_start":233,"line_end":233,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111319,"byte_end":111334,"line_start":421,"line_end":421,"column_start":12,"column_end":27},"name":"with_externvals","qualname":"<ModuleInstance>::with_externvals","value":"pub fn with_externvals<'a, 'i, I: Iterator<Item =\n&'i ExternVal>>(&'a Module, I) -> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a module with given [external values][ExternVal] as imports.","sig":null,"attributes":[{"value":"/ Instantiate a module with given [external values][ExternVal] as imports.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111061,"byte_end":111137,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111142,"byte_end":111145,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ See [new] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111150,"byte_end":111176,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111181,"byte_end":111184,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [new]: #method.new","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111189,"byte_end":111211,"line_start":419,"line_end":419,"column_start":5,"column_end":27}},{"value":"/ [ExternVal]: https://webassembly.github.io/spec/core/exec/runtime.html#syntax-externval","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":111216,"byte_end":111307,"line_start":420,"line_end":420,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116510,"byte_end":116513,"line_start":548,"line_end":548,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleInstance>::new","value":"pub fn new<'m, I: ImportResolver>(&'m Module, &I)\n-> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a [module][`Module`].","sig":null,"attributes":[{"value":"/ Instantiate a [module][`Module`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":113958,"byte_end":113995,"line_start":488,"line_end":488,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114000,"byte_end":114003,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Note that in case of successful instantiation this function returns a reference to","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114008,"byte_end":114094,"line_start":490,"line_end":490,"column_start":5,"column_end":91}},{"value":"/ a module which `start` function is not called.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114099,"byte_end":114149,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/ In order to complete instantiatiation `start` function must be called. However, there are","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114154,"byte_end":114247,"line_start":492,"line_end":492,"column_start":5,"column_end":98}},{"value":"/ situations where you might need to do additional setup before calling `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114252,"byte_end":114343,"line_start":493,"line_end":493,"column_start":5,"column_end":96}},{"value":"/ For such sitations this separation might be useful.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114348,"byte_end":114403,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114408,"byte_end":114411,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ See [`NotStartedModuleRef`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114416,"byte_end":114460,"line_start":496,"line_end":496,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114465,"byte_end":114468,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114473,"byte_end":114485,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114490,"byte_end":114493,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the module cannot be instantiated.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114498,"byte_end":114553,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114558,"byte_end":114561,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This can happen if one of the imports can't","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114566,"byte_end":114613,"line_start":502,"line_end":502,"column_start":5,"column_end":52}},{"value":"/ be satisfied (e.g module isn't registered in `imports` [resolver][`ImportResolver`]) or","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114618,"byte_end":114709,"line_start":503,"line_end":503,"column_start":5,"column_end":96}},{"value":"/ there is a mismatch between requested import and provided (e.g. module requested memory with no","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114714,"byte_end":114813,"line_start":504,"line_end":504,"column_start":5,"column_end":104}},{"value":"/ maximum size limit, however, was provided memory with the maximum size limit).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114818,"byte_end":114900,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114905,"byte_end":114908,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114913,"byte_end":114927,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114932,"byte_end":114935,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114940,"byte_end":114951,"line_start":509,"line_end":509,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":114956,"byte_end":115018,"line_start":510,"line_end":510,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115023,"byte_end":115070,"line_start":511,"line_end":511,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115075,"byte_end":115181,"line_start":512,"line_end":512,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115186,"byte_end":115189,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ // ModuleInstance::new returns instance which `start` function isn't called.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115194,"byte_end":115274,"line_start":514,"line_end":514,"column_start":5,"column_end":85}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115279,"byte_end":115321,"line_start":515,"line_end":515,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115326,"byte_end":115342,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115347,"byte_end":115381,"line_start":517,"line_end":517,"column_start":5,"column_end":39}},{"value":"/ )?;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115386,"byte_end":115393,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ // Call `start` function if any.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115398,"byte_end":115434,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/ let instance = not_started.run_start(&mut NopExternals)?;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115439,"byte_end":115500,"line_start":520,"line_end":520,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115505,"byte_end":115508,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115513,"byte_end":115525,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115530,"byte_end":115537,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115542,"byte_end":115549,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115554,"byte_end":115557,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ If you sure that the module doesn't have `start` function you can use [`assert_no_start`] to get","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115562,"byte_end":115662,"line_start":526,"line_end":526,"column_start":5,"column_end":105}},{"value":"/ instantiated module without calling `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115667,"byte_end":115724,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115729,"byte_end":115732,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115737,"byte_end":115748,"line_start":529,"line_end":529,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115753,"byte_end":115815,"line_start":530,"line_end":530,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115820,"byte_end":115867,"line_start":531,"line_end":531,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115872,"byte_end":115978,"line_start":532,"line_end":532,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115983,"byte_end":115986,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ // This will panic if the module actually contain `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":115991,"byte_end":116062,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116067,"byte_end":116109,"line_start":535,"line_end":535,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116114,"byte_end":116130,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116135,"byte_end":116169,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/ )?.assert_no_start();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116174,"byte_end":116199,"line_start":538,"line_end":538,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116204,"byte_end":116207,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116212,"byte_end":116224,"line_start":540,"line_end":540,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116229,"byte_end":116236,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116241,"byte_end":116248,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116253,"byte_end":116256,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116261,"byte_end":116295,"line_start":544,"line_end":544,"column_start":5,"column_end":39}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116300,"byte_end":116360,"line_start":545,"line_end":545,"column_start":5,"column_end":65}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116365,"byte_end":116414,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"/ [`assert_no_start`]: struct.NotStartedModuleRef.html#method.assert_no_start","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":116419,"byte_end":116498,"line_start":547,"line_end":547,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120342,"byte_end":120355,"line_start":641,"line_end":641,"column_start":12,"column_end":25},"name":"invoke_export","qualname":"<ModuleInstance>::invoke_export","value":"pub fn invoke_export<E: Externals>(&Self, &str, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118694,"byte_end":118733,"line_start":593,"line_end":593,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118738,"byte_end":118741,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This function finds exported function by a name, and calls it with provided arguments and","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118746,"byte_end":118839,"line_start":595,"line_end":595,"column_start":5,"column_end":98}},{"value":"/ external state.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118844,"byte_end":118863,"line_start":596,"line_end":596,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118868,"byte_end":118871,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118876,"byte_end":118888,"line_start":598,"line_end":598,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118893,"byte_end":118896,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118901,"byte_end":118922,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118927,"byte_end":118930,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ - there are no export with a given name or this export is not a function,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":118935,"byte_end":119012,"line_start":602,"line_end":602,"column_start":5,"column_end":82}},{"value":"/ - given arguments doesn't match to function signature,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119017,"byte_end":119075,"line_start":603,"line_end":603,"column_start":5,"column_end":63}},{"value":"/ - trap occurred at the execution time,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119080,"byte_end":119122,"line_start":604,"line_end":604,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119127,"byte_end":119130,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119135,"byte_end":119149,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119154,"byte_end":119157,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Invoke a function that takes two numbers and returns sum of them.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119162,"byte_end":119231,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119236,"byte_end":119239,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119244,"byte_end":119255,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119260,"byte_end":119285,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/ # extern crate wat;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119290,"byte_end":119313,"line_start":612,"line_end":612,"column_start":5,"column_end":28}},{"value":"/ # use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119318,"byte_end":119396,"line_start":613,"line_end":613,"column_start":5,"column_end":83}},{"value":"/ # fn main() {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119401,"byte_end":119418,"line_start":614,"line_end":614,"column_start":5,"column_end":22}},{"value":"/ # let wasm_binary: Vec<u8> = wat::parse_str(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119423,"byte_end":119471,"line_start":615,"line_end":615,"column_start":5,"column_end":53}},{"value":"/ #   r#\"","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119476,"byte_end":119487,"line_start":616,"line_end":616,"column_start":5,"column_end":16}},{"value":"/ #   (module","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119492,"byte_end":119507,"line_start":617,"line_end":617,"column_start":5,"column_end":20}},{"value":"/ #       (func (export \"add\") (param i32 i32) (result i32)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119512,"byte_end":119573,"line_start":618,"line_end":618,"column_start":5,"column_end":66}},{"value":"/ #           get_local 0","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119578,"byte_end":119605,"line_start":619,"line_end":619,"column_start":5,"column_end":32}},{"value":"/ #           get_local 1","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119610,"byte_end":119637,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ #           i32.add","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119642,"byte_end":119665,"line_start":621,"line_end":621,"column_start":5,"column_end":28}},{"value":"/ #       )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119670,"byte_end":119683,"line_start":622,"line_end":622,"column_start":5,"column_end":18}},{"value":"/ #   )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119688,"byte_end":119697,"line_start":623,"line_end":623,"column_start":5,"column_end":14}},{"value":"/ #   \"#,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119702,"byte_end":119713,"line_start":624,"line_end":624,"column_start":5,"column_end":16}},{"value":"/ # ).expect(\"failed to parse wat\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119718,"byte_end":119756,"line_start":625,"line_end":625,"column_start":5,"column_end":43}},{"value":"/ # let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"failed to load wasm\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119761,"byte_end":119851,"line_start":626,"line_end":626,"column_start":5,"column_end":95}},{"value":"/ # let instance = ModuleInstance::new(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119856,"byte_end":119897,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ # &module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119902,"byte_end":119916,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ # &ImportsBuilder::default()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119921,"byte_end":119953,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/ # ).expect(\"failed to instantiate wasm module\").assert_no_start();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":119958,"byte_end":120028,"line_start":630,"line_end":630,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120033,"byte_end":120048,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/     instance.invoke_export(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120053,"byte_end":120084,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/         \"add\",","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120089,"byte_end":120107,"line_start":633,"line_end":633,"column_start":5,"column_end":23}},{"value":"/         &[RuntimeValue::I32(5), RuntimeValue::I32(3)],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120112,"byte_end":120170,"line_start":634,"line_end":634,"column_start":5,"column_end":63}},{"value":"/         &mut NopExternals,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120175,"byte_end":120205,"line_start":635,"line_end":635,"column_start":5,"column_end":35}},{"value":"/     ).expect(\"failed to execute export\"),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120210,"byte_end":120255,"line_start":636,"line_end":636,"column_start":5,"column_end":50}},{"value":"/     Some(RuntimeValue::I32(8)),","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120260,"byte_end":120295,"line_start":637,"line_end":637,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120300,"byte_end":120306,"line_start":638,"line_end":638,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120311,"byte_end":120318,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120323,"byte_end":120330,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120868,"byte_end":120892,"line_start":659,"line_end":659,"column_start":12,"column_end":36},"name":"invoke_export_with_stack","qualname":"<ModuleInstance>::invoke_export_with_stack","value":"pub fn invoke_export_with_stack<E: Externals>(&Self, &str, &[RuntimeValue],\n&mut E, &mut StackRecycler) -> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name using recycled stacks.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120670,"byte_end":120731,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120736,"byte_end":120739,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120744,"byte_end":120756,"line_start":654,"line_end":654,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120761,"byte_end":120764,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke_export`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120769,"byte_end":120799,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120804,"byte_end":120807,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":120812,"byte_end":120856,"line_start":658,"line_end":658,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":121915,"byte_end":121929,"line_start":689,"line_end":689,"column_start":12,"column_end":26},"name":"export_by_name","qualname":"<ModuleInstance>::export_by_name","value":"pub fn export_by_name(&Self, &str) -> Option<ExternVal>","parent":null,"children":[],"decl_id":null,"docs":" Find export by a name.","sig":null,"attributes":[{"value":"/ Find export by a name.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":121808,"byte_end":121834,"line_start":686,"line_end":686,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":121839,"byte_end":121842,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no export with such name.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":121847,"byte_end":121903,"line_start":688,"line_end":688,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123086,"byte_end":123105,"line_start":712,"line_end":712,"column_start":12,"column_end":31},"name":"NotStartedModuleRef","qualname":"::module::NotStartedModuleRef","value":"NotStartedModuleRef {  }","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"decl_id":null,"docs":" Mostly instantiated [`ModuleRef`].","sig":null,"attributes":[{"value":"/ Mostly instantiated [`ModuleRef`].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122030,"byte_end":122068,"line_start":694,"line_end":694,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122069,"byte_end":122072,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ At this point memory segments and tables are copied. However, `start` function (if any) is not called.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122073,"byte_end":122179,"line_start":696,"line_end":696,"column_start":1,"column_end":107}},{"value":"/ To get [fully instantiated module instance][`ModuleRef`], [running `start` function][`run_start`] is required.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122180,"byte_end":122294,"line_start":697,"line_end":697,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122295,"byte_end":122298,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ You can still access not fully initialized instance by calling [`not_started_instance`],","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122299,"byte_end":122391,"line_start":699,"line_end":699,"column_start":1,"column_end":93}},{"value":"/ but keep in mind, that this is sort of escape hatch: module really might depend on initialization","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122392,"byte_end":122493,"line_start":700,"line_end":700,"column_start":1,"column_end":102}},{"value":"/ done in `start` function. It's definitely not recommended to call any exports on [`ModuleRef`]","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122494,"byte_end":122592,"line_start":701,"line_end":701,"column_start":1,"column_end":99}},{"value":"/ returned by this function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122593,"byte_end":122623,"line_start":702,"line_end":702,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122624,"byte_end":122627,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ If you sure, that there is no `start` function (e.g. because you created it without one), you can","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122628,"byte_end":122729,"line_start":704,"line_end":704,"column_start":1,"column_end":102}},{"value":"/ call [`assert_no_start`] which returns [`ModuleRef`] without calling `start` function. However,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122730,"byte_end":122829,"line_start":705,"line_end":705,"column_start":1,"column_end":100}},{"value":"/ it will panic if module contains `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122830,"byte_end":122884,"line_start":706,"line_end":706,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122885,"byte_end":122888,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122889,"byte_end":122929,"line_start":708,"line_end":708,"column_start":1,"column_end":41}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122930,"byte_end":122966,"line_start":709,"line_end":709,"column_start":1,"column_end":37}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":122967,"byte_end":123015,"line_start":710,"line_end":710,"column_start":1,"column_end":49}},{"value":"/ [`not_started_instance`]: #method.not_started_instance","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123016,"byte_end":123074,"line_start":711,"line_end":711,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123634,"byte_end":123654,"line_start":727,"line_end":727,"column_start":12,"column_end":32},"name":"not_started_instance","qualname":"<NotStartedModuleRef>::not_started_instance","value":"pub fn not_started_instance(&Self) -> &ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns not fully initialized instance.","sig":null,"attributes":[{"value":"/ Returns not fully initialized instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123210,"byte_end":123253,"line_start":718,"line_end":718,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123258,"byte_end":123261,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ To fully initialize the instance you need to call either [`run_start`] or","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123266,"byte_end":123343,"line_start":720,"line_end":720,"column_start":5,"column_end":82}},{"value":"/ [`assert_no_start`]. See struct documentation for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123348,"byte_end":123410,"line_start":721,"line_end":721,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123415,"byte_end":123418,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123423,"byte_end":123483,"line_start":723,"line_end":723,"column_start":5,"column_end":65}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123488,"byte_end":123528,"line_start":724,"line_end":724,"column_start":5,"column_end":45}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123533,"byte_end":123569,"line_start":725,"line_end":725,"column_start":5,"column_end":41}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123574,"byte_end":123622,"line_start":726,"line_end":726,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123881,"byte_end":123890,"line_start":736,"line_end":736,"column_start":12,"column_end":21},"name":"run_start","qualname":"<NotStartedModuleRef>::run_start","value":"pub fn run_start<E: Externals>(Self, &mut E) -> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[{"value":"/ Executes `start` function (if any) and returns fully instantiated module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123712,"byte_end":123789,"line_start":731,"line_end":731,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123794,"byte_end":123797,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123802,"byte_end":123814,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123819,"byte_end":123822,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if start function traps.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123827,"byte_end":123869,"line_start":735,"line_end":735,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124493,"byte_end":124513,"line_start":752,"line_end":752,"column_start":12,"column_end":32},"name":"run_start_with_stack","qualname":"<NotStartedModuleRef>::run_start_with_stack","value":"pub fn run_start_with_stack<E: Externals>(Self, &mut E, &mut StackRecycler)\n-> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[{"value":"/ Executes `start` function (if any) and returns fully instantiated module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124324,"byte_end":124401,"line_start":747,"line_end":747,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124406,"byte_end":124409,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124414,"byte_end":124426,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124431,"byte_end":124434,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if start function traps.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":124439,"byte_end":124481,"line_start":751,"line_end":751,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125232,"byte_end":125247,"line_start":772,"line_end":772,"column_start":12,"column_end":27},"name":"assert_no_start","qualname":"<NotStartedModuleRef>::assert_no_start","value":"pub fn assert_no_start(Self) -> ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns fully instantiated module without running `start` function.","sig":null,"attributes":[{"value":"/ Returns fully instantiated module without running `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125041,"byte_end":125112,"line_start":767,"line_end":767,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125117,"byte_end":125120,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125125,"byte_end":125137,"line_start":769,"line_end":769,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125142,"byte_end":125145,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ This function panics if original module contains `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125150,"byte_end":125220,"line_start":771,"line_end":771,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125592,"byte_end":125601,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"has_start","qualname":"<NotStartedModuleRef>::has_start","value":"pub fn has_start(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the module has a `start` function.","sig":null,"attributes":[{"value":"/ Whether or not the module has a `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125466,"byte_end":125519,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125524,"byte_end":125527,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if it has a `start` function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":125532,"byte_end":125580,"line_start":782,"line_end":782,"column_start":5,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":948},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":182938,"byte_end":182963,"line_start":33,"line_end":33,"column_start":11,"column_end":36},"name":"DEFAULT_VALUE_STACK_LIMIT","qualname":"::runner::DEFAULT_VALUE_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes on the value stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes on the value stack.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":182880,"byte_end":182927,"line_start":32,"line_end":32,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":949},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":183045,"byte_end":183069,"line_start":36,"line_end":36,"column_start":11,"column_end":35},"name":"DEFAULT_CALL_STACK_LIMIT","qualname":"::runner::DEFAULT_CALL_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of levels on the call stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of levels on the call stack.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":182987,"byte_end":183034,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235672,"byte_end":235685,"line_start":1513,"line_end":1513,"column_start":12,"column_end":25},"name":"StackRecycler","qualname":"::runner::StackRecycler","value":"StackRecycler {  }","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"decl_id":null,"docs":" Used to recycle stacks instead of allocating them repeatedly.\n","sig":null,"attributes":[{"value":"/ Used to recycle stacks instead of allocating them repeatedly.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235595,"byte_end":235660,"line_start":1512,"line_end":1512,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236030,"byte_end":236041,"line_start":1524,"line_end":1524,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<StackRecycler>::with_limits","value":"pub fn with_limits(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit stacks created by this recycler to\n - `value_stack_limit` bytes for values and\n - `call_stack_limit` levels for calls.\n","sig":null,"attributes":[{"value":"/ Limit stacks created by this recycler to","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235876,"byte_end":235920,"line_start":1521,"line_end":1521,"column_start":5,"column_end":49}},{"value":"/ - `value_stack_limit` bytes for values and","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235925,"byte_end":235971,"line_start":1522,"line_end":1522,"column_start":5,"column_end":51}},{"value":"/ - `call_stack_limit` levels for calls.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235976,"byte_end":236018,"line_start":1523,"line_end":1523,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236628,"byte_end":236633,"line_start":1541,"line_end":1541,"column_start":12,"column_end":17},"name":"clear","qualname":"<StackRecycler>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears any values left on the stack to avoid\n leaking them to future export invocations.","sig":null,"attributes":[{"value":"/ Clears any values left on the stack to avoid","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236269,"byte_end":236317,"line_start":1533,"line_end":1533,"column_start":5,"column_end":53}},{"value":"/ leaking them to future export invocations.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236322,"byte_end":236368,"line_start":1534,"line_end":1534,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236373,"byte_end":236376,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ This is a secondary defense to prevent modules from","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236381,"byte_end":236436,"line_start":1536,"line_end":1536,"column_start":5,"column_end":60}},{"value":"/ exploiting faulty stack handling in the interpreter.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236441,"byte_end":236497,"line_start":1537,"line_end":1537,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236502,"byte_end":236505,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ Do note that there are additional channels that","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236510,"byte_end":236561,"line_start":1539,"line_end":1539,"column_start":5,"column_end":56}},{"value":"/ can leak information into an untrusted module.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":236566,"byte_end":236616,"line_start":1540,"line_end":1540,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238599,"byte_end":238607,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"TableRef","qualname":"::table::TableRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a table (See [`TableInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a table (See [`TableInstance`] for details).","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238386,"byte_end":238447,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238448,"byte_end":238451,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238452,"byte_end":238506,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238507,"byte_end":238510,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238511,"byte_end":238559,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238560,"byte_end":238563,"line_start":11,"line_end":11,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239328,"byte_end":239341,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"TableInstance","qualname":"::table::TableInstance","value":"TableInstance {  }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"decl_id":null,"docs":" Runtime representation of a table.","sig":null,"attributes":[{"value":"/ Runtime representation of a table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238766,"byte_end":238804,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238805,"byte_end":238808,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A table is a array of untyped functions. It allows wasm code to call functions","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238809,"byte_end":238891,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ indirectly through a dynamic index into a table. For example, this allows emulating function","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238892,"byte_end":238988,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ pointers by way of table indices.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238989,"byte_end":239026,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239027,"byte_end":239030,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Table is created with an initial size but can be grown dynamically via [`grow`] method.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239031,"byte_end":239122,"line_start":28,"line_end":28,"column_start":1,"column_end":92}},{"value":"/ Growth can be limited by an optional maximum size.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239123,"byte_end":239177,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239178,"byte_end":239181,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In future, a table might be extended to be able to hold not only functions but different types.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239182,"byte_end":239281,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239282,"byte_end":239285,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`grow`]: #method.grow","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239286,"byte_end":239312,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239313,"byte_end":239316,"line_start":34,"line_end":34,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240118,"byte_end":240123,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TableInstance>::alloc","value":"pub fn alloc(u32, Option<u32>) -> Result<TableRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a table instance.","sig":null,"attributes":[{"value":"/ Allocate a table instance.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239766,"byte_end":239796,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239801,"byte_end":239804,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The table allocated with initial size, specified by `initial_size`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239809,"byte_end":239880,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ Maximum size can be specified by `maximum_size`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239885,"byte_end":239937,"line_start":55,"line_end":55,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239942,"byte_end":239945,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ All table elements are allocated uninitialized.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239950,"byte_end":240001,"line_start":57,"line_end":57,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240006,"byte_end":240009,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240014,"byte_end":240026,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240031,"byte_end":240034,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `initial_size` is greater than `maximum_size`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240039,"byte_end":240106,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240746,"byte_end":240758,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"initial_size","qualname":"<TableInstance>::initial_size","value":"pub fn initial_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns size this table was created with.\n","sig":null,"attributes":[{"value":"/ Returns size this table was created with.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240689,"byte_end":240734,"line_start":80,"line_end":80,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240881,"byte_end":240893,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"maximum_size","qualname":"<TableInstance>::maximum_size","value":"pub fn maximum_size(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size `TableInstance` can grow to.\n","sig":null,"attributes":[{"value":"/ Returns maximum size `TableInstance` can grow to.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240816,"byte_end":240869,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241009,"byte_end":241021,"line_start":91,"line_end":91,"column_start":12,"column_end":24},"name":"current_size","qualname":"<TableInstance>::current_size","value":"pub fn current_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns current size of the table.\n","sig":null,"attributes":[{"value":"/ Returns current size of the table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":240959,"byte_end":240997,"line_start":90,"line_end":90,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241281,"byte_end":241285,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"grow","qualname":"<TableInstance>::grow","value":"pub fn grow(&Self, u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the table by given number of elements.","sig":null,"attributes":[{"value":"/ Increases the size of the table by given number of elements.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241091,"byte_end":241155,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241160,"byte_end":241163,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241168,"byte_end":241180,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241185,"byte_end":241188,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if tried to allocate more elements than permited by limit.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":241193,"byte_end":241269,"line_start":99,"line_end":99,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":242108,"byte_end":242111,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"get","qualname":"<TableInstance>::get","value":"pub fn get(&Self, u32) -> Result<Option<FuncRef>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the specific value in the table\n","sig":null,"attributes":[{"value":"/ Get the specific value in the table","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":242057,"byte_end":242096,"line_start":124,"line_end":124,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":242611,"byte_end":242614,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"set","qualname":"<TableInstance>::set","value":"pub fn set(&Self, u32, Option<FuncRef>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the table element to the specified function.\n","sig":null,"attributes":[{"value":"/ Set the table element to the specified function.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":242547,"byte_end":242599,"line_start":137,"line_end":137,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243586,"byte_end":243595,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Signature","qualname":"::types::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"decl_id":null,"docs":" Signature of a [function].","sig":null,"attributes":[{"value":"/ Signature of a [function].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243210,"byte_end":243240,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243241,"byte_end":243244,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Signature of a function consists of zero or more parameter [types][type] and zero or one return [type].","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243245,"byte_end":243352,"line_start":7,"line_end":7,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243353,"byte_end":243356,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Two signatures are considered equal if they have equal list of parameters and equal return types.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243357,"byte_end":243458,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243459,"byte_end":243462,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [type]: enum.ValueType.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243463,"byte_end":243494,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/ [function]: struct.FuncInstance.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243495,"byte_end":243535,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244237,"byte_end":244240,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new<C: Into<Cow>>(C, Option<ValueType>) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Creates new signature with givens\n parameter types and optional return type.","sig":null,"attributes":[{"value":"/ Creates new signature with givens","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243697,"byte_end":243734,"line_start":20,"line_end":20,"column_start":5,"column_end":42}},{"value":"/ parameter types and optional return type.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243739,"byte_end":243784,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243789,"byte_end":243792,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243797,"byte_end":243811,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243816,"byte_end":243819,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243824,"byte_end":243835,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{Signature, ValueType};","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243840,"byte_end":243878,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243883,"byte_end":243886,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ // s1: (i32) -> ()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243891,"byte_end":243913,"line_start":28,"line_end":28,"column_start":5,"column_end":27}},{"value":"/ let s1 = Signature::new(&[ValueType::I32][..], None);","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243918,"byte_end":243975,"line_start":29,"line_end":29,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243980,"byte_end":243983,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // s2: () -> i32","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243988,"byte_end":244008,"line_start":31,"line_end":31,"column_start":5,"column_end":25}},{"value":"/ let s2 = Signature::new(&[][..], Some(ValueType::I32));","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244013,"byte_end":244072,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244077,"byte_end":244080,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ // s3: (I64) -> ()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244085,"byte_end":244107,"line_start":34,"line_end":34,"column_start":5,"column_end":27}},{"value":"/ let dynamic_params = vec![ValueType::I64];","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244112,"byte_end":244158,"line_start":35,"line_end":35,"column_start":5,"column_end":51}},{"value":"/ let s3 = Signature::new(dynamic_params, None);","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244163,"byte_end":244213,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244218,"byte_end":244225,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244517,"byte_end":244523,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"params","qualname":"<Signature>::params","value":"pub fn params(&Self) -> &[ValueType]","parent":null,"children":[],"decl_id":null,"docs":" Returns parameter types of this signature.\n","sig":null,"attributes":[{"value":"/ Returns parameter types of this signature.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244459,"byte_end":244505,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244643,"byte_end":244654,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"return_type","qualname":"<Signature>::return_type","value":"pub fn return_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Returns return type of this signature.\n","sig":null,"attributes":[{"value":"/ Returns return type of this signature.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":244589,"byte_end":244631,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245363,"byte_end":245379,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"GlobalDescriptor","qualname":"::types::GlobalDescriptor","value":"GlobalDescriptor {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301}],"decl_id":null,"docs":" Description of a global variable.","sig":null,"attributes":[{"value":"/ Description of a global variable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245157,"byte_end":245194,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245195,"byte_end":245198,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of global variables.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245199,"byte_end":245257,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245258,"byte_end":245297,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245298,"byte_end":245301,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245302,"byte_end":245351,"line_start":79,"line_end":79,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245821,"byte_end":245831,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalDescriptor>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns [`ValueType`] of the requested global.","sig":null,"attributes":[{"value":"/ Returns [`ValueType`] of the requested global.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245708,"byte_end":245758,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245763,"byte_end":245766,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`ValueType`]: enum.ValueType.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245771,"byte_end":245809,"line_start":95,"line_end":95,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245950,"byte_end":245960,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalDescriptor>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the requested global mutable.\n","sig":null,"attributes":[{"value":"/ Returns whether the requested global mutable.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245889,"byte_end":245938,"line_start":100,"line_end":100,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246194,"byte_end":246209,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"TableDescriptor","qualname":"::types::TableDescriptor","value":"TableDescriptor {  }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"decl_id":null,"docs":" Description of a table.","sig":null,"attributes":[{"value":"/ Description of a table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246008,"byte_end":246035,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246036,"byte_end":246039,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of tables.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246040,"byte_end":246088,"line_start":108,"line_end":108,"column_start":1,"column_end":49}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246089,"byte_end":246128,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246129,"byte_end":246132,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246133,"byte_end":246182,"line_start":111,"line_end":111,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246570,"byte_end":246577,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"initial","qualname":"<TableDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns initial size of the requested table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246510,"byte_end":246558,"line_start":125,"line_end":125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246686,"byte_end":246693,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"maximum","qualname":"<TableDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns maximum size of the requested table.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246626,"byte_end":246674,"line_start":130,"line_end":130,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246951,"byte_end":246967,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"MemoryDescriptor","qualname":"::types::MemoryDescriptor","value":"MemoryDescriptor {  }","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315}],"decl_id":null,"docs":" Description of a linear memory.","sig":null,"attributes":[{"value":"/ Description of a linear memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246748,"byte_end":246783,"line_start":136,"line_end":136,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246784,"byte_end":246787,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of linear memories.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246788,"byte_end":246845,"line_start":138,"line_end":138,"column_start":1,"column_end":58}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246846,"byte_end":246885,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246886,"byte_end":246889,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246890,"byte_end":246939,"line_start":141,"line_end":141,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247347,"byte_end":247354,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns initial size (in pages) of the requested memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247275,"byte_end":247335,"line_start":155,"line_end":155,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247475,"byte_end":247482,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns maximum size (in pages) of the requested memory.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247403,"byte_end":247463,"line_start":160,"line_end":160,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9920,"byte_end":9940,"line_start":314,"line_end":314,"column_start":9,"column_end":29},"name":"nan_preserving_float","qualname":"::nan_preserving_float","value":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479}],"decl_id":null,"docs":" Floating point types that preserve NaN values.\n","sig":null,"attributes":[{"value":"/ Floating point types that preserve NaN values.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9861,"byte_end":9911,"line_start":313,"line_end":313,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10045,"byte_end":10051,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484}],"decl_id":null,"docs":" Deserialized module prepared for instantiation.\n","sig":null,"attributes":[{"value":"/ Deserialized module prepared for instantiation.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":9982,"byte_end":10033,"line_start":318,"line_end":318,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11133,"byte_end":11156,"line_start":357,"line_end":357,"column_start":12,"column_end":35},"name":"from_parity_wasm_module","qualname":"<Module>::from_parity_wasm_module","value":"pub fn from_parity_wasm_module(parity_wasm::elements::Module)\n-> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from `parity_wasm::elements::Module`.","sig":null,"attributes":[{"value":"/ Create `Module` from `parity_wasm::elements::Module`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10156,"byte_end":10213,"line_start":325,"line_end":325,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10218,"byte_end":10221,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This function will load, validate and prepare a `parity_wasm`'s `Module`.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10226,"byte_end":10303,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10308,"byte_end":10311,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10316,"byte_end":10328,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10333,"byte_end":10336,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10341,"byte_end":10393,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10398,"byte_end":10401,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10406,"byte_end":10420,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10425,"byte_end":10428,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10433,"byte_end":10444,"line_start":335,"line_end":335,"column_start":5,"column_end":16}},{"value":"/ extern crate parity_wasm;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10449,"byte_end":10478,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/ extern crate wasmi;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10483,"byte_end":10506,"line_start":337,"line_end":337,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10511,"byte_end":10514,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ use parity_wasm::builder;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10519,"byte_end":10548,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/ use parity_wasm::elements;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10553,"byte_end":10583,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10596,"byte_end":10611,"line_start":342,"line_end":342,"column_start":5,"column_end":20}},{"value":"/     let parity_module =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10616,"byte_end":10643,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/         builder::module()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10648,"byte_end":10677,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/             .function()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10682,"byte_end":10709,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/                 .signature().with_param(elements::ValueType::I32).build()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10714,"byte_end":10791,"line_start":346,"line_end":346,"column_start":5,"column_end":82}},{"value":"/                 .body().build()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10796,"byte_end":10831,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/             .build()","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10836,"byte_end":10860,"line_start":348,"line_end":348,"column_start":5,"column_end":29}},{"value":"/         .build();","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10865,"byte_end":10886,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10891,"byte_end":10894,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/     let module = wasmi::Module::from_parity_wasm_module(parity_module)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10899,"byte_end":10973,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/         .expect(\"parity-wasm builder generated invalid module!\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10978,"byte_end":11047,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11052,"byte_end":11055,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11060,"byte_end":11099,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11104,"byte_end":11109,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11114,"byte_end":11121,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13231,"byte_end":13250,"line_start":419,"line_end":419,"column_start":12,"column_end":31},"name":"deny_floating_point","qualname":"<Module>::deny_floating_point","value":"pub fn deny_floating_point(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fail if the module contains any floating-point operations","sig":null,"attributes":[{"value":"/ Fail if the module contains any floating-point operations","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11368,"byte_end":11429,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11434,"byte_end":11437,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11442,"byte_end":11454,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11459,"byte_end":11462,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11467,"byte_end":11519,"line_start":367,"line_end":367,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11524,"byte_end":11527,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11532,"byte_end":11546,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11551,"byte_end":11554,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11559,"byte_end":11570,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11575,"byte_end":11600,"line_start":372,"line_end":372,"column_start":5,"column_end":30}},{"value":"/ # extern crate wat;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11605,"byte_end":11628,"line_start":373,"line_end":373,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11633,"byte_end":11636,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11641,"byte_end":11671,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/     wat::parse_str(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11676,"byte_end":11699,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11704,"byte_end":11719,"line_start":377,"line_end":377,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11724,"byte_end":11743,"line_start":378,"line_end":378,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs i32) (param $rhs i32) (result i32)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11748,"byte_end":11818,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11823,"byte_end":11856,"line_start":380,"line_end":380,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11861,"byte_end":11894,"line_start":381,"line_end":381,"column_start":5,"column_end":38}},{"value":"/                i32.add))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11899,"byte_end":11927,"line_start":382,"line_end":382,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11932,"byte_end":11947,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11952,"byte_end":11961,"line_start":384,"line_end":384,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":11966,"byte_end":12005,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12010,"byte_end":12013,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12018,"byte_end":12075,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12080,"byte_end":12163,"line_start":388,"line_end":388,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_ok());","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12168,"byte_end":12218,"line_start":389,"line_end":389,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12223,"byte_end":12226,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12231,"byte_end":12261,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/     wat::parse_str(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12266,"byte_end":12289,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12294,"byte_end":12309,"line_start":393,"line_end":393,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12314,"byte_end":12333,"line_start":394,"line_end":394,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12338,"byte_end":12408,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12413,"byte_end":12446,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12451,"byte_end":12484,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/                f32.add))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12489,"byte_end":12517,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12522,"byte_end":12537,"line_start":399,"line_end":399,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12542,"byte_end":12551,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12556,"byte_end":12595,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12600,"byte_end":12603,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12608,"byte_end":12691,"line_start":403,"line_end":403,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12696,"byte_end":12747,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12752,"byte_end":12755,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12760,"byte_end":12790,"line_start":406,"line_end":406,"column_start":5,"column_end":35}},{"value":"/     wat::parse_str(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12795,"byte_end":12818,"line_start":407,"line_end":407,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12823,"byte_end":12838,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12843,"byte_end":12862,"line_start":409,"line_end":409,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12867,"byte_end":12937,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs))","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12942,"byte_end":12977,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/         \"#,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":12982,"byte_end":12997,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13002,"byte_end":13011,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13016,"byte_end":13055,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13060,"byte_end":13063,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13068,"byte_end":13151,"line_start":416,"line_end":416,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13156,"byte_end":13207,"line_start":417,"line_end":417,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13212,"byte_end":13219,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14180,"byte_end":14191,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<Module>::from_buffer","value":"pub fn from_buffer<B: AsRef<[u8]>>(B) -> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from a given buffer.","sig":null,"attributes":[{"value":"/ Create `Module` from a given buffer.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13363,"byte_end":13403,"line_start":423,"line_end":423,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13408,"byte_end":13411,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This function will deserialize wasm module from a given module,","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13416,"byte_end":13483,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ validate and prepare it for instantiation.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13488,"byte_end":13534,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13539,"byte_end":13542,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13547,"byte_end":13559,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13564,"byte_end":13567,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if wasm binary in provided `buffer` is not valid wasm binary.","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13572,"byte_end":13651,"line_start":430,"line_end":430,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13656,"byte_end":13659,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13664,"byte_end":13678,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13683,"byte_end":13686,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13691,"byte_end":13702,"line_start":434,"line_end":434,"column_start":5,"column_end":16}},{"value":"/ extern crate wasmi;","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13707,"byte_end":13730,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13735,"byte_end":13738,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13743,"byte_end":13758,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/     let module =","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13763,"byte_end":13783,"line_start":438,"line_end":438,"column_start":5,"column_end":25}},{"value":"/         wasmi::Module::from_buffer(","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13788,"byte_end":13827,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/             // Minimal module:","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13832,"byte_end":13866,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/             //   \\0asm - magic","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13871,"byte_end":13905,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/             //    0x01 - version (in little-endian)","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13910,"byte_end":13965,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/             &[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":13970,"byte_end":14035,"line_start":443,"line_end":443,"column_start":5,"column_end":70}},{"value":"/         ).expect(\"Failed to load minimal module\");","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14040,"byte_end":14094,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14099,"byte_end":14102,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14107,"byte_end":14146,"line_start":446,"line_end":446,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14151,"byte_end":14156,"line_start":447,"line_end":447,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":14161,"byte_end":14168,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4493,"byte_end":4498,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6734,"byte_end":6739,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":7200,"byte_end":7205,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":7946,"byte_end":7951,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8417,"byte_end":8422,"line_start":249,"line_end":249,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8522,"byte_end":8527,"line_start":255,"line_end":255,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15254,"byte_end":15261,"line_start":27,"line_end":27,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":16311,"byte_end":16323,"line_start":63,"line_end":63,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":16924,"byte_end":16936,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23133,"byte_end":23147,"line_start":251,"line_end":251,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23590,"byte_end":23604,"line_start":271,"line_end":271,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27249,"byte_end":27258,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28013,"byte_end":28027,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29840,"byte_end":29851,"line_start":10,"line_end":10,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29978,"byte_end":29989,"line_start":16,"line_end":16,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30071,"byte_end":30082,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":34117,"byte_end":34129,"line_start":163,"line_end":163,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38816,"byte_end":38830,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38902,"byte_end":38916,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39783,"byte_end":39797,"line_start":149,"line_end":149,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":43174,"byte_end":43183,"line_start":260,"line_end":260,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":47832,"byte_end":47836,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":48838,"byte_end":48847,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":56178,"byte_end":56190,"line_start":545,"line_end":545,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":57551,"byte_end":57566,"line_start":588,"line_end":588,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":57676,"byte_end":57691,"line_start":595,"line_end":595,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/vec_bytebuf.rs","byte_start":95437,"byte_end":95444,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70970,"byte_end":70979,"line_start":42,"line_end":42,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72040,"byte_end":72054,"line_start":72,"line_end":72,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72450,"byte_end":72463,"line_start":88,"line_end":88,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72775,"byte_end":72789,"line_start":101,"line_end":101,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87378,"byte_end":87384,"line_start":541,"line_end":541,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":88120,"byte_end":88126,"line_start":563,"line_end":563,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97451,"byte_end":97460,"line_start":50,"line_end":50,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98216,"byte_end":98225,"line_start":80,"line_end":80,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98627,"byte_end":98636,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99021,"byte_end":99030,"line_start":106,"line_end":106,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101448,"byte_end":101462,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":659},{"krate":0,"index":665},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123180,"byte_end":123199,"line_start":717,"line_end":717,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":136699,"byte_end":136713,"line_start":45,"line_end":45,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":137792,"byte_end":137800,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":138704,"byte_end":138712,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":178200,"byte_end":178204,"line_start":1155,"line_end":1155,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/mod.rs","byte_start":130185,"byte_end":130200,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":183872,"byte_end":183885,"line_start":52,"line_end":52,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":185256,"byte_end":185269,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":185519,"byte_end":185532,"line_start":125,"line_end":125,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":186699,"byte_end":186715,"line_start":160,"line_end":160,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":187192,"byte_end":187203,"line_start":183,"line_end":183,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1145},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":229730,"byte_end":229745,"line_start":1282,"line_end":1282,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":231013,"byte_end":231028,"line_start":1326,"line_end":1326,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":232499,"byte_end":232509,"line_start":1379,"line_end":1379,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":232743,"byte_end":232753,"line_start":1388,"line_end":1388,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235270,"byte_end":235279,"line_start":1494,"line_end":1494,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235856,"byte_end":235869,"line_start":1520,"line_end":1520,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":238085,"byte_end":238098,"line_start":1589,"line_end":1589,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238657,"byte_end":238665,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239490,"byte_end":239503,"line_start":42,"line_end":42,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239746,"byte_end":239759,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243681,"byte_end":243690,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245436,"byte_end":245452,"line_start":85,"line_end":85,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246264,"byte_end":246279,"line_start":117,"line_end":117,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247022,"byte_end":247038,"line_start":147,"line_end":147,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10143,"byte_end":10149,"line_start":324,"line_end":324,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":4493,"byte_end":4498,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":6734,"byte_end":6739,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":7200,"byte_end":7205,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":7946,"byte_end":7951,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1493},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8417,"byte_end":8422,"line_start":249,"line_end":249,"column_start":21,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":8522,"byte_end":8527,"line_start":255,"line_end":255,"column_start":34,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":15254,"byte_end":15261,"line_start":27,"line_end":27,"column_start":29,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":16311,"byte_end":16323,"line_start":63,"line_end":63,"column_start":21,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":16924,"byte_end":16936,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23133,"byte_end":23147,"line_start":251,"line_end":251,"column_start":21,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/func.rs","byte_start":23590,"byte_end":23604,"line_start":271,"line_end":271,"column_start":13,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":27249,"byte_end":27258,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/global.rs","byte_start":28013,"byte_end":28027,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29840,"byte_end":29851,"line_start":10,"line_end":10,"column_start":39,"column_end":50},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":29978,"byte_end":29989,"line_start":16,"line_end":16,"column_start":36,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":30071,"byte_end":30082,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/host.rs","byte_start":34117,"byte_end":34129,"line_start":163,"line_end":163,"column_start":20,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":205},"to":{"krate":0,"index":203}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38816,"byte_end":38830,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":38902,"byte_end":38916,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":39783,"byte_end":39797,"line_start":149,"line_end":149,"column_start":29,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":254},"to":{"krate":0,"index":249}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/imports.rs","byte_start":43174,"byte_end":43183,"line_start":260,"line_end":260,"column_start":31,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":278}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":47832,"byte_end":47836,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":48838,"byte_end":48847,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":56178,"byte_end":56190,"line_start":545,"line_end":545,"column_start":6,"column_end":18},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":57551,"byte_end":57566,"line_start":588,"line_end":588,"column_start":10,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/isa.rs","byte_start":57676,"byte_end":57691,"line_start":595,"line_end":595,"column_start":23,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/vec_bytebuf.rs","byte_start":95437,"byte_end":95444,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":70970,"byte_end":70979,"line_start":42,"line_end":42,"column_start":29,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2443},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72040,"byte_end":72054,"line_start":72,"line_end":72,"column_start":21,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72450,"byte_end":72463,"line_start":88,"line_end":88,"column_start":6,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":72775,"byte_end":72789,"line_start":101,"line_end":101,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":87378,"byte_end":87384,"line_start":541,"line_end":541,"column_start":34,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/memory/mod.rs","byte_start":88120,"byte_end":88126,"line_start":563,"line_end":563,"column_start":34,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":97451,"byte_end":97460,"line_start":50,"line_end":50,"column_start":29,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98216,"byte_end":98225,"line_start":80,"line_end":80,"column_start":16,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":98627,"byte_end":98636,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":99021,"byte_end":99030,"line_start":106,"line_end":106,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":101448,"byte_end":101462,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/module.rs","byte_start":123180,"byte_end":123199,"line_start":717,"line_end":717,"column_start":10,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":136699,"byte_end":136713,"line_start":45,"line_end":45,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":137792,"byte_end":137800,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":769},"to":{"krate":21,"index":288}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":138704,"byte_end":138712,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/compile.rs","byte_start":178200,"byte_end":178204,"line_start":1155,"line_end":1155,"column_start":6,"column_end":10},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/prepare/mod.rs","byte_start":130185,"byte_end":130200,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":815},"to":{"krate":21,"index":280}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":183872,"byte_end":183885,"line_start":52,"line_end":52,"column_start":6,"column_end":19},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":185256,"byte_end":185269,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":185519,"byte_end":185532,"line_start":125,"line_end":125,"column_start":29,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":186699,"byte_end":186715,"line_start":160,"line_end":160,"column_start":6,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":187192,"byte_end":187203,"line_start":183,"line_end":183,"column_start":6,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":229730,"byte_end":229745,"line_start":1282,"line_end":1282,"column_start":6,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":231013,"byte_end":231028,"line_start":1326,"line_end":1326,"column_start":21,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":232499,"byte_end":232509,"line_start":1379,"line_end":1379,"column_start":27,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1173},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":232743,"byte_end":232753,"line_start":1388,"line_end":1388,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235270,"byte_end":235279,"line_start":1494,"line_end":1494,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":235856,"byte_end":235869,"line_start":1520,"line_end":1520,"column_start":6,"column_end":19},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/runner.rs","byte_start":238085,"byte_end":238098,"line_start":1589,"line_end":1589,"column_start":18,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":238657,"byte_end":238665,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239490,"byte_end":239503,"line_start":42,"line_end":42,"column_start":21,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/table.rs","byte_start":239746,"byte_end":239759,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":243681,"byte_end":243690,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":245436,"byte_end":245452,"line_start":85,"line_end":85,"column_start":6,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":246264,"byte_end":246279,"line_start":117,"line_end":117,"column_start":6,"column_end":21},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/types.rs","byte_start":247022,"byte_end":247038,"line_start":147,"line_end":147,"column_start":6,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/git/checkouts/wasmi-c6a8fe6a5e99e59f/e331fa3/src/lib.rs","byte_start":10143,"byte_end":10149,"line_start":324,"line_end":324,"column_start":6,"column_end":12},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}}]}