{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2","program":"/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","ecdsa","--edition=2021","/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"der\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"rfc6979\"","--cfg","feature=\"sign\"","--cfg","feature=\"verify\"","-C","metadata=c183b4fe10a9e235","-C","extra-filename=-c183b4fe10a9e235","--out-dir","/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","-L","dependency=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","--extern","der=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libder-c2f7224cc774c6d2.rmeta","--extern","elliptic_curve=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libelliptic_curve-d8d7dcef64ac7290.rmeta","--extern","rfc6979=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/librfc6979-78d06e767e2c4cb4.rmeta","--extern","signature=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libsignature-6b9fa5b8713a930b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libecdsa-c183b4fe10a9e235.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[10995397791077788243,0]},"crate_root":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src","external_crates":[{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":5,"id":{"name":"der","disambiguator":[10087981493866312366,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":6,"id":{"name":"const_oid","disambiguator":[1816347806600932989,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":7,"id":{"name":"elliptic_curve","disambiguator":[3715996906993465787,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":8,"id":{"name":"crypto_bigint","disambiguator":[4354012294143018265,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":9,"id":{"name":"generic_array","disambiguator":[148266758978165011,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":10,"id":{"name":"typenum","disambiguator":[9985697950693171865,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":11,"id":{"name":"subtle","disambiguator":[7554292207942428633,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":12,"id":{"name":"rand_core","disambiguator":[6339594233383922311,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":13,"id":{"name":"zeroize","disambiguator":[123217666717464257,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":14,"id":{"name":"group","disambiguator":[4773975437671215233,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":15,"id":{"name":"ff","disambiguator":[16602344427188125740,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":16,"id":{"name":"digest","disambiguator":[235920889584190025,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":17,"id":{"name":"crypto_common","disambiguator":[12311954631248424683,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":18,"id":{"name":"block_buffer","disambiguator":[11246361445821593039,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":19,"id":{"name":"sec1","disambiguator":[8860017960032551140,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","num":20,"id":{"name":"base16ct","disambiguator":[3654153521453572287,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","num":21,"id":{"name":"signature","disambiguator":[16286497189307573180,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","num":22,"id":{"name":"rfc6979","disambiguator":[11054089559903785107,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","num":23,"id":{"name":"hmac","disambiguator":[7090975468980687930,0]}}],"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":0,"byte_end":12805,"line_start":1,"line_end":440,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2153,"byte_end":2163,"line_start":65,"line_end":65,"column_start":26,"column_end":36},"alias_span":null,"name":"RecoveryId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2233,"byte_end":2247,"line_start":68,"line_end":68,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":102},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2262,"byte_end":2274,"line_start":68,"line_end":68,"column_start":38,"column_end":50},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":923},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2276,"byte_end":2286,"line_start":68,"line_end":68,"column_start":52,"column_end":62},"alias_span":null,"name":"PrimeCurve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2352,"byte_end":2361,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":127},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2370,"byte_end":2375,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":21},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2377,"byte_end":2383,"line_start":71,"line_end":71,"column_start":34,"column_end":40},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2481,"byte_end":2491,"line_start":75,"line_end":75,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2594,"byte_end":2606,"line_start":79,"line_end":79,"column_start":24,"column_end":36},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":0,"byte_end":12805,"line_start":1,"line_end":440,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":24},{"krate":0,"index":120},{"krate":0,"index":272},{"krate":0,"index":475},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":694},{"krate":0,"index":703},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734}],"decl_id":null,"docs":"# [RustCrypto]: ECDSA","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":286,"byte_end":330,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":331,"byte_end":371,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"/ ## `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":373,"byte_end":395,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":396,"byte_end":399,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":400,"byte_end":470,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the [`Signature`] and [`VerifyingKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":471,"byte_end":550,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ types.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":551,"byte_end":561,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":562,"byte_end":565,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":566,"byte_end":630,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":631,"byte_end":634,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Interop","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":635,"byte_end":649,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":650,"byte_end":653,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":654,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":727,"byte_end":800,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":801,"byte_end":880,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":881,"byte_end":958,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":959,"byte_end":1033,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1034,"byte_end":1045,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1046,"byte_end":1049,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1050,"byte_end":1129,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1130,"byte_end":1192,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1193,"byte_end":1263,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1264,"byte_end":1340,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1341,"byte_end":1349,"line_start":32,"line_end":32,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1350,"byte_end":1353,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1354,"byte_end":1388,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1389,"byte_end":1423,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1424,"byte_end":1514,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1515,"byte_end":1549,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1550,"byte_end":1640,"line_start":38,"line_end":38,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1641,"byte_end":1689,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1690,"byte_end":1724,"line_start":40,"line_end":40,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13573,"byte_end":13583,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::recovery::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Recovery IDs, a.k.a. \"recid\".","sig":null,"attributes":[{"value":"/ Recovery IDs, a.k.a. \"recid\".","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":12870,"byte_end":12903,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":12904,"byte_end":12907,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an integer value `0`, `1`, `2`, or `3` included along with a","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":12908,"byte_end":12980,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ signature which is used during the recovery process to select the correct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":12981,"byte_end":13058,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ public key from the signature.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13059,"byte_end":13093,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13094,"byte_end":13097,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It consists of two bits of information:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13098,"byte_end":13141,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13142,"byte_end":13145,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - low bit (0/1): was the y-coordinate of the affine point resulting from","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13146,"byte_end":13222,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   the fixed-base multiplication 𝑘×𝑮 odd? This part of the algorithm","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13223,"byte_end":13301,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/   functions similar to point decompression.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13302,"byte_end":13349,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/ - hi bit (3/4): did the affine x-coordinate of 𝑘×𝑮 overflow the order of","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13350,"byte_end":13433,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/   the scalar field, requiring a reduction when computing `r`?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13434,"byte_end":13499,"line_start":17,"line_end":17,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13687,"byte_end":13690,"line_start":23,"line_end":23,"column_start":15,"column_end":18},"name":"MAX","qualname":"::recovery::RecoveryId::MAX","value":"u8","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Maximum supported value for the recovery ID (inclusive).\n","sig":null,"attributes":[{"value":"/ Maximum supported value for the recovery ID (inclusive).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13612,"byte_end":13672,"line_start":22,"line_end":22,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13954,"byte_end":13957,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<RecoveryId>::new","value":"pub fn new(bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`RecoveryId`] from the following 1-bit arguments:","sig":null,"attributes":[{"value":"/ Create a new [`RecoveryId`] from the following 1-bit arguments:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13705,"byte_end":13772,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13777,"byte_end":13780,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - `is_y_odd`: is the affine y-coordinate of 𝑘×𝑮 odd?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13785,"byte_end":13848,"line_start":27,"line_end":27,"column_start":5,"column_end":61}},{"value":"/ - `is_x_reduced`: did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13853,"byte_end":13942,"line_start":28,"line_end":28,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14157,"byte_end":14169,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"is_x_reduced","qualname":"<RecoveryId>::is_x_reduced","value":"pub fn is_x_reduced(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?\n","sig":null,"attributes":[{"value":"/ Did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14074,"byte_end":14145,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14287,"byte_end":14295,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"is_y_odd","qualname":"<RecoveryId>::is_y_odd","value":"pub fn is_y_odd(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the affine y-coordinate of 𝑘×𝑮 odd?\n","sig":null,"attributes":[{"value":"/ Is the affine y-coordinate of 𝑘×𝑮 odd?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14226,"byte_end":14275,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14405,"byte_end":14412,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"to_byte","qualname":"<RecoveryId>::to_byte","value":"pub fn to_byte(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`RecoveryId`] into a `u8`.\n","sig":null,"attributes":[{"value":"/ Convert this [`RecoveryId`] into a `u8`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14349,"byte_end":14393,"line_start":43,"line_end":43,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::der","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1788,"byte_end":1811,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16025,"byte_end":16079,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16867,"byte_end":16878,"line_start":33,"line_end":33,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::der::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16400,"byte_end":16479,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16480,"byte_end":16492,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16493,"byte_end":16496,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16497,"byte_end":16534,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16535,"byte_end":16538,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16539,"byte_end":16580,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16581,"byte_end":16601,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16602,"byte_end":16605,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16606,"byte_end":16683,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16684,"byte_end":16720,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16721,"byte_end":16724,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16725,"byte_end":16765,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16766,"byte_end":16786,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16787,"byte_end":16857,"line_start":32,"line_end":32,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16976,"byte_end":16983,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::der::MaxSize","value":"<<FieldSize<C> as Add>::Output as Add<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":16886,"byte_end":16966,"line_start":35,"line_end":35,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17266,"byte_end":17275,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"Signature","qualname":"::der::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17162,"byte_end":17194,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17195,"byte_end":17198,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17199,"byte_end":17254,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18225,"byte_end":18228,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18169,"byte_end":18213,"line_start":79,"line_end":79,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18336,"byte_end":18344,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18283,"byte_end":18324,"line_start":84,"line_end":84,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18511,"byte_end":18519,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Signature<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as a boxed byte slice\n","sig":null,"attributes":[{"value":"/ Serialize this signature as a boxed byte slice","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18419,"byte_end":18469,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18474,"byte_end":18499,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1958,"byte_end":1984,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25257,"byte_end":25288,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25289,"byte_end":25292,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25293,"byte_end":25322,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25323,"byte_end":25326,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25327,"byte_end":25368,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25369,"byte_end":25372,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25373,"byte_end":25434,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25435,"byte_end":25438,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25439,"byte_end":25513,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25514,"byte_end":25591,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":25592,"byte_end":25622,"line_start":11,"line_end":11,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":257},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26969,"byte_end":26982,"line_start":55,"line_end":55,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>: Field + Into<FieldBytes<C>> + Reduce<C::UInt> + Sized","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26666,"byte_end":26722,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26723,"byte_end":26726,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access to the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26727,"byte_end":26800,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ secret scalar via `&self`, such as particular curve's `Scalar` type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26801,"byte_end":26873,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26874,"byte_end":26904,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27911,"byte_end":27929,"line_start":78,"line_end":78,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K>(&Self, K, Scalar<C>)\n-> Result<(Signature<C>, Option<RecoveryId>)> where K: Borrow<Self> +\nInvert<Output = CtOption<Self>>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27168,"byte_end":27206,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27211,"byte_end":27214,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27219,"byte_end":27255,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27260,"byte_end":27263,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ - `k`: ephemeral scalar value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27268,"byte_end":27330,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ - `z`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27335,"byte_end":27404,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27409,"byte_end":27479,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27484,"byte_end":27487,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Computing the `hashed_msg` scalar","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27492,"byte_end":27531,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27536,"byte_end":27539,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ To compute a [`Scalar`] from a message digest, use the [`Reduce`] trait","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27544,"byte_end":27619,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ on the computed digest, e.g. `Scalar::from_be_bytes_reduced`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27624,"byte_end":27689,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27694,"byte_end":27697,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27702,"byte_end":27715,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27720,"byte_end":27723,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ECDSA [`Signature`] and, when possible/desired, a [`RecoveryId`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27728,"byte_end":27796,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ which can be used to recover the verifying key for a given signature.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27801,"byte_end":27874,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27879,"byte_end":27903,"line_start":77,"line_end":77,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29290,"byte_end":29305,"line_start":119,"line_end":119,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>: AffineXCoordinate<C> + Copy + Sized","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":28955,"byte_end":29006,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29007,"byte_end":29010,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29011,"byte_end":29080,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29081,"byte_end":29151,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29152,"byte_end":29194,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29195,"byte_end":29225,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29756,"byte_end":29772,"line_start":131,"line_end":131,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, Scalar<C>, &Signature<C>) -> Result<()>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29510,"byte_end":29573,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29578,"byte_end":29581,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29586,"byte_end":29622,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29627,"byte_end":29630,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ - `z`: prehashed message to be verified","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29635,"byte_end":29678,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/ - `sig`: signature to be verified against the key and message","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29683,"byte_end":29748,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":264},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30889,"byte_end":30904,"line_start":165,"line_end":165,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: PrimeCurve","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30327,"byte_end":30395,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30396,"byte_end":30399,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30400,"byte_end":30478,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30479,"byte_end":30515,"line_start":156,"line_end":156,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30516,"byte_end":30519,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30520,"byte_end":30599,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30600,"byte_end":30680,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30681,"byte_end":30722,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30723,"byte_end":30726,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30727,"byte_end":30801,"line_start":162,"line_end":162,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30802,"byte_end":30828,"line_start":163,"line_end":163,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":265},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31070,"byte_end":31076,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30923,"byte_end":30991,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30996,"byte_end":31060,"line_start":167,"line_end":167,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31665,"byte_end":31683,"line_start":189,"line_end":189,"column_start":8,"column_end":26},"name":"rfc6979_generate_k","qualname":"::hazmat::rfc6979_generate_k","value":"pub fn rfc6979_generate_k<C, D>(&NonZeroScalar<C>, &Scalar<C>, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: PrimeCurve + ProjectiveArithmetic,\nD: CoreProxy + FixedOutput<OutputSize = FieldSize<C>>,\nD::Core: BlockSizeUser + BufferKindUser<BufferKind = Eager> + Clone +\nDefault + FixedOutputCore + HashMarker + OutputSizeUser<OutputSize =\nD::OutputSize>, <D::Core as BlockSizeUser>::BlockSize: IsLess<U256>,\nLe<<D::Core as BlockSizeUser>::BlockSize, U256>: NonZero","parent":null,"children":[],"decl_id":null,"docs":" Deterministically compute ECDSA ephemeral scalar `k` using the method\n described in RFC6979.","sig":null,"attributes":[{"value":"/ Deterministically compute ECDSA ephemeral scalar `k` using the method","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31285,"byte_end":31358,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ described in RFC6979.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31359,"byte_end":31384,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31385,"byte_end":31388,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Accepts the following parameters:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31389,"byte_end":31426,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"/ - `x`: secret key","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31427,"byte_end":31448,"line_start":184,"line_end":184,"column_start":1,"column_end":22}},{"value":"/ - `z`: message scalar (i.e. message digest reduced mod p)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31449,"byte_end":31510,"line_start":185,"line_end":185,"column_start":1,"column_end":62}},{"value":"/ - `ad`: optional additional data, e.g. added entropy from an RNG","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31511,"byte_end":31579,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"cfg(all(feature = \"sign\"))","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31580,"byte_end":31609,"line_start":187,"line_end":187,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":33964,"byte_end":33974,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":762}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":33689,"byte_end":33741,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":33742,"byte_end":33745,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":33746,"byte_end":33827,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":33828,"byte_end":33887,"line_start":45,"line_end":45,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34461,"byte_end":34467,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34394,"byte_end":34449,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34676,"byte_end":34686,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34592,"byte_end":34664,"line_start":70,"line_end":70,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35063,"byte_end":35076,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey<C>>::verifying_key","value":"pub fn verifying_key(&Self) -> VerifyingKey<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34897,"byte_end":34966,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34971,"byte_end":34997,"line_start":80,"line_end":80,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35266,"byte_end":35274,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35212,"byte_end":35254,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45064,"byte_end":45076,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44406,"byte_end":44481,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44482,"byte_end":44485,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44486,"byte_end":44567,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44568,"byte_end":44634,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44635,"byte_end":44638,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44639,"byte_end":44660,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44661,"byte_end":44664,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, it provides support for","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44665,"byte_end":44743,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ serializing and deserializing ECDSA signatures using the `Serialize` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44744,"byte_end":44820,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ `Deserialize` traits.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44821,"byte_end":44846,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44847,"byte_end":44850,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The serialization leverages the encoding used by the [`PublicKey`] type,","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44851,"byte_end":44927,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ which is a binary-oriented ASN.1 DER encoding.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":44928,"byte_end":44978,"line_start":42,"line_end":42,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45420,"byte_end":45435,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45345,"byte_end":45408,"line_start":58,"line_end":58,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45791,"byte_end":45802,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<VerifyingKey<C>>::from_affine","value":"pub fn from_affine(AffinePoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an affine point.","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an affine point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45602,"byte_end":45655,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45660,"byte_end":45663,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Error`] if the given affine point is the additive identity","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45668,"byte_end":45743,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ (a.k.a. point at infinity).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45748,"byte_end":45779,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46031,"byte_end":46049,"line_start":75,"line_end":75,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45962,"byte_end":46019,"line_start":74,"line_end":74,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46394,"byte_end":46410,"line_start":83,"line_end":83,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46272,"byte_end":46346,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46351,"byte_end":46382,"line_start":82,"line_end":82,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":690},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3334,"byte_end":3347,"line_start":108,"line_end":108,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<FieldSize<C> as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3259,"byte_end":3324,"line_start":107,"line_end":107,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3450,"byte_end":3464,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3385,"byte_end":3440,"line_start":110,"line_end":110,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4490,"byte_end":4499,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":777}],"decl_id":null,"docs":" ECDSA signature (fixed-size). Generic over elliptic curve types.","sig":null,"attributes":[{"value":"/ ECDSA signature (fixed-size). Generic over elliptic curve types.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3507,"byte_end":3575,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Serialized as fixed-sized big endian scalar values with no added framing:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3580,"byte_end":3657,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3658,"byte_end":3661,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3662,"byte_end":3723,"line_start":117,"line_end":117,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3724,"byte_end":3785,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3786,"byte_end":3789,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3790,"byte_end":3859,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3860,"byte_end":3934,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3935,"byte_end":3964,"line_start":122,"line_end":122,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3965,"byte_end":3968,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ASN.1 DER-encoded signatures also supported via the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":3969,"byte_end":4024,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/ [`Signature::from_der`] and [`Signature::to_der`] methods.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4025,"byte_end":4087,"line_start":125,"line_end":125,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4088,"byte_end":4091,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4092,"byte_end":4113,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4114,"byte_end":4117,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, it provides support for","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4118,"byte_end":4196,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ serializing and deserializing ECDSA signatures using the `Serialize` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4197,"byte_end":4273,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ `Deserialize` traits.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4274,"byte_end":4299,"line_start":131,"line_end":131,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4300,"byte_end":4303,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The serialization uses a 64-byte fixed encoding when used with binary","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4304,"byte_end":4377,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ formats, and a hexadecimal encoding when used with text formats.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4378,"byte_end":4446,"line_start":134,"line_end":134,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4813,"byte_end":4821,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature<C>>::from_der","value":"pub fn from_der(&[u8]) -> Result<Self> where der::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4686,"byte_end":4722,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4727,"byte_end":4750,"line_start":149,"line_end":149,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5193,"byte_end":5205,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\nimpl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\nimpl Into<FieldBytes<C>>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5071,"byte_end":5143,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5148,"byte_end":5181,"line_start":160,"line_end":160,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5444,"byte_end":5455,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"split_bytes","qualname":"<Signature<C>>::split_bytes","value":"pub fn split_bytes(&Self) -> (FieldBytes<C>, FieldBytes<C>)","parent":null,"children":[],"decl_id":null,"docs":" Split the signature into its `r` and `s` components, represented as bytes.\n","sig":null,"attributes":[{"value":"/ Split the signature into its `r` and `s` components, represented as bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5354,"byte_end":5432,"line_start":165,"line_end":165,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5843,"byte_end":5849,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"to_der","qualname":"<Signature<C>>::to_der","value":"pub fn to_der(&Self) -> der::Signature<C> where\nder::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5711,"byte_end":5752,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":5757,"byte_end":5780,"line_start":176,"line_end":176,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6307,"byte_end":6313,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Signature<C>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert this signature into a byte vector.\n","sig":null,"attributes":[{"value":"/ Convert this signature into a byte vector.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6166,"byte_end":6212,"line_start":187,"line_end":187,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6217,"byte_end":6242,"line_start":188,"line_end":188,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6621,"byte_end":6622,"line_start":203,"line_end":203,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6566,"byte_end":6609,"line_start":202,"line_end":202,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6847,"byte_end":6848,"line_start":209,"line_end":209,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6792,"byte_end":6835,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7083,"byte_end":7096,"line_start":215,"line_end":215,"column_start":12,"column_end":25},"name":"split_scalars","qualname":"<Signature<C>>::split_scalars","value":"pub fn split_scalars(&Self) -> (NonZeroScalar<C>, NonZeroScalar<C>)","parent":null,"children":[],"decl_id":null,"docs":" Split the signature into its `r` and `s` scalars.\n","sig":null,"attributes":[{"value":"/ Split the signature into its `r` and `s` scalars.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7018,"byte_end":7071,"line_start":214,"line_end":214,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7389,"byte_end":7400,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7186,"byte_end":7243,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7248,"byte_end":7293,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7298,"byte_end":7301,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7306,"byte_end":7377,"line_start":222,"line_end":222,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13595,"byte_end":13605,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14477,"byte_end":14487,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17677,"byte_end":17686,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18021,"byte_end":18030,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":19563,"byte_end":19572,"line_start":125,"line_end":125,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":19795,"byte_end":19804,"line_start":136,"line_end":136,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":20172,"byte_end":20181,"line_start":150,"line_end":150,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":21293,"byte_end":21302,"line_start":189,"line_end":189,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":22437,"byte_end":22446,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31145,"byte_end":31154,"line_start":172,"line_end":172,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34197,"byte_end":34207,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35366,"byte_end":35376,"line_start":94,"line_end":94,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35671,"byte_end":35681,"line_start":105,"line_end":105,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36079,"byte_end":36089,"line_start":117,"line_end":117,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36380,"byte_end":36390,"line_start":129,"line_end":129,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36627,"byte_end":36637,"line_start":138,"line_end":138,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36943,"byte_end":36953,"line_start":149,"line_end":149,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":37257,"byte_end":37267,"line_start":160,"line_end":160,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":37629,"byte_end":37639,"line_start":173,"line_end":173,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":38744,"byte_end":38754,"line_start":199,"line_end":199,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":39194,"byte_end":39204,"line_start":211,"line_end":211,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":40469,"byte_end":40479,"line_start":244,"line_end":244,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":40963,"byte_end":40973,"line_start":256,"line_end":256,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":41306,"byte_end":41316,"line_start":269,"line_end":269,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":41673,"byte_end":41685,"line_start":283,"line_end":283,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45177,"byte_end":45189,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46527,"byte_end":46539,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46637,"byte_end":46649,"line_start":90,"line_end":90,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47136,"byte_end":47148,"line_start":104,"line_end":104,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47588,"byte_end":47600,"line_start":117,"line_end":117,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47936,"byte_end":47948,"line_start":128,"line_end":128,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48145,"byte_end":48157,"line_start":137,"line_end":137,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48343,"byte_end":48352,"line_start":146,"line_end":146,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48540,"byte_end":48549,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48722,"byte_end":48734,"line_start":164,"line_end":164,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48807,"byte_end":48819,"line_start":166,"line_end":166,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48982,"byte_end":48994,"line_start":175,"line_end":175,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":49278,"byte_end":49290,"line_start":186,"line_end":186,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":49561,"byte_end":49573,"line_start":197,"line_end":197,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4603,"byte_end":4612,"line_start":143,"line_end":143,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6464,"byte_end":6473,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7749,"byte_end":7758,"line_start":237,"line_end":237,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7941,"byte_end":7950,"line_start":247,"line_end":247,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8108,"byte_end":8117,"line_start":257,"line_end":257,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8268,"byte_end":8277,"line_start":265,"line_end":265,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8583,"byte_end":8592,"line_start":280,"line_end":280,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9232,"byte_end":9241,"line_start":306,"line_end":306,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9441,"byte_end":9450,"line_start":316,"line_end":316,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9717,"byte_end":9726,"line_start":329,"line_end":329,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":10077,"byte_end":10086,"line_start":344,"line_end":344,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":1867,"byte_end":1870,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":24}},{"kind":"Mod","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":2043,"byte_end":2049,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":120}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":13595,"byte_end":13605,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/recovery.rs","byte_start":14477,"byte_end":14487,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":17677,"byte_end":17686,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":81},"to":{"krate":21,"index":51}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":18021,"byte_end":18030,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":19563,"byte_end":19572,"line_start":125,"line_end":125,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":19795,"byte_end":19804,"line_start":136,"line_end":136,"column_start":24,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":20172,"byte_end":20181,"line_start":150,"line_end":150,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":21293,"byte_end":21302,"line_start":189,"line_end":189,"column_start":42,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/der.rs","byte_start":22437,"byte_end":22446,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":81},"to":{"krate":21,"index":54}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26987,"byte_end":26992,"line_start":55,"line_end":55,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":62},"to":{"krate":0,"index":257}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":26995,"byte_end":26999,"line_start":55,"line_end":55,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2960},"to":{"krate":0,"index":257}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27017,"byte_end":27023,"line_start":55,"line_end":55,"column_start":59,"column_end":65},"kind":"SuperTrait","from":{"krate":7,"index":53},"to":{"krate":0,"index":257}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":27035,"byte_end":27040,"line_start":55,"line_end":55,"column_start":77,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":257}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29310,"byte_end":29327,"line_start":119,"line_end":119,"column_start":31,"column_end":48},"kind":"SuperTrait","from":{"krate":7,"index":149},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29333,"byte_end":29337,"line_start":119,"line_end":119,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":29340,"byte_end":29345,"line_start":119,"line_end":119,"column_start":61,"column_end":66},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":30906,"byte_end":30916,"line_start":165,"line_end":165,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":7,"index":923},"to":{"krate":0,"index":264}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/hazmat.rs","byte_start":31145,"byte_end":31154,"line_start":172,"line_end":172,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":775},"to":{"krate":21,"index":54}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":34197,"byte_end":34207,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35366,"byte_end":35376,"line_start":94,"line_end":94,"column_start":28,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":760},"to":{"krate":11,"index":57}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":35671,"byte_end":35681,"line_start":105,"line_end":105,"column_start":19,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36079,"byte_end":36089,"line_start":117,"line_end":117,"column_start":18,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36380,"byte_end":36390,"line_start":129,"line_end":129,"column_start":16,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36627,"byte_end":36637,"line_start":138,"line_end":138,"column_start":23,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":36943,"byte_end":36953,"line_start":149,"line_end":149,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":37257,"byte_end":37267,"line_start":160,"line_end":160,"column_start":33,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":37629,"byte_end":37639,"line_start":173,"line_end":173,"column_start":46,"column_end":56},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":760},"to":{"krate":21,"index":86}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":38744,"byte_end":38754,"line_start":199,"line_end":199,"column_start":34,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":760},"to":{"krate":21,"index":74}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":39194,"byte_end":39204,"line_start":211,"line_end":211,"column_start":56,"column_end":66},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":760},"to":{"krate":21,"index":97}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":40469,"byte_end":40479,"line_start":244,"line_end":244,"column_start":44,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":760},"to":{"krate":21,"index":91}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":40963,"byte_end":40973,"line_start":256,"line_end":256,"column_start":36,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":41306,"byte_end":41316,"line_start":269,"line_end":269,"column_start":28,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/sign.rs","byte_start":41673,"byte_end":41685,"line_start":283,"line_end":283,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":45177,"byte_end":45189,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46527,"byte_end":46539,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":46637,"byte_end":46649,"line_start":90,"line_end":90,"column_start":48,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":766},"to":{"krate":21,"index":118}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47136,"byte_end":47148,"line_start":104,"line_end":104,"column_start":36,"column_end":48},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":766},"to":{"krate":21,"index":115}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47588,"byte_end":47600,"line_start":117,"line_end":117,"column_start":36,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":7,"index":102},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":47936,"byte_end":47948,"line_start":128,"line_end":128,"column_start":32,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48145,"byte_end":48157,"line_start":137,"line_end":137,"column_start":33,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48343,"byte_end":48352,"line_start":146,"line_end":146,"column_start":35,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":7,"index":971},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48540,"byte_end":48549,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":7,"index":971},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48722,"byte_end":48734,"line_start":164,"line_end":164,"column_start":16,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48807,"byte_end":48819,"line_start":166,"line_end":166,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":48982,"byte_end":48994,"line_start":175,"line_end":175,"column_start":24,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":49278,"byte_end":49290,"line_start":186,"line_end":186,"column_start":17,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/verify.rs","byte_start":49561,"byte_end":49573,"line_start":197,"line_end":197,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":4603,"byte_end":4612,"line_start":143,"line_end":143,"column_start":9,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":6464,"byte_end":6473,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7749,"byte_end":7758,"line_start":237,"line_end":237,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":775},"to":{"krate":21,"index":51}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":7941,"byte_end":7950,"line_start":247,"line_end":247,"column_start":25,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8108,"byte_end":8117,"line_start":257,"line_end":257,"column_start":18,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8268,"byte_end":8277,"line_start":265,"line_end":265,"column_start":19,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":8583,"byte_end":8592,"line_start":280,"line_end":280,"column_start":28,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9232,"byte_end":9241,"line_start":306,"line_end":306,"column_start":26,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9441,"byte_end":9450,"line_start":316,"line_end":316,"column_start":27,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":9700}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":9717,"byte_end":9726,"line_start":329,"line_end":329,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":9702}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.14.0-pre.2/src/lib.rs","byte_start":10077,"byte_end":10086,"line_start":344,"line_end":344,"column_start":26,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":775},"to":{"krate":1,"index":12326}}]}