{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1","program":"/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","elliptic_curve","--edition=2021","/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"ff\"","--cfg","feature=\"group\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"sec1\"","-C","metadata=d8d7dcef64ac7290","-C","extra-filename=-d8d7dcef64ac7290","--out-dir","/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","-L","dependency=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps","--extern","base16ct=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libbase16ct-ddf3257035a1e879.rmeta","--extern","crypto_bigint=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libcrypto_bigint-9e59935886b87c07.rmeta","--extern","der=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libder-c2f7224cc774c6d2.rmeta","--extern","digest=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libdigest-b65b6c6ab27b2742.rmeta","--extern","ff=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libff-3081fb03719eeec1.rmeta","--extern","generic_array=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libgeneric_array-ebb5ea82e1532a0a.rmeta","--extern","group=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libgroup-631a0b27f2c3eb87.rmeta","--extern","rand_core=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/librand_core-7885d9c885e05857.rmeta","--extern","sec1=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libsec1-e1457abe8718948c.rmeta","--extern","subtle=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libsubtle-9da77050f7ebd6d9.rmeta","--extern","zeroize=/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libzeroize-88d257835a960c99.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/codefoo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/codefoo/Desktop/RustStuff/foo-hack/scrypto/auction/target/rls/debug/deps/libelliptic_curve-d8d7dcef64ac7290.rmeta"},"prelude":{"crate_id":{"name":"elliptic_curve","disambiguator":[3715996906993465787,0]},"crate_root":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src","external_crates":[{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":4,"id":{"name":"crypto_bigint","disambiguator":[4354012294143018265,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","num":5,"id":{"name":"generic_array","disambiguator":[148266758978165011,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":6,"id":{"name":"typenum","disambiguator":[9985697950693171865,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":7,"id":{"name":"subtle","disambiguator":[7554292207942428633,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","num":8,"id":{"name":"rand_core","disambiguator":[6339594233383922311,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","num":9,"id":{"name":"zeroize","disambiguator":[123217666717464257,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":10,"id":{"name":"group","disambiguator":[4773975437671215233,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","num":11,"id":{"name":"ff","disambiguator":[16602344427188125740,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":12,"id":{"name":"digest","disambiguator":[235920889584190025,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":13,"id":{"name":"crypto_common","disambiguator":[12311954631248424683,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","num":14,"id":{"name":"block_buffer","disambiguator":[11246361445821593039,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","num":15,"id":{"name":"sec1","disambiguator":[8860017960032551140,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","num":16,"id":{"name":"der","disambiguator":[10087981493866312366,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","num":17,"id":{"name":"const_oid","disambiguator":[1816347806600932989,0]}},{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","num":18,"id":{"name":"base16ct","disambiguator":[3654153521453572287,0]}}],"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":0,"byte_end":8021,"line_start":1,"line_end":237,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":3125},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8115,"byte_end":8118,"line_start":3,"line_end":3,"column_start":21,"column_end":24},"alias_span":null,"name":"Add","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3156},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8120,"byte_end":8129,"line_start":3,"line_end":3,"column_start":26,"column_end":35},"alias_span":null,"name":"AddAssign","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3135},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8131,"byte_end":8134,"line_start":3,"line_end":3,"column_start":37,"column_end":40},"alias_span":null,"name":"Mul","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3152},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8136,"byte_end":8139,"line_start":3,"line_end":3,"column_start":42,"column_end":45},"alias_span":null,"name":"Neg","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3130},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8141,"byte_end":8144,"line_start":3,"line_end":3,"column_start":47,"column_end":50},"alias_span":null,"name":"Sub","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3160},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8146,"byte_end":8155,"line_start":3,"line_end":3,"column_start":52,"column_end":61},"alias_span":null,"name":"SubAssign","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":15,"index":318},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11289,"byte_end":11300,"line_start":5,"line_end":5,"column_start":23,"column_end":34},"alias_span":null,"name":"Coordinates","value":"","parent":{"krate":0,"index":65}},{"kind":"Use","ref_id":{"krate":15,"index":62},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11302,"byte_end":11313,"line_start":5,"line_end":5,"column_start":36,"column_end":47},"alias_span":null,"name":"ModulusSize","value":"","parent":{"krate":0,"index":65}},{"kind":"Use","ref_id":{"krate":15,"index":357},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11315,"byte_end":11318,"line_start":5,"line_end":5,"column_start":49,"column_end":52},"alias_span":null,"name":"Tag","value":"","parent":{"krate":0,"index":65}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3226,"byte_end":3231,"line_start":101,"line_end":101,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3226,"byte_end":3231,"line_start":101,"line_end":101,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3233,"byte_end":3239,"line_start":101,"line_end":101,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3263,"byte_end":3280,"line_start":103,"line_end":103,"column_start":9,"column_end":26},"alias_span":null,"name":"AffineXCoordinate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3282,"byte_end":3296,"line_start":103,"line_end":103,"column_start":28,"column_end":42},"alias_span":null,"name":"DecompactPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3298,"byte_end":3313,"line_start":103,"line_end":103,"column_start":44,"column_end":59},"alias_span":null,"name":"DecompressPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3315,"byte_end":3330,"line_start":103,"line_end":103,"column_start":61,"column_end":76},"alias_span":null,"name":"PointCompaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3332,"byte_end":3348,"line_start":103,"line_end":103,"column_start":78,"column_end":94},"alias_span":null,"name":"PointCompression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3376,"byte_end":3386,"line_start":105,"line_end":105,"column_start":20,"column_end":30},"alias_span":null,"name":"ScalarCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3388,"byte_end":3394,"line_start":105,"line_end":105,"column_start":32,"column_end":38},"alias_span":null,"name":"IsHigh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":965},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3413,"byte_end":3422,"line_start":106,"line_end":106,"column_start":17,"column_end":26},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3435,"byte_end":3448,"line_start":108,"line_end":108,"column_start":9,"column_end":22},"alias_span":null,"name":"bigint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3468,"byte_end":3481,"line_start":109,"line_end":109,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2827},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3499,"byte_end":3505,"line_start":109,"line_end":109,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3516,"byte_end":3525,"line_start":110,"line_end":110,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3535,"byte_end":3541,"line_start":111,"line_end":111,"column_start":9,"column_end":15},"alias_span":null,"name":"subtle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":9,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3551,"byte_end":3558,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"alias_span":null,"name":"zeroize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3649,"byte_end":3665,"line_start":118,"line_end":118,"column_start":13,"column_end":29},"alias_span":null,"name":"AffineArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":721},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3667,"byte_end":3687,"line_start":118,"line_end":118,"column_start":31,"column_end":51},"alias_span":null,"name":"PrimeCurveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3689,"byte_end":3709,"line_start":118,"line_end":118,"column_start":53,"column_end":73},"alias_span":null,"name":"ProjectiveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3711,"byte_end":3727,"line_start":118,"line_end":118,"column_start":75,"column_end":91},"alias_span":null,"name":"ScalarArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3760,"byte_end":3769,"line_start":120,"line_end":120,"column_start":21,"column_end":30},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":959},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3797,"byte_end":3810,"line_start":121,"line_end":121,"column_start":27,"column_end":40},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3812,"byte_end":3818,"line_start":121,"line_end":121,"column_start":42,"column_end":48},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3832,"byte_end":3834,"line_start":123,"line_end":123,"column_start":5,"column_end":7},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":62},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3843,"byte_end":3848,"line_start":123,"line_end":123,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":82},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3850,"byte_end":3860,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"alias_span":null,"name":"PrimeField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":10,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3867,"byte_end":3872,"line_start":124,"line_end":124,"column_start":5,"column_end":10},"alias_span":null,"name":"group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":10,"index":176},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":3881,"byte_end":3886,"line_start":124,"line_end":124,"column_start":19,"column_end":24},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":0,"byte_end":8021,"line_start":1,"line_end":237,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":65},{"krate":0,"index":118},{"krate":0,"index":134},{"krate":0,"index":162},{"krate":0,"index":568},{"krate":0,"index":683},{"krate":0,"index":727},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930}],"decl_id":null,"docs":"# RustCrypto: Elliptic Curve Traits","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":353,"byte_end":397,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":398,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ ## Usage","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":463,"byte_end":475,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":476,"byte_end":479,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This crate provides traits for describing elliptic curves, along with","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":480,"byte_end":553,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ types which are generic over elliptic curves which can be used as the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":554,"byte_end":627,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ basis of curve-agnostic code.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":628,"byte_end":661,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":662,"byte_end":665,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It's intended to be used with the following concrete elliptic curve","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":666,"byte_end":737,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementations from the [`RustCrypto/elliptic-curves`] project:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":738,"byte_end":806,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":807,"byte_end":810,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - [`bp256`]: brainpoolP256r1 and brainpoolP256t1","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":811,"byte_end":863,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ - [`bp384`]: brainpoolP384r1 and brainpoolP384t1","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":864,"byte_end":916,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ - [`k256`]: secp256k1 a.k.a. K-256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":917,"byte_end":955,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ - [`p256`]: NIST P-256 a.k.a secp256r1, prime256v1","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":956,"byte_end":1010,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ - [`p384`]: NIST P-384 a.k.a. secp384r1","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1011,"byte_end":1054,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The [`ecdsa`] crate provides a generic implementation of the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1059,"byte_end":1123,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ Elliptic Curve Digital Signature Algorithm which can be used with any of","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1124,"byte_end":1200,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ the above crates, either via an external ECDSA implementation, or","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1201,"byte_end":1270,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ using native curve arithmetic where applicable.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1271,"byte_end":1322,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1323,"byte_end":1326,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Type conversions","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1327,"byte_end":1350,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1351,"byte_end":1354,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The following chart illustrates the various conversions possible between","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1355,"byte_end":1431,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ the various types defined by this crate.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1432,"byte_end":1476,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ![Type Conversion Map](https://raw.githubusercontent.com/RustCrypto/media/master/img/elliptic-curve/type-transforms.svg)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1481,"byte_end":1605,"line_start":37,"line_end":37,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1606,"byte_end":1609,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1610,"byte_end":1632,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1633,"byte_end":1636,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1637,"byte_end":1707,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the following types:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1708,"byte_end":1769,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1770,"byte_end":1773,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - [`JwkEcKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1774,"byte_end":1792,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ - [`PublicKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1793,"byte_end":1812,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ - [`ScalarCore`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1813,"byte_end":1833,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1838,"byte_end":1902,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`RustCrypto/elliptic-curves`]: https://github.com/RustCrypto/elliptic-curves","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1907,"byte_end":1988,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ [`bp256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":1989,"byte_end":2067,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ [`bp384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp384","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2068,"byte_end":2146,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ [`k256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/k256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2147,"byte_end":2223,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ [`p256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p256","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2224,"byte_end":2300,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ [`p384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p384","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2301,"byte_end":2377,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ [`ecdsa`]: https://github.com/RustCrypto/signatures/tree/master/ecdsa","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2378,"byte_end":2451,"line_start":56,"line_end":56,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":62}],"decl_id":null,"docs":" Traits for arithmetic operations on elliptic curve field elements.\n","sig":null,"attributes":[{"value":"/ Traits for arithmetic operations on elliptic curve field elements.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8023,"byte_end":8093,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8429,"byte_end":8435,"line_start":14,"line_end":14,"column_start":11,"column_end":17},"name":"Invert","qualname":"::ops::Invert","value":"Invert","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Perform an inversion on a field element (i.e. base field element or scalar)\n","sig":null,"attributes":[{"value":"/ Perform an inversion on a field element (i.e. base field element or scalar)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8339,"byte_end":8418,"line_start":13,"line_end":13,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8474,"byte_end":8480,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::Invert::Output","value":"type Output;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Field element type\n","sig":null,"attributes":[{"value":"/ Field element type","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8442,"byte_end":8464,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8522,"byte_end":8528,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"invert","qualname":"::ops::Invert::invert","value":"pub fn invert(&Self) -> Self::Output","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Invert a field element.\n","sig":null,"attributes":[{"value":"/ Invert a field element.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8487,"byte_end":8514,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9133,"byte_end":9150,"line_start":39,"line_end":39,"column_start":11,"column_end":28},"name":"LinearCombination","qualname":"::ops::LinearCombination","value":"LinearCombination: Group","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Linear combination.","sig":null,"attributes":[{"value":"/ Linear combination.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8732,"byte_end":8755,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8756,"byte_end":8759,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait enables crates to provide an optimized implementation of","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8760,"byte_end":8831,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ linear combinations (e.g. Shamir's Trick), or otherwise provides a default","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8832,"byte_end":8910,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ non-optimized implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8911,"byte_end":8944,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9038,"byte_end":9068,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9203,"byte_end":9210,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"lincomb","qualname":"::ops::LinearCombination::lincomb","value":"pub fn lincomb(&Self, &Self::Scalar, &Self, &Self::Scalar) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Calculates `x * k + y * l`.\n","sig":null,"attributes":[{"value":"/ Calculates `x * k + y * l`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9164,"byte_end":9195,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9347,"byte_end":9353,"line_start":47,"line_end":47,"column_start":11,"column_end":17},"name":"Reduce","qualname":"::ops::Reduce","value":"Reduce<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" Modular reduction.\n","sig":null,"attributes":[{"value":"/ Modular reduction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9314,"byte_end":9336,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9465,"byte_end":9482,"line_start":49,"line_end":49,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"::ops::Reduce::from_uint_reduced","value":"pub fn from_uint_reduced(UInt) -> Self","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9398,"byte_end":9457,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9613,"byte_end":9634,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"from_be_bytes_reduced","qualname":"::ops::Reduce::from_be_bytes_reduced","value":"pub fn from_be_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a big endian integer and perform\n a modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a big endian integer and perform","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9506,"byte_end":9576,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ a modular reduction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9581,"byte_end":9605,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9855,"byte_end":9876,"line_start":59,"line_end":59,"column_start":8,"column_end":29},"name":"from_le_bytes_reduced","qualname":"::ops::Reduce::from_le_bytes_reduced","value":"pub fn from_le_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a little endian integer and perform a\n modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a little endian integer and perform a","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9745,"byte_end":9820,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ modular reduction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9825,"byte_end":9847,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10167,"byte_end":10189,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"from_be_digest_reduced","qualname":"::ops::Reduce::from_be_digest_reduced","value":"pub fn from_be_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Interpret a digest as a big endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a big endian integer and perform a modular","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9987,"byte_end":10055,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ reduction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10060,"byte_end":10074,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10079,"byte_end":10105,"line_start":65,"line_end":65,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10536,"byte_end":10558,"line_start":78,"line_end":78,"column_start":8,"column_end":30},"name":"from_le_digest_reduced","qualname":"::ops::Reduce::from_le_digest_reduced","value":"pub fn from_le_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Interpret a digest as a little endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a little endian integer and perform a modular","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10353,"byte_end":10424,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ reduction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10429,"byte_end":10443,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10448,"byte_end":10474,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10997,"byte_end":11010,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"ReduceNonZero","qualname":"::ops::ReduceNonZero","value":"ReduceNonZero<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":64}],"decl_id":null,"docs":" Modular reduction to a non-zero output.","sig":null,"attributes":[{"value":"/ Modular reduction to a non-zero output.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10720,"byte_end":10763,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10764,"byte_end":10767,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This trait is primarily intended for use by curve implementations such","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10768,"byte_end":10842,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ as the `k256` and `p256` crates.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10843,"byte_end":10879,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10880,"byte_end":10883,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ End users should use the [`Reduce`] impl on","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10884,"byte_end":10931,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ [`NonZeroScalar`][`crate::NonZeroScalar`] instead.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":10932,"byte_end":10986,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":11122,"byte_end":11147,"line_start":95,"line_end":95,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"::ops::ReduceNonZero::from_uint_reduced_nonzero","value":"pub fn from_uint_reduced_nonzero(UInt) -> Self","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":11055,"byte_end":11114,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sec1","qualname":"::sec1","value":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":115}],"decl_id":null,"docs":" Support for SEC1 elliptic curve encoding formats.","sig":null,"attributes":[{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2698,"byte_end":2722,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/ Support for SEC1 elliptic curve encoding formats.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11169,"byte_end":11222,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11223,"byte_end":11226,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11227,"byte_end":11265,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11563,"byte_end":11575,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::sec1::EncodedPoint","value":"sec1::point::EncodedPoint<FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point sized appropriately for a given curve.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point sized appropriately for a given curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11482,"byte_end":11553,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11791,"byte_end":11807,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"FromEncodedPoint","qualname":"::sec1::FromEncodedPoint","value":"FromEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Trait for deserializing a value from a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for deserializing a value from a SEC1 encoded curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11623,"byte_end":11691,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11692,"byte_end":11695,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11696,"byte_end":11780,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11967,"byte_end":11985,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"::sec1::FromEncodedPoint::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> CtOption<Self>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Deserialize the type this trait is impl'd on from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Deserialize the type this trait is impl'd on from an [`EncodedPoint`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":11885,"byte_end":11959,"line_start":25,"line_end":25,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12197,"byte_end":12211,"line_start":32,"line_end":32,"column_start":11,"column_end":25},"name":"ToEncodedPoint","qualname":"::sec1::ToEncodedPoint","value":"ToEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":109}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12033,"byte_end":12097,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12098,"byte_end":12101,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12102,"byte_end":12186,"line_start":31,"line_end":31,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12379,"byte_end":12395,"line_start":39,"line_end":39,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"::sec1::ToEncodedPoint::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12272,"byte_end":12344,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12349,"byte_end":12371,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12622,"byte_end":12643,"line_start":45,"line_end":45,"column_start":11,"column_end":32},"name":"ToCompactEncodedPoint","qualname":"::sec1::ToCompactEncodedPoint","value":"ToCompactEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":112}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point with compaction.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point with compaction.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12442,"byte_end":12522,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12523,"byte_end":12526,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12527,"byte_end":12611,"line_start":44,"line_end":44,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12811,"byte_end":12835,"line_start":52,"line_end":52,"column_start":8,"column_end":32},"name":"to_compact_encoded_point","qualname":"::sec1::ToCompactEncodedPoint::to_compact_encoded_point","value":"pub fn to_compact_encoded_point(&Self) -> CtOption<EncodedPoint<C>>","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12704,"byte_end":12776,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12781,"byte_end":12803,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13122,"byte_end":13139,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"ValidatePublicKey","qualname":"::sec1::ValidatePublicKey","value":"ValidatePublicKey","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] represents the encoded public key\n value of the given secret.","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] represents the encoded public key","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12876,"byte_end":12954,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ value of the given secret.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12955,"byte_end":12985,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12986,"byte_end":12989,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Curve implementations which also impl [`ProjectiveArithmetic`] will receive","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":12990,"byte_end":13069,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ a blanket default impl of this trait.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13070,"byte_end":13111,"line_start":59,"line_end":59,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13347,"byte_end":13366,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"validate_public_key","qualname":"::sec1::ValidatePublicKey::validate_public_key","value":"pub fn validate_public_key(&SecretKey<Self>, &EncodedPoint<Self>)\n-> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] is a valid public key for the\n provided secret value.\n","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] is a valid public key for the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13203,"byte_end":13277,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ provided secret value.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13282,"byte_end":13308,"line_start":66,"line_end":66,"column_start":5,"column_end":31}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13313,"byte_end":13339,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14548,"byte_end":14554,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type with the `elliptic-curve` crate's [`Error`] type.\n","sig":null,"attributes":[{"value":"/ Result type with the `elliptic-curve` crate's [`Error`] type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14473,"byte_end":14538,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14676,"byte_end":14681,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Elliptic curve errors.\n","sig":null,"attributes":[{"value":"/ Elliptic curve errors.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14593,"byte_end":14619,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":149},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15407,"byte_end":15424,"line_start":7,"line_end":7,"column_start":11,"column_end":28},"name":"AffineXCoordinate","qualname":"::point::AffineXCoordinate","value":"AffineXCoordinate<C: Curve>","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Obtain the affine x-coordinate of an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Obtain the affine x-coordinate of an elliptic curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15334,"byte_end":15396,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15511,"byte_end":15512,"line_start":9,"line_end":9,"column_start":8,"column_end":9},"name":"x","qualname":"::point::AffineXCoordinate::x","value":"pub fn x(&Self) -> FieldBytes<C>","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Get the affine x-coordinate as a serialized field element.\n","sig":null,"attributes":[{"value":"/ Get the affine x-coordinate as a serialized field element.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15441,"byte_end":15503,"line_start":8,"line_end":8,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15748,"byte_end":15763,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"DecompressPoint","qualname":"::point::DecompressPoint","value":"DecompressPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" Decompress an elliptic curve point.","sig":null,"attributes":[{"value":"/ Decompress an elliptic curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15541,"byte_end":15580,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15581,"byte_end":15584,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Point decompression recovers an original curve point from its x-coordinate","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15585,"byte_end":15663,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ and a boolean flag indicating whether or not the y-coordinate is odd.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15664,"byte_end":15737,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15845,"byte_end":15855,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"decompress","qualname":"::point::DecompressPoint::decompress","value":"pub fn decompress(&FieldBytes<C>, Choice) -> CtOption<Self>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Attempt to decompress an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Attempt to decompress an elliptic curve point.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15787,"byte_end":15837,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":155},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16135,"byte_end":16149,"line_start":25,"line_end":25,"column_start":11,"column_end":25},"name":"DecompactPoint","qualname":"::point::DecompactPoint","value":"DecompactPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":157}],"decl_id":null,"docs":" Decompact an elliptic curve point from an x-coordinate.","sig":null,"attributes":[{"value":"/ Decompact an elliptic curve point from an x-coordinate.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15915,"byte_end":15974,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15975,"byte_end":15978,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Decompaction relies on properties of specially-generated keys but provides","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15979,"byte_end":16057,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ a more compact representation than standard point compression.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16058,"byte_end":16124,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16229,"byte_end":16238,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"decompact","qualname":"::point::DecompactPoint::decompact","value":"pub fn decompact(&FieldBytes<C>) -> CtOption<Self>","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Attempt to decompact an elliptic curve point\n","sig":null,"attributes":[{"value":"/ Attempt to decompact an elliptic curve point","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16173,"byte_end":16221,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16322,"byte_end":16338,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"PointCompression","qualname":"::point::PointCompression","value":"PointCompression","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":" Point compression settings.\n","sig":null,"attributes":[{"value":"/ Point compression settings.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16280,"byte_end":16311,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":159},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16407,"byte_end":16422,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"COMPRESS_POINTS","qualname":"::point::PointCompression::COMPRESS_POINTS","value":"bool","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Should point compression be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compression be applied by default?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16345,"byte_end":16396,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16474,"byte_end":16489,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"PointCompaction","qualname":"::point::PointCompaction","value":"PointCompaction","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Point compaction settings.\n","sig":null,"attributes":[{"value":"/ Point compaction settings.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16433,"byte_end":16463,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16557,"byte_end":16571,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"COMPACT_POINTS","qualname":"::point::PointCompaction::COMPACT_POINTS","value":"bool","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Should point compaction be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compaction be applied by default?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16496,"byte_end":16546,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":945},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18907,"byte_end":18917,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"ScalarCore","qualname":"::scalar::core::ScalarCore","value":"ScalarCore {  }","parent":null,"children":[{"krate":0,"index":947}],"decl_id":null,"docs":" Generic scalar type with core functionality.","sig":null,"attributes":[{"value":"/ Generic scalar type with core functionality.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18167,"byte_end":18215,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18216,"byte_end":18219,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type provides a baseline level of scalar arithmetic functionality","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18220,"byte_end":18294,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ which is always available for all curves, regardless of if they implement","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18295,"byte_end":18372,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ any arithmetic traits.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18373,"byte_end":18399,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18400,"byte_end":18403,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18404,"byte_end":18425,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18426,"byte_end":18429,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18430,"byte_end":18508,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18509,"byte_end":18566,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18567,"byte_end":18570,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The serialization is a fixed-width big endian encoding. When used with","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18571,"byte_end":18645,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ textual formats, the binary data is encoded as hexadecimal.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18646,"byte_end":18709,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":265},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19069,"byte_end":19073,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::core::ScalarCore::<C>::ZERO","value":"Self","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Zero scalar.\n","sig":null,"attributes":[{"value":"/ Zero scalar.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19038,"byte_end":19054,"line_start":56,"line_end":56,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":266},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19174,"byte_end":19177,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::core::ScalarCore::<C>::ONE","value":"Self","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19131,"byte_end":19159,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":267},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19268,"byte_end":19275,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"MODULUS","qualname":"::scalar::core::ScalarCore::<C>::MODULUS","value":"C::UInt","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Scalar modulus.\n","sig":null,"attributes":[{"value":"/ Scalar modulus.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19234,"byte_end":19253,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19351,"byte_end":19357,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"random","qualname":"<ScalarCore<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`ScalarCore`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`ScalarCore`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19302,"byte_end":19339,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19576,"byte_end":19579,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalarCore<C>>::new","value":"pub fn new(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scalar from [`Curve::UInt`].\n","sig":null,"attributes":[{"value":"/ Create a new scalar from [`Curve::UInt`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19519,"byte_end":19564,"line_start":76,"line_end":76,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19758,"byte_end":19771,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<ScalarCore<C>>::from_be_bytes","value":"pub fn from_be_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from big endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from big endian bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19698,"byte_end":19746,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19946,"byte_end":19959,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"from_be_slice","qualname":"<ScalarCore<C>>::from_be_slice","value":"pub fn from_be_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a big endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a big endian byte slice.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":19879,"byte_end":19934,"line_start":86,"line_end":86,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20261,"byte_end":20274,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"from_le_bytes","qualname":"<ScalarCore<C>>::from_le_bytes","value":"pub fn from_le_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from little endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from little endian bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20198,"byte_end":20249,"line_start":95,"line_end":95,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20452,"byte_end":20465,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_le_slice","qualname":"<ScalarCore<C>>::from_le_slice","value":"pub fn from_le_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a little endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a little endian byte slice.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20382,"byte_end":20440,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20747,"byte_end":20754,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<ScalarCore<C>>::as_uint","value":"pub fn as_uint(&Self) -> &C::UInt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Borrow the inner `C::UInt`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20704,"byte_end":20735,"line_start":109,"line_end":109,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20857,"byte_end":20865,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"as_limbs","qualname":"<ScalarCore<C>>::as_limbs","value":"pub fn as_limbs(&Self) -> &[Limb]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner limbs as a slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner limbs as a slice.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20807,"byte_end":20845,"line_start":114,"line_end":114,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20984,"byte_end":20991,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<ScalarCore<C>>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value equal to zero?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value equal to zero?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":20925,"byte_end":20972,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21101,"byte_end":21108,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"is_even","qualname":"<ScalarCore<C>>::is_even","value":"pub fn is_even(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value even?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value even?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21051,"byte_end":21089,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21217,"byte_end":21223,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<ScalarCore<C>>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value odd?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value odd?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21168,"byte_end":21205,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21340,"byte_end":21351,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<ScalarCore<C>>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as big endian bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21282,"byte_end":21328,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21487,"byte_end":21498,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<ScalarCore<C>>::to_le_bytes","value":"pub fn to_le_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as little endian bytes.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21426,"byte_end":21475,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":959},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29052,"byte_end":29065,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"NonZeroScalar","qualname":"::scalar::nonzero::NonZeroScalar","value":"NonZeroScalar {  }","parent":null,"children":[{"krate":0,"index":961}],"decl_id":null,"docs":" Non-zero scalar type.","sig":null,"attributes":[{"value":"/ Non-zero scalar type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28596,"byte_end":28621,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28622,"byte_end":28625,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type ensures that its value is not zero, ala `core::num::NonZero*`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28626,"byte_end":28702,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ To do this, the generic `S` type must impl both `Default` and","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28703,"byte_end":28768,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ `ConstantTimeEq`, with the requirement that `S::default()` returns 0.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28769,"byte_end":28842,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28843,"byte_end":28846,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the context of ECC, it's useful for ensuring that scalar multiplication","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28847,"byte_end":28925,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ cannot result in the point at infinity.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":28926,"byte_end":28969,"line_start":29,"line_end":29,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29256,"byte_end":29262,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"random","qualname":"<NonZeroScalar<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random `NonZeroScalar`.\n","sig":null,"attributes":[{"value":"/ Generate a random `NonZeroScalar`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29206,"byte_end":29244,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29748,"byte_end":29751,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<NonZeroScalar<C>>::new","value":"pub fn new(Scalar<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a scalar.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a scalar.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29691,"byte_end":29736,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29946,"byte_end":29955,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_repr","qualname":"<NonZeroScalar<C>>::from_repr","value":"pub fn from_repr(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode a [`NonZeroScalar`] from a big endian-serialized field element.\n","sig":null,"attributes":[{"value":"/ Decode a [`NonZeroScalar`] from a big endian-serialized field element.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29860,"byte_end":29934,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30125,"byte_end":30134,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_uint","qualname":"<NonZeroScalar<C>>::from_uint","value":"pub fn from_uint(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a `C::UInt`.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30065,"byte_end":30113,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":564},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":16913,"byte_end":16919,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::scalar::Scalar","value":"<C as ScalarArithmetic>::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Scalar field element for a particular elliptic curve.\n","sig":null,"attributes":[{"value":"/ Scalar field element for a particular elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":16761,"byte_end":16818,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":16819,"byte_end":16849,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":566},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17372,"byte_end":17378,"line_start":29,"line_end":29,"column_start":11,"column_end":17},"name":"IsHigh","qualname":"::scalar::IsHigh","value":"IsHigh","parent":null,"children":[{"krate":0,"index":567}],"decl_id":null,"docs":" Is this scalar greater than n / 2?","sig":null,"attributes":[{"value":"/ Is this scalar greater than n / 2?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17185,"byte_end":17223,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17224,"byte_end":17227,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17228,"byte_end":17241,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17242,"byte_end":17245,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - For scalars 0 through n / 2: `Choice::from(0)`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17246,"byte_end":17298,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ - For scalars (n / 2) + 1 through n - 1: `Choice::from(1)`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17299,"byte_end":17361,"line_start":28,"line_end":28,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17443,"byte_end":17450,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"is_high","qualname":"::scalar::IsHigh::is_high","value":"pub fn is_high(&Self) -> Choice","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar.rs","byte_start":17385,"byte_end":17435,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39424,"byte_end":39433,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::secret_key::SecretKey","value":"SecretKey {  }","parent":null,"children":[{"krate":0,"index":967}],"decl_id":null,"docs":" Elliptic curve secret keys.","sig":null,"attributes":[{"value":"/ Elliptic curve secret keys.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38468,"byte_end":38499,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38500,"byte_end":38503,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type wraps a secret scalar value, helping to prevent accidental","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38504,"byte_end":38576,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ exposure and securely erasing the value from memory when dropped.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38577,"byte_end":38646,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38647,"byte_end":38650,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Parsing PKCS#8 Keys","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38651,"byte_end":38676,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38677,"byte_end":38680,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ PKCS#8 is a commonly used format for encoding secret keys (especially ones","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38681,"byte_end":38759,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ generated by OpenSSL).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38760,"byte_end":38786,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38787,"byte_end":38790,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Keys in PKCS#8 format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38791,"byte_end":38866,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38867,"byte_end":38908,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38909,"byte_end":38912,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38913,"byte_end":38924,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38925,"byte_end":38956,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38957,"byte_end":38964,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38965,"byte_end":38968,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve private key from PKCS#8, enable the `pkcs8`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":38969,"byte_end":39044,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39045,"byte_end":39119,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39120,"byte_end":39157,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ [`elliptic_curve::pkcs8::DecodePrivateKey`][`DecodePrivateKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39158,"byte_end":39225,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/ trait to parse it.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39226,"byte_end":39248,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39249,"byte_end":39252,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39253,"byte_end":39328,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39329,"byte_end":39395,"line_start":86,"line_end":86,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39684,"byte_end":39690,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self where C: ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`SecretKey`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`SecretKey`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39543,"byte_end":39579,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39584,"byte_end":39614,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39934,"byte_end":39937,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey<C>>::new","value":"pub fn new(ScalarCore<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new secret key from a scalar value.\n","sig":null,"attributes":[{"value":"/ Create a new secret key from a scalar value.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39874,"byte_end":39922,"line_start":109,"line_end":109,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40210,"byte_end":40224,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"as_scalar_core","qualname":"<SecretKey<C>>::as_scalar_core","value":"pub fn as_scalar_core(&Self) -> &ScalarCore<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner secret [`ScalarCore`] value.","sig":null,"attributes":[{"value":"/ Borrow the inner secret [`ScalarCore`] value.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40013,"byte_end":40062,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40067,"byte_end":40070,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40075,"byte_end":40095,"line_start":116,"line_end":116,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40100,"byte_end":40103,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40108,"byte_end":40139,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40144,"byte_end":40147,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40152,"byte_end":40198,"line_start":120,"line_end":120,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40580,"byte_end":40597,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"to_nonzero_scalar","qualname":"<SecretKey<C>>::to_nonzero_scalar","value":"pub fn to_nonzero_scalar(&Self) -> NonZeroScalar<C> where C: Curve +\nProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the secret [`NonZeroScalar`] value for this key.","sig":null,"attributes":[{"value":"/ Get the secret [`NonZeroScalar`] value for this key.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40283,"byte_end":40339,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40344,"byte_end":40347,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40352,"byte_end":40372,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40377,"byte_end":40380,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40385,"byte_end":40416,"line_start":129,"line_end":129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40421,"byte_end":40424,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40429,"byte_end":40475,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40480,"byte_end":40510,"line_start":132,"line_end":132,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40880,"byte_end":40890,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey<C>>::public_key","value":"pub fn public_key(&Self) -> PublicKey<C> where C: Curve + ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the [`PublicKey`] which corresponds to this secret key\n","sig":null,"attributes":[{"value":"/ Get the [`PublicKey`] which corresponds to this secret key","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40713,"byte_end":40775,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":40780,"byte_end":40810,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41117,"byte_end":41130,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<SecretKey<C>>::from_be_bytes","value":"pub fn from_be_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Deserialize raw secret scalar as a big endian integer.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41047,"byte_end":41105,"line_start":151,"line_end":151,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41598,"byte_end":41609,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SecretKey<C>>::to_be_bytes","value":"pub fn to_be_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Serialize raw secret scalar as a big endian integer.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41530,"byte_end":41586,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41857,"byte_end":41870,"line_start":177,"line_end":177,"column_start":12,"column_end":25},"name":"from_sec1_der","qualname":"<SecretKey<C>>::from_sec1_der","value":"pub fn from_sec1_der(&[u8]) -> Result<Self> where C: Curve +\nValidatePublicKey, FieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41680,"byte_end":41759,"line_start":174,"line_end":174,"column_start":5,"column_end":84}},{"value":"cfg(all(feature = \"sec1\"))","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":41764,"byte_end":41793,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":48967,"byte_end":48983,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"AffineArithmetic","qualname":"::arithmetic::AffineArithmetic","value":"AffineArithmetic: Curve + ScalarArithmetic","parent":null,"children":[{"krate":0,"index":720}],"decl_id":null,"docs":" Elliptic curve with affine arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with affine arithmetic implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":48845,"byte_end":48902,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":720},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49073,"byte_end":49084,"line_start":14,"line_end":14,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::arithmetic::AffineArithmetic::AffinePoint","value":"type AffinePoint: 'static\n        + AffineXCoordinate<Self>\n        + Copy\n        + Clone\n        + ConditionallySelectable\n        + ConstantTimeEq\n        + Debug\n        + Default\n        + DefaultIsZeroes\n        + Eq\n        + PartialEq\n        + Sized\n        + Send\n        + Sync;","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Elliptic curve point in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Elliptic curve point in affine coordinates.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49016,"byte_end":49063,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":721},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49499,"byte_end":49519,"line_start":32,"line_end":32,"column_start":11,"column_end":31},"name":"PrimeCurveArithmetic","qualname":"::arithmetic::PrimeCurveArithmetic","value":"PrimeCurveArithmetic: PrimeCurve + ProjectiveArithmetic<ProjectivePoint = Self::CurveGroup>","parent":null,"children":[{"krate":0,"index":722}],"decl_id":null,"docs":" Prime order elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve with projective arithmetic implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49361,"byte_end":49434,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":722},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49648,"byte_end":49658,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"CurveGroup","qualname":"::arithmetic::PrimeCurveArithmetic::CurveGroup","value":"type CurveGroup: group::prime::PrimeCurve<Affine = <Self as AffineArithmetic>::AffinePoint>;","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":" Prime order elliptic curve group.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve group.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49601,"byte_end":49638,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49865,"byte_end":49885,"line_start":41,"line_end":41,"column_start":11,"column_end":31},"name":"ProjectiveArithmetic","qualname":"::arithmetic::ProjectiveArithmetic","value":"ProjectiveArithmetic: Curve + AffineArithmetic","parent":null,"children":[{"krate":0,"index":724}],"decl_id":null,"docs":" Elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with projective arithmetic implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49739,"byte_end":49800,"line_start":39,"line_end":39,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":724},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50210,"byte_end":50225,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::arithmetic::ProjectiveArithmetic::ProjectivePoint","value":"type ProjectivePoint: ConditionallySelectable\n        + ConstantTimeEq\n        + Default\n        + DefaultIsZeroes\n        + From<Self::AffinePoint>\n        + Into<Self::AffinePoint>\n        + LinearCombination\n        + group::Curve<AffineRepr = Self::AffinePoint>\n        + group::Group<Scalar = Self::Scalar>;","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Elliptic curve point in projective coordinates.","sig":null,"attributes":[{"value":"/ Elliptic curve point in projective coordinates.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49918,"byte_end":49969,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49974,"byte_end":49977,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`group::Group`]:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49982,"byte_end":50046,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/ - `'static`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50051,"byte_end":50066,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50071,"byte_end":50085,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50090,"byte_end":50105,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/ - [`Debug`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50110,"byte_end":50125,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/ - [`Eq`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50130,"byte_end":50142,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ - [`Sized`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50147,"byte_end":50162,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/ - [`Send`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50167,"byte_end":50181,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50186,"byte_end":50200,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":725},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50639,"byte_end":50655,"line_start":67,"line_end":67,"column_start":11,"column_end":27},"name":"ScalarArithmetic","qualname":"::arithmetic::ScalarArithmetic","value":"ScalarArithmetic: Curve","parent":null,"children":[{"krate":0,"index":726}],"decl_id":null,"docs":" Scalar arithmetic.\n","sig":null,"attributes":[{"value":"/ Scalar arithmetic.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50521,"byte_end":50543,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50544,"byte_end":50574,"line_start":65,"line_end":65,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":726},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50981,"byte_end":50987,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::arithmetic::ScalarArithmetic::Scalar","value":"type Scalar: DefaultIsZeroes\n        + From<ScalarCore<Self>>\n        + Into<FieldBytes<Self>>\n        + Into<Self::UInt>\n        + IsHigh\n        + ff::Field\n        + ff::PrimeField<Repr = FieldBytes<Self>>;","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Scalar field type.","sig":null,"attributes":[{"value":"/ Scalar field type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50669,"byte_end":50691,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50696,"byte_end":50699,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`ff::Field`]:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50704,"byte_end":50765,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ - `'static`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50770,"byte_end":50785,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50790,"byte_end":50804,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50809,"byte_end":50824,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/ - [`ConditionallySelectable`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50829,"byte_end":50862,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ - [`ConstantTimeEq`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50867,"byte_end":50891,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/ - [`Debug`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50896,"byte_end":50911,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - [`Default`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50916,"byte_end":50933,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ - [`Send`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50938,"byte_end":50952,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50957,"byte_end":50971,"line_start":79,"line_end":79,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53642,"byte_end":53651,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::public_key::PublicKey","value":"PublicKey {  }","parent":null,"children":[{"krate":0,"index":973}],"decl_id":null,"docs":" Elliptic curve public keys.","sig":null,"attributes":[{"value":"/ Elliptic curve public keys.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52134,"byte_end":52165,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52166,"byte_end":52169,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type for [`AffinePoint`] which ensures an inner","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52170,"byte_end":52239,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/ non-identity point and provides a common place to handle encoding/decoding.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52240,"byte_end":52319,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52320,"byte_end":52323,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Parsing \"SPKI\" Keys","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52324,"byte_end":52349,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52350,"byte_end":52353,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ X.509 `SubjectPublicKeyInfo` (SPKI) is a commonly used format for encoding","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52354,"byte_end":52432,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ public keys, notably public keys corresponding to PKCS#8 private keys.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52433,"byte_end":52507,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ (especially ones generated by OpenSSL).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52508,"byte_end":52551,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52552,"byte_end":52555,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Keys in SPKI format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52556,"byte_end":52629,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52630,"byte_end":52671,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52672,"byte_end":52675,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52676,"byte_end":52687,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PUBLIC KEY-----","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52688,"byte_end":52718,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52719,"byte_end":52726,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52727,"byte_end":52730,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve public key from SPKI, enable the `pkcs8`","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52731,"byte_end":52803,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52804,"byte_end":52878,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52879,"byte_end":52916,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/ [`elliptic_curve::pkcs8::DecodePublicKey`][`pkcs8::DecodePublicKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52917,"byte_end":52989,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ trait to parse it.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":52990,"byte_end":53012,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53013,"byte_end":53016,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53017,"byte_end":53092,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53093,"byte_end":53159,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53160,"byte_end":53163,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53164,"byte_end":53185,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53186,"byte_end":53189,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53190,"byte_end":53268,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53269,"byte_end":53326,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53327,"byte_end":53330,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The serialization is binary-oriented and supports ASN.1 DER","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53331,"byte_end":53394,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ Subject Public Key Info (SPKI) as the encoding format.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53395,"byte_end":53453,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53454,"byte_end":53457,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ For a more text-friendly encoding of public keys, use [`JwkEcKey`] instead.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53458,"byte_end":53537,"line_start":73,"line_end":73,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53863,"byte_end":53874,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<PublicKey<C>>::from_affine","value":"pub fn from_affine(AffinePoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AffinePoint`] into a [`PublicKey`]\n","sig":null,"attributes":[{"value":"/ Convert an [`AffinePoint`] into a [`PublicKey`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53800,"byte_end":53851,"line_start":87,"line_end":87,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54215,"byte_end":54233,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"from_secret_scalar","qualname":"<PublicKey<C>>::from_secret_scalar","value":"pub fn from_secret_scalar(&NonZeroScalar<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value\n (i.e. a secret key represented as a raw scalar value)\n","sig":null,"attributes":[{"value":"/ Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54076,"byte_end":54141,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ (i.e. a secret key represented as a raw scalar value)","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54146,"byte_end":54203,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54778,"byte_end":54793,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<PublicKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self> where C: Curve,\nFieldSize<C>: ModulusSize, AffinePoint<C>: FromEncodedPoint<C> +\nToEncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`PublicKey`] (compressed or uncompressed) from the\n `Elliptic-Curve-Point-to-Octet-String` encoding described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode [`PublicKey`] (compressed or uncompressed) from the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54466,"byte_end":54528,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding described in","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54533,"byte_end":54597,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54602,"byte_end":54662,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54667,"byte_end":54687,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54692,"byte_end":54695,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54700,"byte_end":54737,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":54742,"byte_end":54766,"line_start":111,"line_end":111,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55251,"byte_end":55260,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"as_affine","qualname":"<PublicKey<C>>::as_affine","value":"pub fn as_affine(&Self) -> &AffinePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner [`AffinePoint`] from this [`PublicKey`].","sig":null,"attributes":[{"value":"/ Borrow the inner [`AffinePoint`] from this [`PublicKey`].","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55115,"byte_end":55176,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55181,"byte_end":55184,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In ECC, public keys are elliptic curve points.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55189,"byte_end":55239,"line_start":124,"line_end":124,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55407,"byte_end":55420,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<PublicKey<C>>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve\n","sig":null,"attributes":[{"value":"/ Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":55320,"byte_end":55395,"line_start":129,"line_end":129,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4863,"byte_end":4868,"line_start":159,"line_end":159,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: 'static + Copy + Clone + Debug + Default + Eq + Ord + Send + Sync","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":" Elliptic curve.","sig":null,"attributes":[{"value":"/ Elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4537,"byte_end":4556,"line_start":151,"line_end":151,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4557,"byte_end":4560,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be impl'd by a ZST which represents a concrete","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4561,"byte_end":4637,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4638,"byte_end":4657,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Other traits in this crate which are bounded by [`Curve`] are intended to","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4662,"byte_end":4739,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ be impl'd by these ZSTs, facilitating types which are generic over elliptic","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4740,"byte_end":4819,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ curves (e.g. [`SecretKey`]).","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4820,"byte_end":4852,"line_start":158,"line_end":158,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":921},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5175,"byte_end":5179,"line_start":163,"line_end":163,"column_start":10,"column_end":14},"name":"UInt","qualname":"::Curve::UInt","value":"type UInt: bigint::AddMod<Output = Self::UInt>\n        + bigint::ArrayEncoding\n        + bigint::Encoding\n        + bigint::Integer\n        + bigint::NegMod<Output = Self::UInt>\n        + bigint::Random\n        + bigint::RandomMod\n        + bigint::SubMod<Output = Self::UInt>\n        + zeroize::Zeroize;","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Integer type used to represent field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Integer type used to represent field elements of this elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4942,"byte_end":5015,"line_start":160,"line_end":160,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":922},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5667,"byte_end":5672,"line_start":177,"line_end":177,"column_start":11,"column_end":16},"name":"ORDER","qualname":"::Curve::ORDER","value":"Self::UInt","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Order constant.","sig":null,"attributes":[{"value":"/ Order constant.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5480,"byte_end":5499,"line_start":173,"line_end":173,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5504,"byte_end":5507,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Subdivided into either 32-bit or 64-bit \"limbs\" (depending on the","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5512,"byte_end":5581,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ target CPU's word size), specified from least to most significant.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5586,"byte_end":5656,"line_start":176,"line_end":176,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":923},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5754,"byte_end":5764,"line_start":181,"line_end":181,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::PrimeCurve","value":"PrimeCurve: Curve","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for elliptic curves with prime order.\n","sig":null,"attributes":[{"value":"/ Marker trait for elliptic curves with prime order.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5689,"byte_end":5743,"line_start":180,"line_end":180,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":924},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5836,"byte_end":5845,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"name":"FieldSize","qualname":"::FieldSize","value":"<<C as Curve>::UInt as bigint::ArrayEncoding>::ByteSize","parent":null,"children":[],"decl_id":null,"docs":" Size of field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of field elements of this elliptic curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5776,"byte_end":5826,"line_start":183,"line_end":183,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":926},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5991,"byte_end":6001,"line_start":187,"line_end":187,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"GenericArray<u8, FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Byte representation of a base/scalar field element of a given curve.\n","sig":null,"attributes":[{"value":"/ Byte representation of a base/scalar field element of a given curve.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5909,"byte_end":5981,"line_start":186,"line_end":186,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":928},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6226,"byte_end":6237,"line_start":193,"line_end":193,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::AffinePoint","value":"<C as AffineArithmetic>::AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Affine point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Affine point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6040,"byte_end":6111,"line_start":189,"line_end":189,"column_start":1,"column_end":72}},{"value":"/ implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6112,"byte_end":6131,"line_start":190,"line_end":190,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6186,"byte_end":6216,"line_start":192,"line_end":192,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":930},"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6472,"byte_end":6487,"line_start":199,"line_end":199,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::ProjectivePoint","value":"<C as ProjectiveArithmetic>::ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Projective point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Projective point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6282,"byte_end":6357,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/ implementation.","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6358,"byte_end":6377,"line_start":196,"line_end":196,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":6378,"byte_end":6408,"line_start":197,"line_end":197,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8617,"byte_end":8618,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13916,"byte_end":13917,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14701,"byte_end":14706,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14848,"byte_end":14853,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":15099,"byte_end":15104,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18998,"byte_end":19008,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21610,"byte_end":21620,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21989,"byte_end":21999,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22128,"byte_end":22138,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22373,"byte_end":22383,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22532,"byte_end":22542,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22694,"byte_end":22704,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22859,"byte_end":22869,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22899,"byte_end":22909,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22939,"byte_end":22949,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23081,"byte_end":23091,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23234,"byte_end":23244,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23384,"byte_end":23394,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23552,"byte_end":23562,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23719,"byte_end":23729,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23961,"byte_end":23971,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24119,"byte_end":24129,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24271,"byte_end":24281,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24438,"byte_end":24448,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24680,"byte_end":24690,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24838,"byte_end":24848,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24975,"byte_end":24985,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25318,"byte_end":25328,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25486,"byte_end":25496,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25652,"byte_end":25662,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25845,"byte_end":25855,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":26037,"byte_end":26047,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29144,"byte_end":29157,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30282,"byte_end":30295,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30443,"byte_end":30456,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30717,"byte_end":30730,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30888,"byte_end":30901,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30961,"byte_end":30974,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31150,"byte_end":31160,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31335,"byte_end":31345,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31517,"byte_end":31527,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31735,"byte_end":31745,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31949,"byte_end":31962,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32124,"byte_end":32137,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32395,"byte_end":32408,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32695,"byte_end":32708,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32842,"byte_end":32855,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33141,"byte_end":33154,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33359,"byte_end":33372,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33827,"byte_end":33840,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34075,"byte_end":34088,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34436,"byte_end":34449,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34840,"byte_end":34853,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35202,"byte_end":35215,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35390,"byte_end":35403,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35601,"byte_end":35614,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35810,"byte_end":35823,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39504,"byte_end":39513,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46350,"byte_end":46359,"line_start":309,"line_end":309,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46497,"byte_end":46506,"line_start":318,"line_end":318,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46776,"byte_end":46785,"line_start":328,"line_end":328,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46825,"byte_end":46834,"line_start":330,"line_end":330,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46946,"byte_end":46955,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46985,"byte_end":46994,"line_start":341,"line_end":341,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":47225,"byte_end":47234,"line_start":352,"line_end":352,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":48119,"byte_end":48128,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":48396,"byte_end":48405,"line_start":390,"line_end":390,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53738,"byte_end":53747,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57084,"byte_end":57093,"line_start":183,"line_end":183,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57235,"byte_end":57244,"line_start":192,"line_end":192,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57395,"byte_end":57404,"line_start":196,"line_end":196,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58024,"byte_end":58033,"line_start":213,"line_end":213,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58512,"byte_end":58524,"line_start":228,"line_end":228,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58902,"byte_end":58914,"line_start":241,"line_end":241,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":59295,"byte_end":59304,"line_start":254,"line_end":254,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":59635,"byte_end":59644,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2692,"byte_end":2695,"line_start":70,"line_end":70,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":2731,"byte_end":2735,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":65}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":8617,"byte_end":8618,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":48},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9152,"byte_end":9157,"line_start":39,"line_end":39,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":10,"index":176},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":9386,"byte_end":9391,"line_start":47,"line_end":47,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/ops.rs","byte_start":11043,"byte_end":11048,"line_start":93,"line_end":93,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/sec1.rs","byte_start":13916,"byte_end":13917,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":116},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14701,"byte_end":14706,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":14848,"byte_end":14853,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/error.rs","byte_start":15099,"byte_end":15104,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":15775,"byte_end":15780,"line_start":16,"line_end":16,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/point.rs","byte_start":16161,"byte_end":16166,"line_start":25,"line_end":25,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":155}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":18998,"byte_end":19008,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21610,"byte_end":21620,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":21989,"byte_end":21999,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22128,"byte_end":22138,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":945},"to":{"krate":7,"index":65}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22373,"byte_end":22383,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":945},"to":{"krate":7,"index":57}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22532,"byte_end":22542,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":945},"to":{"krate":7,"index":108}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22694,"byte_end":22704,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":945},"to":{"krate":7,"index":105}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22859,"byte_end":22869,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":945},"to":{"krate":9,"index":83}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22899,"byte_end":22909,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":22939,"byte_end":22949,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23081,"byte_end":23091,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23234,"byte_end":23244,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23384,"byte_end":23394,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23552,"byte_end":23562,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23719,"byte_end":23729,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":23961,"byte_end":23971,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24119,"byte_end":24129,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24271,"byte_end":24281,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24438,"byte_end":24448,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24680,"byte_end":24690,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24838,"byte_end":24848,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":24975,"byte_end":24985,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25318,"byte_end":25328,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":566}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25486,"byte_end":25496,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25652,"byte_end":25662,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":9700}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":25845,"byte_end":25855,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":9702}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/core.rs","byte_start":26037,"byte_end":26047,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":12326}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":29144,"byte_end":29157,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30282,"byte_end":30295,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30443,"byte_end":30456,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":959},"to":{"krate":7,"index":65}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30717,"byte_end":30730,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":959},"to":{"krate":7,"index":57}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30888,"byte_end":30901,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":30961,"byte_end":30974,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31150,"byte_end":31160,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31335,"byte_end":31345,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31517,"byte_end":31527,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31735,"byte_end":31745,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":31949,"byte_end":31962,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32124,"byte_end":32137,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32395,"byte_end":32408,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32695,"byte_end":32708,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":566}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":32842,"byte_end":32855,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33141,"byte_end":33154,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33359,"byte_end":33372,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":33827,"byte_end":33840,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34075,"byte_end":34088,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34436,"byte_end":34449,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":34840,"byte_end":34853,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":959},"to":{"krate":9,"index":68}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35202,"byte_end":35215,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35390,"byte_end":35403,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":9700}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35601,"byte_end":35614,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":9702}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/scalar/nonzero.rs","byte_start":35810,"byte_end":35823,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":12326}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":39504,"byte_end":39513,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46350,"byte_end":46359,"line_start":309,"line_end":309,"column_start":28,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":965},"to":{"krate":7,"index":57}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46497,"byte_end":46506,"line_start":318,"line_end":318,"column_start":19,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46776,"byte_end":46785,"line_start":328,"line_end":328,"column_start":27,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":965},"to":{"krate":9,"index":70}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46825,"byte_end":46834,"line_start":330,"line_end":330,"column_start":18,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46946,"byte_end":46955,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":46985,"byte_end":46994,"line_start":341,"line_end":341,"column_start":23,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":47225,"byte_end":47234,"line_start":352,"line_end":352,"column_start":45,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":48119,"byte_end":48128,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/secret_key.rs","byte_start":48396,"byte_end":48405,"line_start":390,"line_end":390,"column_start":37,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":48985,"byte_end":48990,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":920},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":48993,"byte_end":49009,"line_start":12,"line_end":12,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":725},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49525,"byte_end":49535,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":721}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49538,"byte_end":49558,"line_start":33,"line_end":33,"column_start":18,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":723},"to":{"krate":0,"index":721}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49887,"byte_end":49892,"line_start":41,"line_end":41,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":920},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":49895,"byte_end":49911,"line_start":41,"line_end":41,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":719},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/arithmetic.rs","byte_start":50657,"byte_end":50662,"line_start":67,"line_end":67,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":920},"to":{"krate":0,"index":725}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":53738,"byte_end":53747,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57084,"byte_end":57093,"line_start":183,"line_end":183,"column_start":35,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57235,"byte_end":57244,"line_start":192,"line_end":192,"column_start":18,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":57395,"byte_end":57404,"line_start":196,"line_end":196,"column_start":33,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":971},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58024,"byte_end":58033,"line_start":213,"line_end":213,"column_start":31,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":971},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58512,"byte_end":58524,"line_start":228,"line_end":228,"column_start":32,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":102},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":58902,"byte_end":58914,"line_start":241,"line_end":241,"column_start":33,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":102},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":59295,"byte_end":59304,"line_start":254,"line_end":254,"column_start":24,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/public_key.rs","byte_start":59635,"byte_end":59644,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4880,"byte_end":4884,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4887,"byte_end":4892,"line_start":159,"line_end":159,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4895,"byte_end":4900,"line_start":159,"line_end":159,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9687},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4903,"byte_end":4910,"line_start":159,"line_end":159,"column_start":51,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4913,"byte_end":4915,"line_start":159,"line_end":159,"column_start":61,"column_end":63},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4918,"byte_end":4921,"line_start":159,"line_end":159,"column_start":66,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4924,"byte_end":4928,"line_start":159,"line_end":159,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3057},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":4931,"byte_end":4935,"line_start":159,"line_end":159,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":3069},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/codefoo/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.0-pre.1/src/lib.rs","byte_start":5766,"byte_end":5771,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":920},"to":{"krate":0,"index":923}}]}